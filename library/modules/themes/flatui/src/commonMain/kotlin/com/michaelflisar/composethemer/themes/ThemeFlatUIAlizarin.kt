package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIAlizarin : ComposeTheme.Group {

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("alizarin", "Alizarin")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFFB1241A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFD43E30)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF811B16)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA2332A)
            override val onSecondaryContainerLight = Color(0xFFFFC4BC)
            override val tertiaryLight = Color(0xFF954A00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE7873C)
            override val onTertiaryContainerLight = Color(0xFF582900)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5A413D)
            override val outlineLight = Color(0xFF8E706B)
            override val outlineVariantLight = Color(0xFFE2BEB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEFD4D0)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFEE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF8DCD8)
            override val primaryLightMediumContrast = Color(0xFF740002)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC93729)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6F0C0A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA2332A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF582900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA95709)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1B0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF48302D)
            override val outlineLightMediumContrast = Color(0xFF674C48)
            override val outlineVariantLightMediumContrast = Color(0xFF836662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDBC1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFEE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF2D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE6CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF950D09)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF600003)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF8B221B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF492100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF753900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3D2623)
            override val outlineVariantLightHighContrast = Color(0xFF5D433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCCB3AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF8DCD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE9CECA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDBC1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFFA5A48)
            override val onPrimaryContainerDark = Color(0xFF3F0000)
            override val secondaryDark = Color(0xFFFFB4AA)
            override val onSecondaryDark = Color(0xFF670506)
            override val secondaryContainerDark = Color(0xFFA2332A)
            override val onSecondaryContainerDark = Color(0xFFFFC4BC)
            override val tertiaryDark = Color(0xFFFFB785)
            override val onTertiaryDark = Color(0xFF502500)
            override val tertiaryContainerDark = Color(0xFFE7873C)
            override val onTertiaryContainerDark = Color(0xFF582900)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF8DCD8)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF8DCD8)
            override val surfaceVariantDark = Color(0xFF5A413D)
            override val onSurfaceVariantDark = Color(0xFFE2BEB9)
            override val outlineDark = Color(0xFFA98984)
            override val outlineVariantDark = Color(0xFF5A413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDark = Color(0xFF3D2C2A)
            override val inversePrimaryDark = Color(0xFFB4271D)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463532)
            override val surfaceContainerLowestDark = Color(0xFF180B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2B1C1A)
            override val surfaceContainerHighDark = Color(0xFF362624)
            override val surfaceContainerHighestDark = Color(0xFF42312E)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540001)
            override val primaryContainerDarkMediumContrast = Color(0xFFFA5A48)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540002)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEA685A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onTertiaryDarkMediumContrast = Color(0xFF401C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE7873C)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF230C00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF8DCD8)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF9D4CE)
            override val outlineDarkMediumContrast = Color(0xFFCDAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA98984)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF362624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF930A08)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF52403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF342422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3F2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4B3937)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF8DCD8)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDEBAB5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF930A08)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5F4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2B1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3D2C2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF493735)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF554240)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFFB1241A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFD43E30)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF811B16)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA2332A)
            override val onSecondaryContainerLight = Color(0xFFFFC4BC)
            override val tertiaryLight = Color(0xFF775654)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD4D0)
            override val onTertiaryContainerLight = Color(0xFF7A5A57)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5A413D)
            override val outlineLight = Color(0xFF8E706B)
            override val outlineVariantLight = Color(0xFFE2BEB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEFD4D0)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFEE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF8DCD8)
            override val primaryLightMediumContrast = Color(0xFF740002)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC93729)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6F0C0A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA2332A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF4A2F2D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF866562)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1B0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF48302D)
            override val outlineLightMediumContrast = Color(0xFF674C48)
            override val outlineVariantLightMediumContrast = Color(0xFF836662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDBC1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFEE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF2D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE6CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF950D09)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF600003)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF8B221B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3F2523)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5F423F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3D2623)
            override val outlineVariantLightHighContrast = Color(0xFF5D433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCCB3AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF8DCD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE9CECA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDBC1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFFA5A48)
            override val onPrimaryContainerDark = Color(0xFF3F0000)
            override val secondaryDark = Color(0xFFFFB4AA)
            override val onSecondaryDark = Color(0xFF670506)
            override val secondaryContainerDark = Color(0xFFA2332A)
            override val onSecondaryContainerDark = Color(0xFFFFC4BC)
            override val tertiaryDark = Color(0xFFFFF9F8)
            override val onTertiaryDark = Color(0xFF442927)
            override val tertiaryContainerDark = Color(0xFFFFD4D0)
            override val onTertiaryContainerDark = Color(0xFF7A5A57)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF8DCD8)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF8DCD8)
            override val surfaceVariantDark = Color(0xFF5A413D)
            override val onSurfaceVariantDark = Color(0xFFE2BEB9)
            override val outlineDark = Color(0xFFA98984)
            override val outlineVariantDark = Color(0xFF5A413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDark = Color(0xFF3D2C2A)
            override val inversePrimaryDark = Color(0xFFB4271D)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463532)
            override val surfaceContainerLowestDark = Color(0xFF180B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2B1C1A)
            override val surfaceContainerHighDark = Color(0xFF362624)
            override val surfaceContainerHighestDark = Color(0xFF42312E)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540001)
            override val primaryContainerDarkMediumContrast = Color(0xFFFA5A48)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540002)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEA685A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFF9F8)
            override val onTertiaryDarkMediumContrast = Color(0xFF442927)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFFD4D0)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF5B3E3B)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF8DCD8)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF9D4CE)
            override val outlineDarkMediumContrast = Color(0xFFCDAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA98984)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF362624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF930A08)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF52403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF342422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3F2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4B3937)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFF9F8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFD4D0)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF39201E)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF8DCD8)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDEBAB5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF930A08)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5F4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2B1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3D2C2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF493735)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF554240)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB1241A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFD43E30)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF006E23)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF3CE760)
            override val onSecondaryContainerLight = Color(0xFF00631F)
            override val tertiaryLight = Color(0xFF006B23)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF00872F)
            override val onTertiaryContainerLight = Color(0xFFF7FFF1)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5A413D)
            override val outlineLight = Color(0xFF8E706B)
            override val outlineVariantLight = Color(0xFFE2BEB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEFD4D0)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFEE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF8DCD8)
            override val primaryLightMediumContrast = Color(0xFF740002)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC93729)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF004011)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007F2A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF004011)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF007F2B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1B0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF48302D)
            override val outlineLightMediumContrast = Color(0xFF674C48)
            override val outlineVariantLightMediumContrast = Color(0xFF836662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDBC1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFEE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF2D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE6CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF950D09)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00340C)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00561A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF00340D)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF00561A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3D2623)
            override val outlineVariantLightHighContrast = Color(0xFF5D433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCCB3AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF8DCD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE9CECA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDBC1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFFA5A48)
            override val onPrimaryContainerDark = Color(0xFF3F0000)
            override val secondaryDark = Color(0xFF8BFF92)
            override val onSecondaryDark = Color(0xFF00390E)
            override val secondaryContainerDark = Color(0xFF3CE760)
            override val onSecondaryContainerDark = Color(0xFF00631F)
            override val tertiaryDark = Color(0xFF6BDE76)
            override val onTertiaryDark = Color(0xFF00390F)
            override val tertiaryContainerDark = Color(0xFF2FA546)
            override val onTertiaryContainerDark = Color(0xFF002E0A)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF8DCD8)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF8DCD8)
            override val surfaceVariantDark = Color(0xFF5A413D)
            override val onSurfaceVariantDark = Color(0xFFE2BEB9)
            override val outlineDark = Color(0xFFA98984)
            override val outlineVariantDark = Color(0xFF5A413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDark = Color(0xFF3D2C2A)
            override val inversePrimaryDark = Color(0xFFB4271D)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463532)
            override val surfaceContainerLowestDark = Color(0xFF180B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2B1C1A)
            override val surfaceContainerHighDark = Color(0xFF362624)
            override val surfaceContainerHighestDark = Color(0xFF42312E)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540001)
            override val primaryContainerDarkMediumContrast = Color(0xFFFA5A48)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFF8BFF92)
            override val onSecondaryDarkMediumContrast = Color(0xFF00350D)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3CE760)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF004312)
            override val tertiaryDarkMediumContrast = Color(0xFF81F58A)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D0A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF2FA546)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF8DCD8)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF9D4CE)
            override val outlineDarkMediumContrast = Color(0xFFCDAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA98984)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF362624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF930A08)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF52403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF342422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3F2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4B3937)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFC4FFC0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF3CE760)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF001B04)
            override val tertiaryDarkHighContrast = Color(0xFFC4FFC0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF67DA73)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F02)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF8DCD8)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDEBAB5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF930A08)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5F4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2B1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3D2C2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF493735)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF554240)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB1241A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFD43E30)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF811B16)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA2332A)
            override val onSecondaryContainerLight = Color(0xFFFFC4BC)
            override val tertiaryLight = Color(0xFF5C6300)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDAE73C)
            override val onTertiaryContainerLight = Color(0xFF5F6600)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5A413D)
            override val outlineLight = Color(0xFF8E706B)
            override val outlineVariantLight = Color(0xFFE2BEB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEFD4D0)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFEE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF8DCD8)
            override val primaryLightMediumContrast = Color(0xFF740002)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC93729)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6F0C0A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA2332A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF353900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6B7200)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1B0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF48302D)
            override val outlineLightMediumContrast = Color(0xFF674C48)
            override val outlineVariantLightMediumContrast = Color(0xFF836662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDBC1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFEE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF2D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE6CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF950D09)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF600003)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF8B221B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2B2F00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF484D00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3D2623)
            override val outlineVariantLightHighContrast = Color(0xFF5D433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3D2C2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCCB3AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF8DCD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE9CECA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDBC1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFFA5A48)
            override val onPrimaryContainerDark = Color(0xFF3F0000)
            override val secondaryDark = Color(0xFFFFB4AA)
            override val onSecondaryDark = Color(0xFF670506)
            override val secondaryContainerDark = Color(0xFFA2332A)
            override val onSecondaryContainerDark = Color(0xFFFFC4BC)
            override val tertiaryDark = Color(0xFFFAFFB7)
            override val onTertiaryDark = Color(0xFF2F3300)
            override val tertiaryContainerDark = Color(0xFFDAE73C)
            override val onTertiaryContainerDark = Color(0xFF5F6600)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF8DCD8)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF8DCD8)
            override val surfaceVariantDark = Color(0xFF5A413D)
            override val onSurfaceVariantDark = Color(0xFFE2BEB9)
            override val outlineDark = Color(0xFFA98984)
            override val outlineVariantDark = Color(0xFF5A413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDark = Color(0xFF3D2C2A)
            override val inversePrimaryDark = Color(0xFFB4271D)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463532)
            override val surfaceContainerLowestDark = Color(0xFF180B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2B1C1A)
            override val surfaceContainerHighDark = Color(0xFF362624)
            override val surfaceContainerHighestDark = Color(0xFF42312E)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540001)
            override val primaryContainerDarkMediumContrast = Color(0xFFFA5A48)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540002)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEA685A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFAFFB7)
            override val onTertiaryDarkMediumContrast = Color(0xFF2F3300)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDAE73C)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF434800)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF8DCD8)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF9D4CE)
            override val outlineDarkMediumContrast = Color(0xFFCDAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA98984)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF362624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF930A08)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF52403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF342422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3F2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4B3937)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFAFFB7)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDAE73C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF252900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF8DCD8)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5A413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDEBAB5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF8DCD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF930A08)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5F4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2B1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3D2C2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF493735)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF554240)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}