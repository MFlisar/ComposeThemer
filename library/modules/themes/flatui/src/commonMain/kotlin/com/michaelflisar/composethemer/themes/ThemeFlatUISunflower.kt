package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUISunflower : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF735C00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF1C40F)
            override val onPrimaryContainerLight = Color(0xFF665200)
            override val secondaryLight = Color(0xFF6A5F00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA8980B)
            override val onSecondaryContainerLight = Color(0xFF363000)
            override val tertiaryLight = Color(0xFF516600)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC3F00F)
            override val onTertiaryContainerLight = Color(0xFF556A00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F0)
            override val onBackgroundLight = Color(0xFF1F1B11)
            override val surfaceLight = Color(0xFFFFF8F0)
            override val onSurfaceLight = Color(0xFF1F1B11)
            override val surfaceVariantLight = Color(0xFFEEE1C7)
            override val onSurfaceVariantLight = Color(0xFF4D4632)
            override val outlineLight = Color(0xFF7F7660)
            override val outlineVariantLight = Color(0xFFD1C6AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF353025)
            override val inverseOnSurfaceLight = Color(0xFFF9F0DE)
            override val inversePrimaryLight = Color(0xFFEEC209)
            override val surfaceDimLight = Color(0xFFE2D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF3E1)
            override val surfaceContainerLight = Color(0xFFF6EDDC)
            override val surfaceContainerHighLight = Color(0xFFF0E7D6)
            override val surfaceContainerHighestLight = Color(0xFFEBE2D0)
            override val primaryLightMediumContrast = Color(0xFF433500)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF846A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7A6E00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2E3B00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5E7600)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightMediumContrast = Color(0xFF141107)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3C3623)
            override val outlineLightMediumContrast = Color(0xFF5A523D)
            override val outlineVariantLightMediumContrast = Color(0xFF756C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9F0DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFEEC209)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5DCCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9D1C0)
            override val primaryLightHighContrast = Color(0xFF372B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF594700)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF322C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF524A00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF253000)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3F4F00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightHighContrast = Color(0xFF1F1B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322C1A)
            override val outlineVariantLightHighContrast = Color(0xFF504935)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEEC209)
            override val surfaceDimLightHighContrast = Color(0xFFC0B8A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9F0DE)
            override val surfaceContainerLightHighContrast = Color(0xFFEBE2D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD3C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC6B5)
            override val primaryDark = Color(0xFFFFE391)
            override val onPrimaryDark = Color(0xFF3C2F00)
            override val primaryContainerDark = Color(0xFFF1C40F)
            override val onPrimaryContainerDark = Color(0xFF665200)
            override val secondaryDark = Color(0xFFDAC842)
            override val onSecondaryDark = Color(0xFF373100)
            override val secondaryContainerDark = Color(0xFFA8980B)
            override val onSecondaryContainerDark = Color(0xFF363000)
            override val tertiaryDark = Color(0xFFFAFFDF)
            override val onTertiaryDark = Color(0xFF293500)
            override val tertiaryContainerDark = Color(0xFFC3F00F)
            override val onTertiaryContainerDark = Color(0xFF556A00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171309)
            override val onBackgroundDark = Color(0xFFEBE2D0)
            override val surfaceDark = Color(0xFF171309)
            override val onSurfaceDark = Color(0xFFEBE2D0)
            override val surfaceVariantDark = Color(0xFF4D4632)
            override val onSurfaceVariantDark = Color(0xFFD1C6AC)
            override val outlineDark = Color(0xFF9A9078)
            override val outlineVariantDark = Color(0xFF4D4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDark = Color(0xFF353025)
            override val inversePrimaryDark = Color(0xFF735C00)
            override val surfaceDimDark = Color(0xFF171309)
            override val surfaceBrightDark = Color(0xFF3E392D)
            override val surfaceContainerLowestDark = Color(0xFF110E05)
            override val surfaceContainerLowDark = Color(0xFF1F1B11)
            override val surfaceContainerDark = Color(0xFF231F15)
            override val surfaceContainerHighDark = Color(0xFF2E2A1E)
            override val surfaceContainerHighestDark = Color(0xFF393429)
            override val primaryDarkMediumContrast = Color(0xFFFFE391)
            override val onPrimaryDarkMediumContrast = Color(0xFF362A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF453600)
            override val secondaryDarkMediumContrast = Color(0xFFF1DE56)
            override val onSecondaryDarkMediumContrast = Color(0xFF2B2600)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA8980B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF030200)
            override val tertiaryDarkMediumContrast = Color(0xFFFAFFDF)
            override val onTertiaryDarkMediumContrast = Color(0xFF293500)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC3F00F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3C4C00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171309)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBE2D0)
            override val surfaceDarkMediumContrast = Color(0xFF171309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7DBC1)
            override val outlineDarkMediumContrast = Color(0xFFBCB198)
            override val outlineVariantDarkMediumContrast = Color(0xFF999078)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E2A1E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF584600)
            override val surfaceDimDarkMediumContrast = Color(0xFF171309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF494438)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C281C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373227)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423D31)
            override val primaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A1300)
            override val secondaryDarkHighContrast = Color(0xFFFFF29F)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD6C43E)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFAFFDF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC3F00F)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF212C00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171309)
            override val onBackgroundDarkHighContrast = Color(0xFFEBE2D0)
            override val surfaceDarkHighContrast = Color(0xFF171309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEFD4)
            override val outlineVariantDarkHighContrast = Color(0xFFCDC2A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF584600)
            override val surfaceDimDarkHighContrast = Color(0xFF171309)
            override val surfaceBrightDarkHighContrast = Color(0xFF555043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F15)
            override val surfaceContainerDarkHighContrast = Color(0xFF353025)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B463A)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF735C00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF1C40F)
            override val onPrimaryContainerLight = Color(0xFF665200)
            override val secondaryLight = Color(0xFF6A5F00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA8980B)
            override val onSecondaryContainerLight = Color(0xFF363000)
            override val tertiaryLight = Color(0xFF636036)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFF9C3)
            override val onTertiaryContainerLight = Color(0xFF767247)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F0)
            override val onBackgroundLight = Color(0xFF1F1B11)
            override val surfaceLight = Color(0xFFFFF8F0)
            override val onSurfaceLight = Color(0xFF1F1B11)
            override val surfaceVariantLight = Color(0xFFEEE1C7)
            override val onSurfaceVariantLight = Color(0xFF4D4632)
            override val outlineLight = Color(0xFF7F7660)
            override val outlineVariantLight = Color(0xFFD1C6AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF353025)
            override val inverseOnSurfaceLight = Color(0xFFF9F0DE)
            override val inversePrimaryLight = Color(0xFFEEC209)
            override val surfaceDimLight = Color(0xFFE2D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF3E1)
            override val surfaceContainerLight = Color(0xFFF6EDDC)
            override val surfaceContainerHighLight = Color(0xFFF0E7D6)
            override val surfaceContainerHighestLight = Color(0xFFEBE2D0)
            override val primaryLightMediumContrast = Color(0xFF433500)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF846A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7A6E00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3A3712)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF726F44)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightMediumContrast = Color(0xFF141107)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3C3623)
            override val outlineLightMediumContrast = Color(0xFF5A523D)
            override val outlineVariantLightMediumContrast = Color(0xFF756C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9F0DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFEEC209)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5DCCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9D1C0)
            override val primaryLightHighContrast = Color(0xFF372B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF594700)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF322C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF524A00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF302D08)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4D4A23)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightHighContrast = Color(0xFF1F1B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322C1A)
            override val outlineVariantLightHighContrast = Color(0xFF504935)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEEC209)
            override val surfaceDimLightHighContrast = Color(0xFFC0B8A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9F0DE)
            override val surfaceContainerLightHighContrast = Color(0xFFEBE2D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD3C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC6B5)
            override val primaryDark = Color(0xFFFFE391)
            override val onPrimaryDark = Color(0xFF3C2F00)
            override val primaryContainerDark = Color(0xFFF1C40F)
            override val onPrimaryContainerDark = Color(0xFF665200)
            override val secondaryDark = Color(0xFFDAC842)
            override val onSecondaryDark = Color(0xFF373100)
            override val secondaryContainerDark = Color(0xFFA8980B)
            override val onSecondaryContainerDark = Color(0xFF363000)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF34310C)
            override val tertiaryContainerDark = Color(0xFFEAE4B0)
            override val onTertiaryContainerDark = Color(0xFF69663C)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171309)
            override val onBackgroundDark = Color(0xFFEBE2D0)
            override val surfaceDark = Color(0xFF171309)
            override val onSurfaceDark = Color(0xFFEBE2D0)
            override val surfaceVariantDark = Color(0xFF4D4632)
            override val onSurfaceVariantDark = Color(0xFFD1C6AC)
            override val outlineDark = Color(0xFF9A9078)
            override val outlineVariantDark = Color(0xFF4D4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDark = Color(0xFF353025)
            override val inversePrimaryDark = Color(0xFF735C00)
            override val surfaceDimDark = Color(0xFF171309)
            override val surfaceBrightDark = Color(0xFF3E392D)
            override val surfaceContainerLowestDark = Color(0xFF110E05)
            override val surfaceContainerLowDark = Color(0xFF1F1B11)
            override val surfaceContainerDark = Color(0xFF231F15)
            override val surfaceContainerHighDark = Color(0xFF2E2A1E)
            override val surfaceContainerHighestDark = Color(0xFF393429)
            override val primaryDarkMediumContrast = Color(0xFFFFE391)
            override val onPrimaryDarkMediumContrast = Color(0xFF362A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF453600)
            override val secondaryDarkMediumContrast = Color(0xFFF1DE56)
            override val onSecondaryDarkMediumContrast = Color(0xFF2B2600)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA8980B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF030200)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF34310C)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFEAE4B0)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF4C4922)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171309)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBE2D0)
            override val surfaceDarkMediumContrast = Color(0xFF171309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7DBC1)
            override val outlineDarkMediumContrast = Color(0xFFBCB198)
            override val outlineVariantDarkMediumContrast = Color(0xFF999078)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E2A1E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF584600)
            override val surfaceDimDarkMediumContrast = Color(0xFF171309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF494438)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C281C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373227)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423D31)
            override val primaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A1300)
            override val secondaryDarkHighContrast = Color(0xFFFFF29F)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD6C43E)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFEAE4B0)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2D2B07)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171309)
            override val onBackgroundDarkHighContrast = Color(0xFFEBE2D0)
            override val surfaceDarkHighContrast = Color(0xFF171309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEFD4)
            override val outlineVariantDarkHighContrast = Color(0xFFCDC2A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF584600)
            override val surfaceDimDarkHighContrast = Color(0xFF171309)
            override val surfaceBrightDarkHighContrast = Color(0xFF555043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F15)
            override val surfaceContainerDarkHighContrast = Color(0xFF353025)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B463A)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF735C00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF1C40F)
            override val onPrimaryContainerLight = Color(0xFF665200)
            override val secondaryLight = Color(0xFF5100BA)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF6D0FF0)
            override val onSecondaryContainerLight = Color(0xFFD9C7FF)
            override val tertiaryLight = Color(0xFF320077)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF4C0BA8)
            override val onTertiaryContainerLight = Color(0xFFB795FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F0)
            override val onBackgroundLight = Color(0xFF1F1B11)
            override val surfaceLight = Color(0xFFFFF8F0)
            override val onSurfaceLight = Color(0xFF1F1B11)
            override val surfaceVariantLight = Color(0xFFEEE1C7)
            override val onSurfaceVariantLight = Color(0xFF4D4632)
            override val outlineLight = Color(0xFF7F7660)
            override val outlineVariantLight = Color(0xFFD1C6AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF353025)
            override val inverseOnSurfaceLight = Color(0xFFF9F0DE)
            override val inversePrimaryLight = Color(0xFFEEC209)
            override val surfaceDimLight = Color(0xFFE2D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF3E1)
            override val surfaceContainerLight = Color(0xFFF6EDDC)
            override val surfaceContainerHighLight = Color(0xFFF0E7D6)
            override val surfaceContainerHighestLight = Color(0xFFEBE2D0)
            override val primaryLightMediumContrast = Color(0xFF433500)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF846A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF44009E)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF6D0FF0)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF320077)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF4C0BA8)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFDAC7FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightMediumContrast = Color(0xFF141107)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3C3623)
            override val outlineLightMediumContrast = Color(0xFF5A523D)
            override val outlineVariantLightMediumContrast = Color(0xFF756C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9F0DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFEEC209)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5DCCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9D1C0)
            override val primaryLightHighContrast = Color(0xFF372B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF594700)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF380085)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5B00CE)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF320077)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4C0BA8)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightHighContrast = Color(0xFF1F1B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322C1A)
            override val outlineVariantLightHighContrast = Color(0xFF504935)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEEC209)
            override val surfaceDimLightHighContrast = Color(0xFFC0B8A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9F0DE)
            override val surfaceContainerLightHighContrast = Color(0xFFEBE2D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD3C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC6B5)
            override val primaryDark = Color(0xFFFFE391)
            override val onPrimaryDark = Color(0xFF3C2F00)
            override val primaryContainerDark = Color(0xFFF1C40F)
            override val onPrimaryContainerDark = Color(0xFF665200)
            override val secondaryDark = Color(0xFFD1BCFF)
            override val onSecondaryDark = Color(0xFF3D008F)
            override val secondaryContainerDark = Color(0xFF6D0FF0)
            override val onSecondaryContainerDark = Color(0xFFD9C7FF)
            override val tertiaryDark = Color(0xFFD2BCFF)
            override val onTertiaryDark = Color(0xFF3E008F)
            override val tertiaryContainerDark = Color(0xFF4C0BA8)
            override val onTertiaryContainerDark = Color(0xFFB795FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171309)
            override val onBackgroundDark = Color(0xFFEBE2D0)
            override val surfaceDark = Color(0xFF171309)
            override val onSurfaceDark = Color(0xFFEBE2D0)
            override val surfaceVariantDark = Color(0xFF4D4632)
            override val onSurfaceVariantDark = Color(0xFFD1C6AC)
            override val outlineDark = Color(0xFF9A9078)
            override val outlineVariantDark = Color(0xFF4D4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDark = Color(0xFF353025)
            override val inversePrimaryDark = Color(0xFF735C00)
            override val surfaceDimDark = Color(0xFF171309)
            override val surfaceBrightDark = Color(0xFF3E392D)
            override val surfaceContainerLowestDark = Color(0xFF110E05)
            override val surfaceContainerLowDark = Color(0xFF1F1B11)
            override val surfaceContainerDark = Color(0xFF231F15)
            override val surfaceContainerHighDark = Color(0xFF2E2A1E)
            override val surfaceContainerHighestDark = Color(0xFF393429)
            override val primaryDarkMediumContrast = Color(0xFFFFE391)
            override val onPrimaryDarkMediumContrast = Color(0xFF362A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF453600)
            override val secondaryDarkMediumContrast = Color(0xFFE4D6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF300074)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA277FF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE5D6FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF310074)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA377FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171309)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBE2D0)
            override val surfaceDarkMediumContrast = Color(0xFF171309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7DBC1)
            override val outlineDarkMediumContrast = Color(0xFFBCB198)
            override val outlineVariantDarkMediumContrast = Color(0xFF999078)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E2A1E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF584600)
            override val surfaceDimDarkMediumContrast = Color(0xFF171309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF494438)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C281C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373227)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423D31)
            override val primaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A1300)
            override val secondaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEB7FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF100032)
            override val tertiaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCEB7FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF110031)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171309)
            override val onBackgroundDarkHighContrast = Color(0xFFEBE2D0)
            override val surfaceDarkHighContrast = Color(0xFF171309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEFD4)
            override val outlineVariantDarkHighContrast = Color(0xFFCDC2A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF584600)
            override val surfaceDimDarkHighContrast = Color(0xFF171309)
            override val surfaceBrightDarkHighContrast = Color(0xFF555043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F15)
            override val surfaceContainerDarkHighContrast = Color(0xFF353025)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B463A)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF735C00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF1C40F)
            override val onPrimaryContainerLight = Color(0xFF665200)
            override val secondaryLight = Color(0xFF6A5F00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA8980B)
            override val onSecondaryContainerLight = Color(0xFF363000)
            override val tertiaryLight = Color(0xFF005EA1)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF0078CA)
            override val onTertiaryContainerLight = Color(0xFFFDFCFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F0)
            override val onBackgroundLight = Color(0xFF1F1B11)
            override val surfaceLight = Color(0xFFFFF8F0)
            override val onSurfaceLight = Color(0xFF1F1B11)
            override val surfaceVariantLight = Color(0xFFEEE1C7)
            override val onSurfaceVariantLight = Color(0xFF4D4632)
            override val outlineLight = Color(0xFF7F7660)
            override val outlineVariantLight = Color(0xFFD1C6AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF353025)
            override val inverseOnSurfaceLight = Color(0xFFF9F0DE)
            override val inversePrimaryLight = Color(0xFFEEC209)
            override val surfaceDimLight = Color(0xFFE2D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF3E1)
            override val surfaceContainerLight = Color(0xFFF6EDDC)
            override val surfaceContainerHighLight = Color(0xFFF0E7D6)
            override val surfaceContainerHighestLight = Color(0xFFEBE2D0)
            override val primaryLightMediumContrast = Color(0xFF433500)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF846A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7A6E00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003863)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF0070BE)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightMediumContrast = Color(0xFF141107)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3C3623)
            override val outlineLightMediumContrast = Color(0xFF5A523D)
            override val outlineVariantLightMediumContrast = Color(0xFF756C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9F0DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFEEC209)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5DCCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9D1C0)
            override val primaryLightHighContrast = Color(0xFF372B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF594700)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF322C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF524A00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002D52)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF004B82)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F0)
            override val onBackgroundLightHighContrast = Color(0xFF1F1B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F0)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEE1C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322C1A)
            override val outlineVariantLightHighContrast = Color(0xFF504935)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF353025)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEEC209)
            override val surfaceDimLightHighContrast = Color(0xFFC0B8A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F0)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9F0DE)
            override val surfaceContainerLightHighContrast = Color(0xFFEBE2D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD3C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC6B5)
            override val primaryDark = Color(0xFFFFE391)
            override val onPrimaryDark = Color(0xFF3C2F00)
            override val primaryContainerDark = Color(0xFFF1C40F)
            override val onPrimaryContainerDark = Color(0xFF665200)
            override val secondaryDark = Color(0xFFDAC842)
            override val onSecondaryDark = Color(0xFF373100)
            override val secondaryContainerDark = Color(0xFFA8980B)
            override val onSecondaryContainerDark = Color(0xFF363000)
            override val tertiaryDark = Color(0xFF9FCAFF)
            override val onTertiaryDark = Color(0xFF003259)
            override val tertiaryContainerDark = Color(0xFF1C94F5)
            override val onTertiaryContainerDark = Color(0xFF002747)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171309)
            override val onBackgroundDark = Color(0xFFEBE2D0)
            override val surfaceDark = Color(0xFF171309)
            override val onSurfaceDark = Color(0xFFEBE2D0)
            override val surfaceVariantDark = Color(0xFF4D4632)
            override val onSurfaceVariantDark = Color(0xFFD1C6AC)
            override val outlineDark = Color(0xFF9A9078)
            override val outlineVariantDark = Color(0xFF4D4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDark = Color(0xFF353025)
            override val inversePrimaryDark = Color(0xFF735C00)
            override val surfaceDimDark = Color(0xFF171309)
            override val surfaceBrightDark = Color(0xFF3E392D)
            override val surfaceContainerLowestDark = Color(0xFF110E05)
            override val surfaceContainerLowDark = Color(0xFF1F1B11)
            override val surfaceContainerDark = Color(0xFF231F15)
            override val surfaceContainerHighDark = Color(0xFF2E2A1E)
            override val surfaceContainerHighestDark = Color(0xFF393429)
            override val primaryDarkMediumContrast = Color(0xFFFFE391)
            override val onPrimaryDarkMediumContrast = Color(0xFF362A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF453600)
            override val secondaryDarkMediumContrast = Color(0xFFF1DE56)
            override val onSecondaryDarkMediumContrast = Color(0xFF2B2600)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA8980B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF030200)
            override val tertiaryDarkMediumContrast = Color(0xFFC7DEFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF002747)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF1C94F5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171309)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBE2D0)
            override val surfaceDarkMediumContrast = Color(0xFF171309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7DBC1)
            override val outlineDarkMediumContrast = Color(0xFFBCB198)
            override val outlineVariantDarkMediumContrast = Color(0xFF999078)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E2A1E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF584600)
            override val surfaceDimDarkMediumContrast = Color(0xFF171309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF494438)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C281C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373227)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423D31)
            override val primaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF1C40F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A1300)
            override val secondaryDarkHighContrast = Color(0xFFFFF29F)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD6C43E)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val tertiaryDarkHighContrast = Color(0xFFE9F0FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF98C6FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000C1C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171309)
            override val onBackgroundDarkHighContrast = Color(0xFFEBE2D0)
            override val surfaceDarkHighContrast = Color(0xFF171309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4D4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEFD4)
            override val outlineVariantDarkHighContrast = Color(0xFFCDC2A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBE2D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF584600)
            override val surfaceDimDarkHighContrast = Color(0xFF171309)
            override val surfaceBrightDarkHighContrast = Color(0xFF555043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F15)
            override val surfaceContainerDarkHighContrast = Color(0xFF353025)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B463A)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("sunflower", "Sunflower")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}