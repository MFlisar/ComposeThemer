package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIPumpkin : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E3D00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC64F00)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF703300)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF944500)
            override val onSecondaryContainerLight = Color(0xFFFFC9A9)
            override val tertiaryLight = Color(0xFF825500)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFD38D00)
            override val onTertiaryContainerLight = Color(0xFF482E00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF251913)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF251913)
            override val surfaceVariantLight = Color(0xFFFEDBCD)
            override val onSurfaceVariantLight = Color(0xFF594238)
            override val outlineLight = Color(0xFF8C7166)
            override val outlineVariantLight = Color(0xFFE0C0B2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB595)
            override val surfaceDimLight = Color(0xFFEDD5CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFFE9E1)
            override val surfaceContainerHighLight = Color(0xFFFCE3DA)
            override val surfaceContainerHighestLight = Color(0xFFF6DDD4)
            override val primaryLightMediumContrast = Color(0xFF612200)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFBA4900)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5B2800)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF944500)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF4C3000)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF956300)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF251913)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF473128)
            override val outlineLightMediumContrast = Color(0xFF654D43)
            override val outlineVariantLightMediumContrast = Color(0xFF82675C)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB595)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C2B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE3DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF0D8CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CDC4)
            override val primaryLightHighContrast = Color(0xFF501B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF803000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4B2000)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF783700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3F2700)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF664200)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF251913)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C271F)
            override val outlineVariantLightHighContrast = Color(0xFF5B443A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB595)
            override val surfaceDimLightHighContrast = Color(0xFFCBB4AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF6DDD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE7CFC6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C2B9)
            override val primaryDark = Color(0xFFFFB595)
            override val onPrimaryDark = Color(0xFF571E00)
            override val primaryContainerDark = Color(0xFFEE671C)
            override val onPrimaryContainerDark = Color(0xFF240800)
            override val secondaryDark = Color(0xFFFFB68A)
            override val onSecondaryDark = Color(0xFF522300)
            override val secondaryContainerDark = Color(0xFF944500)
            override val onSecondaryContainerDark = Color(0xFFFFC9A9)
            override val tertiaryDark = Color(0xFFFFB94F)
            override val onTertiaryDark = Color(0xFF452B00)
            override val tertiaryContainerDark = Color(0xFFD38D00)
            override val onTertiaryContainerDark = Color(0xFF482E00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1C110B)
            override val onBackgroundDark = Color(0xFFF6DDD4)
            override val surfaceDark = Color(0xFF1C110B)
            override val onSurfaceDark = Color(0xFFF6DDD4)
            override val surfaceVariantDark = Color(0xFF594238)
            override val onSurfaceVariantDark = Color(0xFFE0C0B2)
            override val outlineDark = Color(0xFFA88A7E)
            override val outlineVariantDark = Color(0xFF594238)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDark = Color(0xFF3C2D27)
            override val inversePrimaryDark = Color(0xFFA23F00)
            override val surfaceDimDark = Color(0xFF1C110B)
            override val surfaceBrightDark = Color(0xFF45362F)
            override val surfaceContainerLowestDark = Color(0xFF170B07)
            override val surfaceContainerLowDark = Color(0xFF251913)
            override val surfaceContainerDark = Color(0xFF2A1D17)
            override val surfaceContainerHighDark = Color(0xFF352721)
            override val surfaceContainerHighestDark = Color(0xFF40312B)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461700)
            override val primaryContainerDarkMediumContrast = Color(0xFFEE671C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4BB)
            override val onSecondaryDarkMediumContrast = Color(0xFF411B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFD77836)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD6A0)
            override val onTertiaryDarkMediumContrast = Color(0xFF362100)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD38D00)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF150A00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1C110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF6DDD4)
            override val surfaceDarkMediumContrast = Color(0xFF1C110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF7D5C8)
            override val outlineDarkMediumContrast = Color(0xFFCBAB9E)
            override val outlineVariantDarkMediumContrast = Color(0xFFA78A7E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352721)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51413A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF271B15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF33251F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A34)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08D)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB181)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF190600)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB43C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF130900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1C110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF6DDD4)
            override val surfaceDarkHighContrast = Color(0xFF1C110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFDCBCAF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkHighContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5D4C45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1D17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF473832)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF54433D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E3D00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC64F00)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF703300)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF944500)
            override val onSecondaryContainerLight = Color(0xFFFFC9A9)
            override val tertiaryLight = Color(0xFF725A42)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDDBF)
            override val onTertiaryContainerLight = Color(0xFF796048)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF251913)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF251913)
            override val surfaceVariantLight = Color(0xFFFEDBCD)
            override val onSurfaceVariantLight = Color(0xFF594238)
            override val outlineLight = Color(0xFF8C7166)
            override val outlineVariantLight = Color(0xFFE0C0B2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB595)
            override val surfaceDimLight = Color(0xFFEDD5CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFFE9E1)
            override val surfaceContainerHighLight = Color(0xFFFCE3DA)
            override val surfaceContainerHighestLight = Color(0xFFF6DDD4)
            override val primaryLightMediumContrast = Color(0xFF612200)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFBA4900)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5B2800)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF944500)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF47321D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF826850)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF251913)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF473128)
            override val outlineLightMediumContrast = Color(0xFF654D43)
            override val outlineVariantLightMediumContrast = Color(0xFF82675C)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB595)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C2B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE3DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF0D8CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CDC4)
            override val primaryLightHighContrast = Color(0xFF501B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF803000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4B2000)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF783700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3B2814)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5B452F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF251913)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C271F)
            override val outlineVariantLightHighContrast = Color(0xFF5B443A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB595)
            override val surfaceDimLightHighContrast = Color(0xFFCBB4AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF6DDD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE7CFC6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C2B9)
            override val primaryDark = Color(0xFFFFB595)
            override val onPrimaryDark = Color(0xFF571E00)
            override val primaryContainerDark = Color(0xFFEE671C)
            override val onPrimaryContainerDark = Color(0xFF240800)
            override val secondaryDark = Color(0xFFFFB68A)
            override val onSecondaryDark = Color(0xFF522300)
            override val secondaryContainerDark = Color(0xFF944500)
            override val onSecondaryContainerDark = Color(0xFFFFC9A9)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF402C18)
            override val tertiaryContainerDark = Color(0xFFFEDCBE)
            override val onTertiaryContainerDark = Color(0xFF796048)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1C110B)
            override val onBackgroundDark = Color(0xFFF6DDD4)
            override val surfaceDark = Color(0xFF1C110B)
            override val onSurfaceDark = Color(0xFFF6DDD4)
            override val surfaceVariantDark = Color(0xFF594238)
            override val onSurfaceVariantDark = Color(0xFFE0C0B2)
            override val outlineDark = Color(0xFFA88A7E)
            override val outlineVariantDark = Color(0xFF594238)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDark = Color(0xFF3C2D27)
            override val inversePrimaryDark = Color(0xFFA23F00)
            override val surfaceDimDark = Color(0xFF1C110B)
            override val surfaceBrightDark = Color(0xFF45362F)
            override val surfaceContainerLowestDark = Color(0xFF170B07)
            override val surfaceContainerLowDark = Color(0xFF251913)
            override val surfaceContainerDark = Color(0xFF2A1D17)
            override val surfaceContainerHighDark = Color(0xFF352721)
            override val surfaceContainerHighestDark = Color(0xFF40312B)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461700)
            override val primaryContainerDarkMediumContrast = Color(0xFFEE671C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4BB)
            override val onSecondaryDarkMediumContrast = Color(0xFF411B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFD77836)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF402C18)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFEDCBE)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF5A442E)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1C110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF6DDD4)
            override val surfaceDarkMediumContrast = Color(0xFF1C110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF7D5C8)
            override val outlineDarkMediumContrast = Color(0xFFCBAB9E)
            override val outlineVariantDarkMediumContrast = Color(0xFFA78A7E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352721)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51413A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF271B15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF33251F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A34)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08D)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB181)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF190600)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFEDCBE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF392612)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1C110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF6DDD4)
            override val surfaceDarkHighContrast = Color(0xFF1C110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFDCBCAF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkHighContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5D4C45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1D17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF473832)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF54433D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E3D00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC64F00)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF00628D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF007CB2)
            override val onSecondaryContainerLight = Color(0xFFFCFCFF)
            override val tertiaryLight = Color(0xFF004E71)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF006794)
            override val onTertiaryContainerLight = Color(0xFFBBE1FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF251913)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF251913)
            override val surfaceVariantLight = Color(0xFFFEDBCD)
            override val onSurfaceVariantLight = Color(0xFF594238)
            override val outlineLight = Color(0xFF8C7166)
            override val outlineVariantLight = Color(0xFFE0C0B2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB595)
            override val surfaceDimLight = Color(0xFFEDD5CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFFE9E1)
            override val surfaceContainerHighLight = Color(0xFFFCE3DA)
            override val surfaceContainerHighestLight = Color(0xFFF6DDD4)
            override val primaryLightMediumContrast = Color(0xFF612200)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFBA4900)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003A56)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF0074A6)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003A56)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF006794)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF251913)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF473128)
            override val outlineLightMediumContrast = Color(0xFF654D43)
            override val outlineVariantLightMediumContrast = Color(0xFF82675C)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB595)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C2B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE3DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF0D8CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CDC4)
            override val primaryLightHighContrast = Color(0xFF501B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF803000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF002F47)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF004E72)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002F47)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF004E71)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF251913)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C271F)
            override val outlineVariantLightHighContrast = Color(0xFF5B443A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB595)
            override val surfaceDimLightHighContrast = Color(0xFFCBB4AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF6DDD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE7CFC6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C2B9)
            override val primaryDark = Color(0xFFFFB595)
            override val onPrimaryDark = Color(0xFF571E00)
            override val primaryContainerDark = Color(0xFFEE671C)
            override val onPrimaryContainerDark = Color(0xFF240800)
            override val secondaryDark = Color(0xFF89CEFF)
            override val onSecondaryDark = Color(0xFF00344D)
            override val secondaryContainerDark = Color(0xFF169AD9)
            override val onSecondaryContainerDark = Color(0xFF00273C)
            override val tertiaryDark = Color(0xFF89CEFF)
            override val onTertiaryDark = Color(0xFF00344D)
            override val tertiaryContainerDark = Color(0xFF006794)
            override val onTertiaryContainerDark = Color(0xFFBBE1FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1C110B)
            override val onBackgroundDark = Color(0xFFF6DDD4)
            override val surfaceDark = Color(0xFF1C110B)
            override val onSurfaceDark = Color(0xFFF6DDD4)
            override val surfaceVariantDark = Color(0xFF594238)
            override val onSurfaceVariantDark = Color(0xFFE0C0B2)
            override val outlineDark = Color(0xFFA88A7E)
            override val outlineVariantDark = Color(0xFF594238)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDark = Color(0xFF3C2D27)
            override val inversePrimaryDark = Color(0xFFA23F00)
            override val surfaceDimDark = Color(0xFF1C110B)
            override val surfaceBrightDark = Color(0xFF45362F)
            override val surfaceContainerLowestDark = Color(0xFF170B07)
            override val surfaceContainerLowDark = Color(0xFF251913)
            override val surfaceContainerDark = Color(0xFF2A1D17)
            override val surfaceContainerHighDark = Color(0xFF352721)
            override val surfaceContainerHighestDark = Color(0xFF40312B)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461700)
            override val primaryContainerDarkMediumContrast = Color(0xFFEE671C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFBCE1FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF00293E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF169AD9)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFBCE1FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00293D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF4D98C7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1C110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF6DDD4)
            override val surfaceDarkMediumContrast = Color(0xFF1C110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF7D5C8)
            override val outlineDarkMediumContrast = Color(0xFFCBAB9E)
            override val outlineVariantDarkMediumContrast = Color(0xFFA78A7E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352721)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51413A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF271B15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF33251F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A34)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08D)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFE4F2FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF7FCBFF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D17)
            override val tertiaryDarkHighContrast = Color(0xFFE4F2FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF82CAFC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000D17)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1C110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF6DDD4)
            override val surfaceDarkHighContrast = Color(0xFF1C110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFDCBCAF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkHighContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5D4C45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1D17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF473832)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF54433D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E3D00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC64F00)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF703300)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF944500)
            override val onSecondaryContainerLight = Color(0xFFFFC9A9)
            override val tertiaryLight = Color(0xFF206D00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF46D300)
            override val onTertiaryContainerLight = Color(0xFF175400)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF251913)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF251913)
            override val surfaceVariantLight = Color(0xFFFEDBCD)
            override val onSurfaceVariantLight = Color(0xFF594238)
            override val outlineLight = Color(0xFF8C7166)
            override val outlineVariantLight = Color(0xFFE0C0B2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB595)
            override val surfaceDimLight = Color(0xFFEDD5CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFFE9E1)
            override val surfaceContainerHighLight = Color(0xFFFCE3DA)
            override val surfaceContainerHighestLight = Color(0xFFF6DDD4)
            override val primaryLightMediumContrast = Color(0xFF612200)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFBA4900)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5B2800)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF944500)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF0F3F00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF277E00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF251913)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF473128)
            override val outlineLightMediumContrast = Color(0xFF654D43)
            override val outlineVariantLightMediumContrast = Color(0xFF82675C)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB595)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C2B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE3DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF0D8CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CDC4)
            override val primaryLightHighContrast = Color(0xFF501B00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF803000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4B2000)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF783700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF0B3400)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF175500)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF251913)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFEDBCD)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C271F)
            override val outlineVariantLightHighContrast = Color(0xFF5B443A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB595)
            override val surfaceDimLightHighContrast = Color(0xFFCBB4AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF6DDD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE7CFC6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C2B9)
            override val primaryDark = Color(0xFFFFB595)
            override val onPrimaryDark = Color(0xFF571E00)
            override val primaryContainerDark = Color(0xFFEE671C)
            override val onPrimaryContainerDark = Color(0xFF240800)
            override val secondaryDark = Color(0xFFFFB68A)
            override val onSecondaryDark = Color(0xFF522300)
            override val secondaryContainerDark = Color(0xFF944500)
            override val onSecondaryContainerDark = Color(0xFFFFC9A9)
            override val tertiaryDark = Color(0xFF64F030)
            override val onTertiaryDark = Color(0xFF0D3900)
            override val tertiaryContainerDark = Color(0xFF46D300)
            override val onTertiaryContainerDark = Color(0xFF175400)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1C110B)
            override val onBackgroundDark = Color(0xFFF6DDD4)
            override val surfaceDark = Color(0xFF1C110B)
            override val onSurfaceDark = Color(0xFFF6DDD4)
            override val surfaceVariantDark = Color(0xFF594238)
            override val onSurfaceVariantDark = Color(0xFFE0C0B2)
            override val outlineDark = Color(0xFFA88A7E)
            override val outlineVariantDark = Color(0xFF594238)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDark = Color(0xFF3C2D27)
            override val inversePrimaryDark = Color(0xFFA23F00)
            override val surfaceDimDark = Color(0xFF1C110B)
            override val surfaceBrightDark = Color(0xFF45362F)
            override val surfaceContainerLowestDark = Color(0xFF170B07)
            override val surfaceContainerLowDark = Color(0xFF251913)
            override val surfaceContainerDark = Color(0xFF2A1D17)
            override val surfaceContainerHighDark = Color(0xFF352721)
            override val surfaceContainerHighestDark = Color(0xFF40312B)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461700)
            override val primaryContainerDarkMediumContrast = Color(0xFFEE671C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4BB)
            override val onSecondaryDarkMediumContrast = Color(0xFF411B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFD77836)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF6DFA3A)
            override val onTertiaryDarkMediumContrast = Color(0xFF082D00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF46D300)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF0B3300)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1C110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF6DDD4)
            override val surfaceDarkMediumContrast = Color(0xFF1C110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF7D5C8)
            override val outlineDarkMediumContrast = Color(0xFFCBAB9E)
            override val outlineVariantDarkMediumContrast = Color(0xFFA78A7E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352721)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51413A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF271B15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF33251F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A34)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08D)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB181)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF190600)
            override val tertiaryDarkHighContrast = Color(0xFFC9FFAE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF52DE19)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF020F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1C110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF6DDD4)
            override val surfaceDarkHighContrast = Color(0xFF1C110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF594238)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFDCBCAF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF6DDD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7E2F00)
            override val surfaceDimDarkHighContrast = Color(0xFF1C110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5D4C45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1D17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF473832)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF54433D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("pumpkin", "Pumpkin")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}