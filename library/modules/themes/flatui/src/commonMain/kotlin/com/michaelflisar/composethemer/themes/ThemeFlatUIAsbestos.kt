package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIAsbestos : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF525E5F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF6A7778)
            override val onPrimaryContainerLight = Color(0xFFF4FEFF)
            override val secondaryLight = Color(0xFF41494B)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF596163)
            override val onSecondaryContainerLight = Color(0xFFD4DCDE)
            override val tertiaryLight = Color(0xFF585C66)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF71747F)
            override val onTertiaryContainerLight = Color(0xFFFEFCFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9F8)
            override val onBackgroundLight = Color(0xFF1B1C1C)
            override val surfaceLight = Color(0xFFFBF9F8)
            override val onSurfaceLight = Color(0xFF1B1C1C)
            override val surfaceVariantLight = Color(0xFFDFE3E3)
            override val onSurfaceVariantLight = Color(0xFF424848)
            override val outlineLight = Color(0xFF737878)
            override val outlineVariantLight = Color(0xFFC3C7C7)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303030)
            override val inverseOnSurfaceLight = Color(0xFFF3F0EF)
            override val inversePrimaryLight = Color(0xFFBCC9CA)
            override val surfaceDimLight = Color(0xFFDCD9D9)
            override val surfaceBrightLight = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F2)
            override val surfaceContainerLight = Color(0xFFF0EDED)
            override val surfaceContainerHighLight = Color(0xFFEAE8E7)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E1)
            override val primaryLightMediumContrast = Color(0xFF2C3839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF636F70)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF303739)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF596163)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF33363F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6A6D77)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1C)
            override val surfaceLightMediumContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightMediumContrast = Color(0xFF111111)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323737)
            override val outlineLightMediumContrast = Color(0xFF4E5354)
            override val outlineVariantLightMediumContrast = Color(0xFF696E6E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF3F0EF)
            override val inversePrimaryLightMediumContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C6C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE8E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D1)
            override val primaryLightHighContrast = Color(0xFF222E2F)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF3F4B4C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF262D2F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434A4C)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF292C35)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF464953)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1C)
            override val surfaceLightHighContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282D2D)
            override val outlineVariantLightHighContrast = Color(0xFF454A4A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightHighContrast = Color(0xFFBAB8B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF3F0EF)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D4D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C6C5)
            override val primaryDark = Color(0xFFBCC9CA)
            override val onPrimaryDark = Color(0xFF263334)
            override val primaryContainerDark = Color(0xFF869394)
            override val onPrimaryContainerDark = Color(0xFF192526)
            override val secondaryDark = Color(0xFFC0C8CA)
            override val onSecondaryDark = Color(0xFF2A3234)
            override val secondaryContainerDark = Color(0xFF596163)
            override val onSecondaryContainerDark = Color(0xFFD4DCDE)
            override val tertiaryDark = Color(0xFFC4C6D2)
            override val onTertiaryDark = Color(0xFF2D303A)
            override val tertiaryContainerDark = Color(0xFF8D909C)
            override val onTertiaryContainerDark = Color(0xFF171A23)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131313)
            override val onBackgroundDark = Color(0xFFE4E2E1)
            override val surfaceDark = Color(0xFF131313)
            override val onSurfaceDark = Color(0xFFE4E2E1)
            override val surfaceVariantDark = Color(0xFF424848)
            override val onSurfaceVariantDark = Color(0xFFC3C7C7)
            override val outlineDark = Color(0xFF8D9292)
            override val outlineVariantDark = Color(0xFF424848)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDark = Color(0xFF303030)
            override val inversePrimaryDark = Color(0xFF546162)
            override val surfaceDimDark = Color(0xFF131313)
            override val surfaceBrightDark = Color(0xFF393939)
            override val surfaceContainerLowestDark = Color(0xFF0E0E0E)
            override val surfaceContainerLowDark = Color(0xFF1B1C1C)
            override val surfaceContainerDark = Color(0xFF1F2020)
            override val surfaceContainerHighDark = Color(0xFF2A2A2A)
            override val surfaceContainerHighestDark = Color(0xFF353535)
            override val primaryDarkMediumContrast = Color(0xFFD1DFE0)
            override val onPrimaryDarkMediumContrast = Color(0xFF1C2829)
            override val primaryContainerDarkMediumContrast = Color(0xFF869394)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD6DEE0)
            override val onSecondaryDarkMediumContrast = Color(0xFF1F2729)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8A9294)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD9DCE8)
            override val onTertiaryDarkMediumContrast = Color(0xFF22262E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF8D909C)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131313)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E1)
            override val surfaceDarkMediumContrast = Color(0xFF131313)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDDD)
            override val outlineDarkMediumContrast = Color(0xFFAEB3B3)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9191)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2A2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkMediumContrast = Color(0xFF131313)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444444)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070707)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1E)
            override val surfaceContainerDarkMediumContrast = Color(0xFF282828)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323232)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3E3E3D)
            override val primaryDarkHighContrast = Color(0xFFE5F3F3)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB8C5C6)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF030D0E)
            override val secondaryDarkHighContrast = Color(0xFFE9F1F3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFBCC4C6)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050C0E)
            override val tertiaryDarkHighContrast = Color(0xFFEDEFFC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC0C2CE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF080B13)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131313)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E1)
            override val surfaceDarkHighContrast = Color(0xFF131313)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF1F1)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC3C4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkHighContrast = Color(0xFF131313)
            override val surfaceBrightDarkHighContrast = Color(0xFF505050)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2020)
            override val surfaceContainerDarkHighContrast = Color(0xFF303030)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF474746)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF525E5F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF6A7778)
            override val onPrimaryContainerLight = Color(0xFFF4FEFF)
            override val secondaryLight = Color(0xFF41494B)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF596163)
            override val onSecondaryContainerLight = Color(0xFFD4DCDE)
            override val tertiaryLight = Color(0xFF5A5F60)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF9FEFF)
            override val onTertiaryContainerLight = Color(0xFF707677)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9F8)
            override val onBackgroundLight = Color(0xFF1B1C1C)
            override val surfaceLight = Color(0xFFFBF9F8)
            override val onSurfaceLight = Color(0xFF1B1C1C)
            override val surfaceVariantLight = Color(0xFFDFE3E3)
            override val onSurfaceVariantLight = Color(0xFF424848)
            override val outlineLight = Color(0xFF737878)
            override val outlineVariantLight = Color(0xFFC3C7C7)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303030)
            override val inverseOnSurfaceLight = Color(0xFFF3F0EF)
            override val inversePrimaryLight = Color(0xFFBCC9CA)
            override val surfaceDimLight = Color(0xFFDCD9D9)
            override val surfaceBrightLight = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F2)
            override val surfaceContainerLight = Color(0xFFF0EDED)
            override val surfaceContainerHighLight = Color(0xFFEAE8E7)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E1)
            override val primaryLightMediumContrast = Color(0xFF2C3839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF636F70)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF303739)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF596163)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF313738)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF686E6F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1C)
            override val surfaceLightMediumContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightMediumContrast = Color(0xFF111111)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323737)
            override val outlineLightMediumContrast = Color(0xFF4E5354)
            override val outlineVariantLightMediumContrast = Color(0xFF696E6E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF3F0EF)
            override val inversePrimaryLightMediumContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C6C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE8E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D1)
            override val primaryLightHighContrast = Color(0xFF222E2F)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF3F4B4C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF262D2F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434A4C)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF272D2E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF444A4B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1C)
            override val surfaceLightHighContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282D2D)
            override val outlineVariantLightHighContrast = Color(0xFF454A4A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightHighContrast = Color(0xFFBAB8B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF3F0EF)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D4D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C6C5)
            override val primaryDark = Color(0xFFBCC9CA)
            override val onPrimaryDark = Color(0xFF263334)
            override val primaryContainerDark = Color(0xFF869394)
            override val onPrimaryContainerDark = Color(0xFF192526)
            override val secondaryDark = Color(0xFFC0C8CA)
            override val onSecondaryDark = Color(0xFF2A3234)
            override val secondaryContainerDark = Color(0xFF596163)
            override val onSecondaryContainerDark = Color(0xFFD4DCDE)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF2C3132)
            override val tertiaryContainerDark = Color(0xFFDEE3E4)
            override val onTertiaryContainerDark = Color(0xFF606566)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131313)
            override val onBackgroundDark = Color(0xFFE4E2E1)
            override val surfaceDark = Color(0xFF131313)
            override val onSurfaceDark = Color(0xFFE4E2E1)
            override val surfaceVariantDark = Color(0xFF424848)
            override val onSurfaceVariantDark = Color(0xFFC3C7C7)
            override val outlineDark = Color(0xFF8D9292)
            override val outlineVariantDark = Color(0xFF424848)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDark = Color(0xFF303030)
            override val inversePrimaryDark = Color(0xFF546162)
            override val surfaceDimDark = Color(0xFF131313)
            override val surfaceBrightDark = Color(0xFF393939)
            override val surfaceContainerLowestDark = Color(0xFF0E0E0E)
            override val surfaceContainerLowDark = Color(0xFF1B1C1C)
            override val surfaceContainerDark = Color(0xFF1F2020)
            override val surfaceContainerHighDark = Color(0xFF2A2A2A)
            override val surfaceContainerHighestDark = Color(0xFF353535)
            override val primaryDarkMediumContrast = Color(0xFFD1DFE0)
            override val onPrimaryDarkMediumContrast = Color(0xFF1C2829)
            override val primaryContainerDarkMediumContrast = Color(0xFF869394)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD6DEE0)
            override val onSecondaryDarkMediumContrast = Color(0xFF1F2729)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8A9294)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2C3132)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDEE3E4)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF43494A)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131313)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E1)
            override val surfaceDarkMediumContrast = Color(0xFF131313)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDDD)
            override val outlineDarkMediumContrast = Color(0xFFAEB3B3)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9191)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2A2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkMediumContrast = Color(0xFF131313)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444444)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070707)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1E)
            override val surfaceContainerDarkMediumContrast = Color(0xFF282828)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323232)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3E3E3D)
            override val primaryDarkHighContrast = Color(0xFFE5F3F3)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB8C5C6)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF030D0E)
            override val secondaryDarkHighContrast = Color(0xFFE9F1F3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFBCC4C6)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050C0E)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDEE3E4)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF252B2C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131313)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E1)
            override val surfaceDarkHighContrast = Color(0xFF131313)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF1F1)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC3C4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkHighContrast = Color(0xFF131313)
            override val surfaceBrightDarkHighContrast = Color(0xFF505050)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2020)
            override val surfaceContainerDarkHighContrast = Color(0xFF303030)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF474746)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF525E5F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF6A7778)
            override val onPrimaryContainerLight = Color(0xFFF4FEFF)
            override val secondaryLight = Color(0xFF615B55)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF7B736D)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF4B4642)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF635D59)
            override val onTertiaryContainerLight = Color(0xFFDFD6D1)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9F8)
            override val onBackgroundLight = Color(0xFF1B1C1C)
            override val surfaceLight = Color(0xFFFBF9F8)
            override val onSurfaceLight = Color(0xFF1B1C1C)
            override val surfaceVariantLight = Color(0xFFDFE3E3)
            override val onSurfaceVariantLight = Color(0xFF424848)
            override val outlineLight = Color(0xFF737878)
            override val outlineVariantLight = Color(0xFFC3C7C7)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303030)
            override val inverseOnSurfaceLight = Color(0xFFF3F0EF)
            override val inversePrimaryLight = Color(0xFFBCC9CA)
            override val surfaceDimLight = Color(0xFFDCD9D9)
            override val surfaceBrightLight = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F2)
            override val surfaceContainerLight = Color(0xFFF0EDED)
            override val surfaceContainerHighLight = Color(0xFFEAE8E7)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E1)
            override val primaryLightMediumContrast = Color(0xFF2C3839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF636F70)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B3530)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF736C66)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3A3532)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF635D59)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1C)
            override val surfaceLightMediumContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightMediumContrast = Color(0xFF111111)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323737)
            override val outlineLightMediumContrast = Color(0xFF4E5354)
            override val outlineVariantLightMediumContrast = Color(0xFF696E6E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF3F0EF)
            override val inversePrimaryLightMediumContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C6C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE8E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D1)
            override val primaryLightHighContrast = Color(0xFF222E2F)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF3F4B4C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302B27)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4E4843)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF302B28)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4E4844)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1C)
            override val surfaceLightHighContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282D2D)
            override val outlineVariantLightHighContrast = Color(0xFF454A4A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightHighContrast = Color(0xFFBAB8B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF3F0EF)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D4D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C6C5)
            override val primaryDark = Color(0xFFBCC9CA)
            override val onPrimaryDark = Color(0xFF263334)
            override val primaryContainerDark = Color(0xFF869394)
            override val onPrimaryContainerDark = Color(0xFF192526)
            override val secondaryDark = Color(0xFFCEC5BE)
            override val onSecondaryDark = Color(0xFF352F2B)
            override val secondaryContainerDark = Color(0xFF978F89)
            override val onSecondaryContainerDark = Color(0xFF231E1A)
            override val tertiaryDark = Color(0xFFCDC5C0)
            override val onTertiaryDark = Color(0xFF342F2C)
            override val tertiaryContainerDark = Color(0xFF635D59)
            override val onTertiaryContainerDark = Color(0xFFDFD6D1)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131313)
            override val onBackgroundDark = Color(0xFFE4E2E1)
            override val surfaceDark = Color(0xFF131313)
            override val onSurfaceDark = Color(0xFFE4E2E1)
            override val surfaceVariantDark = Color(0xFF424848)
            override val onSurfaceVariantDark = Color(0xFFC3C7C7)
            override val outlineDark = Color(0xFF8D9292)
            override val outlineVariantDark = Color(0xFF424848)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDark = Color(0xFF303030)
            override val inversePrimaryDark = Color(0xFF546162)
            override val surfaceDimDark = Color(0xFF131313)
            override val surfaceBrightDark = Color(0xFF393939)
            override val surfaceContainerLowestDark = Color(0xFF0E0E0E)
            override val surfaceContainerLowDark = Color(0xFF1B1C1C)
            override val surfaceContainerDark = Color(0xFF1F2020)
            override val surfaceContainerHighDark = Color(0xFF2A2A2A)
            override val surfaceContainerHighestDark = Color(0xFF353535)
            override val primaryDarkMediumContrast = Color(0xFFD1DFE0)
            override val onPrimaryDarkMediumContrast = Color(0xFF1C2829)
            override val primaryContainerDarkMediumContrast = Color(0xFF869394)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE5DAD3)
            override val onSecondaryDarkMediumContrast = Color(0xFF2A2520)
            override val secondaryContainerDarkMediumContrast = Color(0xFF978F89)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE4DBD5)
            override val onTertiaryDarkMediumContrast = Color(0xFF292522)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF978F8B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131313)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E1)
            override val surfaceDarkMediumContrast = Color(0xFF131313)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDDD)
            override val outlineDarkMediumContrast = Color(0xFFAEB3B3)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9191)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2A2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkMediumContrast = Color(0xFF131313)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444444)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070707)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1E)
            override val surfaceContainerDarkMediumContrast = Color(0xFF282828)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323232)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3E3E3D)
            override val primaryDarkHighContrast = Color(0xFFE5F3F3)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB8C5C6)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF030D0E)
            override val secondaryDarkHighContrast = Color(0xFFF9EEE7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCAC1BA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0A07)
            override val tertiaryDarkHighContrast = Color(0xFFF8EEE9)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC9C1BC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0E0B08)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131313)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E1)
            override val surfaceDarkHighContrast = Color(0xFF131313)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF1F1)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC3C4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkHighContrast = Color(0xFF131313)
            override val surfaceBrightDarkHighContrast = Color(0xFF505050)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2020)
            override val surfaceContainerDarkHighContrast = Color(0xFF303030)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF474746)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF525E5F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF6A7778)
            override val onPrimaryContainerLight = Color(0xFFF4FEFF)
            override val secondaryLight = Color(0xFF41494B)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF596163)
            override val onSecondaryContainerLight = Color(0xFFD4DCDE)
            override val tertiaryLight = Color(0xFF655861)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF7E717A)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9F8)
            override val onBackgroundLight = Color(0xFF1B1C1C)
            override val surfaceLight = Color(0xFFFBF9F8)
            override val onSurfaceLight = Color(0xFF1B1C1C)
            override val surfaceVariantLight = Color(0xFFDFE3E3)
            override val onSurfaceVariantLight = Color(0xFF424848)
            override val outlineLight = Color(0xFF737878)
            override val outlineVariantLight = Color(0xFFC3C7C7)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303030)
            override val inverseOnSurfaceLight = Color(0xFFF3F0EF)
            override val inversePrimaryLight = Color(0xFFBCC9CA)
            override val surfaceDimLight = Color(0xFFDCD9D9)
            override val surfaceBrightLight = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F2)
            override val surfaceContainerLight = Color(0xFFF0EDED)
            override val surfaceContainerHighLight = Color(0xFFEAE8E7)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E1)
            override val primaryLightMediumContrast = Color(0xFF2C3839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF636F70)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF303739)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF596163)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3E333B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF766972)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1C)
            override val surfaceLightMediumContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightMediumContrast = Color(0xFF111111)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323737)
            override val outlineLightMediumContrast = Color(0xFF4E5354)
            override val outlineVariantLightMediumContrast = Color(0xFF696E6E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF3F0EF)
            override val inversePrimaryLightMediumContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C6C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE8E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D1)
            override val primaryLightHighContrast = Color(0xFF222E2F)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF3F4B4C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF262D2F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434A4C)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF332931)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF51464E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9F8)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1C)
            override val surfaceLightHighContrast = Color(0xFFFBF9F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE3E3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282D2D)
            override val outlineVariantLightHighContrast = Color(0xFF454A4A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303030)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBCC9CA)
            override val surfaceDimLightHighContrast = Color(0xFFBAB8B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF3F0EF)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D4D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C6C5)
            override val primaryDark = Color(0xFFBCC9CA)
            override val onPrimaryDark = Color(0xFF263334)
            override val primaryContainerDark = Color(0xFF869394)
            override val onPrimaryContainerDark = Color(0xFF192526)
            override val secondaryDark = Color(0xFFC0C8CA)
            override val onSecondaryDark = Color(0xFF2A3234)
            override val secondaryContainerDark = Color(0xFF596163)
            override val onSecondaryContainerDark = Color(0xFFD4DCDE)
            override val tertiaryDark = Color(0xFFD2C2CC)
            override val onTertiaryDark = Color(0xFF382D35)
            override val tertiaryContainerDark = Color(0xFF9B8D96)
            override val onTertiaryContainerDark = Color(0xFF21181F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131313)
            override val onBackgroundDark = Color(0xFFE4E2E1)
            override val surfaceDark = Color(0xFF131313)
            override val onSurfaceDark = Color(0xFFE4E2E1)
            override val surfaceVariantDark = Color(0xFF424848)
            override val onSurfaceVariantDark = Color(0xFFC3C7C7)
            override val outlineDark = Color(0xFF8D9292)
            override val outlineVariantDark = Color(0xFF424848)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDark = Color(0xFF303030)
            override val inversePrimaryDark = Color(0xFF546162)
            override val surfaceDimDark = Color(0xFF131313)
            override val surfaceBrightDark = Color(0xFF393939)
            override val surfaceContainerLowestDark = Color(0xFF0E0E0E)
            override val surfaceContainerLowDark = Color(0xFF1B1C1C)
            override val surfaceContainerDark = Color(0xFF1F2020)
            override val surfaceContainerHighDark = Color(0xFF2A2A2A)
            override val surfaceContainerHighestDark = Color(0xFF353535)
            override val primaryDarkMediumContrast = Color(0xFFD1DFE0)
            override val onPrimaryDarkMediumContrast = Color(0xFF1C2829)
            override val primaryContainerDarkMediumContrast = Color(0xFF869394)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD6DEE0)
            override val onSecondaryDarkMediumContrast = Color(0xFF1F2729)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8A9294)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE9D8E2)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D232A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9B8D96)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131313)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E1)
            override val surfaceDarkMediumContrast = Color(0xFF131313)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDDD)
            override val outlineDarkMediumContrast = Color(0xFFAEB3B3)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9191)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2A2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkMediumContrast = Color(0xFF131313)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444444)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070707)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1E)
            override val surfaceContainerDarkMediumContrast = Color(0xFF282828)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323232)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3E3E3D)
            override val primaryDarkHighContrast = Color(0xFFE5F3F3)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB8C5C6)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF030D0E)
            override val secondaryDarkHighContrast = Color(0xFFE9F1F3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFBCC4C6)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050C0E)
            override val tertiaryDarkHighContrast = Color(0xFFFDEBF5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCEBEC8)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF11090F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131313)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E1)
            override val surfaceDarkHighContrast = Color(0xFF131313)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424848)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF1F1)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC3C4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF3E4A4B)
            override val surfaceDimDarkHighContrast = Color(0xFF131313)
            override val surfaceBrightDarkHighContrast = Color(0xFF505050)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2020)
            override val surfaceContainerDarkHighContrast = Color(0xFF303030)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF474746)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("asbestos", "Asbestos")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}