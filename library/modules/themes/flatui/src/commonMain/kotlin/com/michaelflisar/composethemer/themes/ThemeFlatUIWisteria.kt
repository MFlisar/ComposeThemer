package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIWisteria : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF732993)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8E44AD)
            override val onPrimaryContainerLight = Color(0xFFF8D8FF)
            override val secondaryLight = Color(0xFF361761)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D3079)
            override val onSecondaryContainerLight = Color(0xFFBD9DEE)
            override val tertiaryLight = Color(0xFF8A2992)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFA644AD)
            override val onTertiaryContainerLight = Color(0xFFFFEAFA)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FB)
            override val onBackgroundLight = Color(0xFF1F1A20)
            override val surfaceLight = Color(0xFFFFF7FB)
            override val onSurfaceLight = Color(0xFF1F1A20)
            override val surfaceVariantLight = Color(0xFFEEDEEE)
            override val onSurfaceVariantLight = Color(0xFF4E4350)
            override val outlineLight = Color(0xFF807381)
            override val outlineVariantLight = Color(0xFFD1C2D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF352E36)
            override val inverseOnSurfaceLight = Color(0xFFF9EDF7)
            override val inversePrimaryLight = Color(0xFFECB2FF)
            override val surfaceDimLight = Color(0xFFE2D7E0)
            override val surfaceBrightLight = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF0FA)
            override val surfaceContainerLight = Color(0xFFF6EAF4)
            override val surfaceContainerHighLight = Color(0xFFF0E5EF)
            override val surfaceContainerHighestLight = Color(0xFFEBDFE9)
            override val primaryLightMediumContrast = Color(0xFF5A067A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8E44AD)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF361761)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D3079)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFE1CCFF)
            override val tertiaryLightMediumContrast = Color(0xFF62006C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA644AD)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightMediumContrast = Color(0xFF150F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3D333F)
            override val outlineLightMediumContrast = Color(0xFF5A4F5C)
            override val outlineVariantLightMediumContrast = Color(0xFF756977)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9EDF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFECB2FF)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC3CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF0FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E5EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5D9E3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9CED8)
            override val primaryLightHighContrast = Color(0xFF4B0068)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6F258F)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF361761)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4D3079)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF52005A)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7C1985)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightHighContrast = Color(0xFF1F1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322935)
            override val outlineVariantLightHighContrast = Color(0xFF504652)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFECB2FF)
            override val surfaceDimLightHighContrast = Color(0xFFC0B6BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9EDF7)
            override val surfaceContainerLightHighContrast = Color(0xFFEBDFE9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD1DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC3CD)
            override val primaryDark = Color(0xFFECB2FF)
            override val onPrimaryDark = Color(0xFF520071)
            override val primaryContainerDark = Color(0xFF8E44AD)
            override val onPrimaryContainerDark = Color(0xFFF8D8FF)
            override val secondaryDark = Color(0xFFD6BAFF)
            override val onSecondaryDark = Color(0xFF3D1F68)
            override val secondaryContainerDark = Color(0xFF4D3079)
            override val onSecondaryContainerDark = Color(0xFFBD9DEE)
            override val tertiaryDark = Color(0xFFFFA9FF)
            override val onTertiaryDark = Color(0xFF590062)
            override val tertiaryContainerDark = Color(0xFFA644AD)
            override val onTertiaryContainerDark = Color(0xFFFFEAFA)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171218)
            override val onBackgroundDark = Color(0xFFEBDFE9)
            override val surfaceDark = Color(0xFF171218)
            override val onSurfaceDark = Color(0xFFEBDFE9)
            override val surfaceVariantDark = Color(0xFF4E4350)
            override val onSurfaceVariantDark = Color(0xFFD1C2D2)
            override val outlineDark = Color(0xFF9A8C9B)
            override val outlineVariantDark = Color(0xFF4E4350)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDark = Color(0xFF352E36)
            override val inversePrimaryDark = Color(0xFF873DA6)
            override val surfaceDimDark = Color(0xFF171218)
            override val surfaceBrightDark = Color(0xFF3E373F)
            override val surfaceContainerLowestDark = Color(0xFF110C13)
            override val surfaceContainerLowDark = Color(0xFF1F1A20)
            override val surfaceContainerDark = Color(0xFF231E25)
            override val surfaceContainerHighDark = Color(0xFF2E282F)
            override val surfaceContainerHighestDark = Color(0xFF39333A)
            override val primaryDarkMediumContrast = Color(0xFFF5D0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF41005B)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE71DD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE7D5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF32125D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA182D1)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCDFB)
            override val onTertiaryDarkMediumContrast = Color(0xFF47004F)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCF69D4)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171218)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBDFE9)
            override val surfaceDarkMediumContrast = Color(0xFF171218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7D7E8)
            override val outlineDarkMediumContrast = Color(0xFFBCADBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF998C9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E282F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6E238D)
            override val surfaceDimDarkMediumContrast = Color(0xFF171218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF49424A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A060C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211C23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C262D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423B43)
            override val primaryDarkHighContrast = Color(0xFFFEEAFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEAACFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF190025)
            override val secondaryDarkHighContrast = Color(0xFFF7ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD3B5FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF13002F)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAFA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFEA2FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1C001F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171218)
            override val onBackgroundDarkHighContrast = Color(0xFFEBDFE9)
            override val surfaceDarkHighContrast = Color(0xFF171218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEBFB)
            override val outlineVariantDarkHighContrast = Color(0xFFCDBECE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6E238D)
            override val surfaceDimDarkHighContrast = Color(0xFF171218)
            override val surfaceBrightDarkHighContrast = Color(0xFF554E56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231E25)
            override val surfaceContainerDarkHighContrast = Color(0xFF352E36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403941)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4C444C)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF732993)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8E44AD)
            override val onPrimaryContainerLight = Color(0xFFF8D8FF)
            override val secondaryLight = Color(0xFF361761)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D3079)
            override val onSecondaryContainerLight = Color(0xFFBD9DEE)
            override val tertiaryLight = Color(0xFF655979)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE8D8FF)
            override val onTertiaryContainerLight = Color(0xFF695C7D)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FB)
            override val onBackgroundLight = Color(0xFF1F1A20)
            override val surfaceLight = Color(0xFFFFF7FB)
            override val onSurfaceLight = Color(0xFF1F1A20)
            override val surfaceVariantLight = Color(0xFFEEDEEE)
            override val onSurfaceVariantLight = Color(0xFF4E4350)
            override val outlineLight = Color(0xFF807381)
            override val outlineVariantLight = Color(0xFFD1C2D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF352E36)
            override val inverseOnSurfaceLight = Color(0xFFF9EDF7)
            override val inversePrimaryLight = Color(0xFFECB2FF)
            override val surfaceDimLight = Color(0xFFE2D7E0)
            override val surfaceBrightLight = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF0FA)
            override val surfaceContainerLight = Color(0xFFF6EAF4)
            override val surfaceContainerHighLight = Color(0xFFF0E5EF)
            override val surfaceContainerHighestLight = Color(0xFFEBDFE9)
            override val primaryLightMediumContrast = Color(0xFF5A067A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8E44AD)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF361761)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D3079)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFE1CCFF)
            override val tertiaryLightMediumContrast = Color(0xFF3C314F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF746789)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightMediumContrast = Color(0xFF150F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3D333F)
            override val outlineLightMediumContrast = Color(0xFF5A4F5C)
            override val outlineVariantLightMediumContrast = Color(0xFF756977)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9EDF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFECB2FF)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC3CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF0FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E5EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5D9E3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9CED8)
            override val primaryLightHighContrast = Color(0xFF4B0068)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6F258F)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF361761)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4D3079)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF312744)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4F4463)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightHighContrast = Color(0xFF1F1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322935)
            override val outlineVariantLightHighContrast = Color(0xFF504652)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFECB2FF)
            override val surfaceDimLightHighContrast = Color(0xFFC0B6BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9EDF7)
            override val surfaceContainerLightHighContrast = Color(0xFFEBDFE9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD1DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC3CD)
            override val primaryDark = Color(0xFFECB2FF)
            override val onPrimaryDark = Color(0xFF520071)
            override val primaryContainerDark = Color(0xFF8E44AD)
            override val onPrimaryContainerDark = Color(0xFFF8D8FF)
            override val secondaryDark = Color(0xFFD6BAFF)
            override val onSecondaryDark = Color(0xFF3D1F68)
            override val secondaryContainerDark = Color(0xFF4D3079)
            override val onSecondaryContainerDark = Color(0xFFBD9DEE)
            override val tertiaryDark = Color(0xFFFFFAFB)
            override val onTertiaryDark = Color(0xFF362B49)
            override val tertiaryContainerDark = Color(0xFFE8D8FF)
            override val onTertiaryContainerDark = Color(0xFF695C7D)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171218)
            override val onBackgroundDark = Color(0xFFEBDFE9)
            override val surfaceDark = Color(0xFF171218)
            override val onSurfaceDark = Color(0xFFEBDFE9)
            override val surfaceVariantDark = Color(0xFF4E4350)
            override val onSurfaceVariantDark = Color(0xFFD1C2D2)
            override val outlineDark = Color(0xFF9A8C9B)
            override val outlineVariantDark = Color(0xFF4E4350)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDark = Color(0xFF352E36)
            override val inversePrimaryDark = Color(0xFF873DA6)
            override val surfaceDimDark = Color(0xFF171218)
            override val surfaceBrightDark = Color(0xFF3E373F)
            override val surfaceContainerLowestDark = Color(0xFF110C13)
            override val surfaceContainerLowDark = Color(0xFF1F1A20)
            override val surfaceContainerDark = Color(0xFF231E25)
            override val surfaceContainerHighDark = Color(0xFF2E282F)
            override val surfaceContainerHighestDark = Color(0xFF39333A)
            override val primaryDarkMediumContrast = Color(0xFFF5D0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF41005B)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE71DD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE7D5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF32125D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA182D1)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFAFB)
            override val onTertiaryDarkMediumContrast = Color(0xFF362B49)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE8D8FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF4C4060)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171218)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBDFE9)
            override val surfaceDarkMediumContrast = Color(0xFF171218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7D7E8)
            override val outlineDarkMediumContrast = Color(0xFFBCADBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF998C9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E282F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6E238D)
            override val surfaceDimDarkMediumContrast = Color(0xFF171218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF49424A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A060C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211C23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C262D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423B43)
            override val primaryDarkHighContrast = Color(0xFFFEEAFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEAACFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF190025)
            override val secondaryDarkHighContrast = Color(0xFFF7ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD3B5FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF13002F)
            override val tertiaryDarkHighContrast = Color(0xFFFFFAFB)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE8D8FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2C223F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171218)
            override val onBackgroundDarkHighContrast = Color(0xFFEBDFE9)
            override val surfaceDarkHighContrast = Color(0xFF171218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEBFB)
            override val outlineVariantDarkHighContrast = Color(0xFFCDBECE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6E238D)
            override val surfaceDimDarkHighContrast = Color(0xFF171218)
            override val surfaceBrightDarkHighContrast = Color(0xFF554E56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231E25)
            override val surfaceContainerDarkHighContrast = Color(0xFF352E36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403941)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4C444C)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF732993)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8E44AD)
            override val onPrimaryContainerLight = Color(0xFFF8D8FF)
            override val secondaryLight = Color(0xFF6A5F02)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFADA044)
            override val onSecondaryContainerLight = Color(0xFF3D3600)
            override val tertiaryLight = Color(0xFF60571A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF797030)
            override val onTertiaryContainerLight = Color(0xFFFFF5BB)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FB)
            override val onBackgroundLight = Color(0xFF1F1A20)
            override val surfaceLight = Color(0xFFFFF7FB)
            override val onSurfaceLight = Color(0xFF1F1A20)
            override val surfaceVariantLight = Color(0xFFEEDEEE)
            override val onSurfaceVariantLight = Color(0xFF4E4350)
            override val outlineLight = Color(0xFF807381)
            override val outlineVariantLight = Color(0xFFD1C2D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF352E36)
            override val inverseOnSurfaceLight = Color(0xFFF9EDF7)
            override val inversePrimaryLight = Color(0xFFECB2FF)
            override val surfaceDimLight = Color(0xFFE2D7E0)
            override val surfaceBrightLight = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF0FA)
            override val surfaceContainerLight = Color(0xFFF6EAF4)
            override val surfaceContainerHighLight = Color(0xFFF0E5EF)
            override val surfaceContainerHighestLight = Color(0xFFEBDFE9)
            override val primaryLightMediumContrast = Color(0xFF5A067A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8E44AD)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF796E15)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3D3700)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF776E2E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightMediumContrast = Color(0xFF150F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3D333F)
            override val outlineLightMediumContrast = Color(0xFF5A4F5C)
            override val outlineVariantLightMediumContrast = Color(0xFF756977)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9EDF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFECB2FF)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC3CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF0FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E5EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5D9E3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9CED8)
            override val primaryLightHighContrast = Color(0xFF4B0068)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6F258F)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF322C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF524A00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF322D00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF514A0C)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightHighContrast = Color(0xFF1F1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322935)
            override val outlineVariantLightHighContrast = Color(0xFF504652)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFECB2FF)
            override val surfaceDimLightHighContrast = Color(0xFFC0B6BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9EDF7)
            override val surfaceContainerLightHighContrast = Color(0xFFEBDFE9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD1DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC3CD)
            override val primaryDark = Color(0xFFECB2FF)
            override val onPrimaryDark = Color(0xFF520071)
            override val primaryContainerDark = Color(0xFF8E44AD)
            override val onPrimaryContainerDark = Color(0xFFF8D8FF)
            override val secondaryDark = Color(0xFFD6C867)
            override val onSecondaryDark = Color(0xFF373100)
            override val secondaryContainerDark = Color(0xFFADA044)
            override val onSecondaryContainerDark = Color(0xFF3D3600)
            override val tertiaryDark = Color(0xFFD3C87E)
            override val onTertiaryDark = Color(0xFF373100)
            override val tertiaryContainerDark = Color(0xFF797030)
            override val onTertiaryContainerDark = Color(0xFFFFF5BB)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171218)
            override val onBackgroundDark = Color(0xFFEBDFE9)
            override val surfaceDark = Color(0xFF171218)
            override val onSurfaceDark = Color(0xFFEBDFE9)
            override val surfaceVariantDark = Color(0xFF4E4350)
            override val onSurfaceVariantDark = Color(0xFFD1C2D2)
            override val outlineDark = Color(0xFF9A8C9B)
            override val outlineVariantDark = Color(0xFF4E4350)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDark = Color(0xFF352E36)
            override val inversePrimaryDark = Color(0xFF873DA6)
            override val surfaceDimDark = Color(0xFF171218)
            override val surfaceBrightDark = Color(0xFF3E373F)
            override val surfaceContainerLowestDark = Color(0xFF110C13)
            override val surfaceContainerLowDark = Color(0xFF1F1A20)
            override val surfaceContainerDark = Color(0xFF231E25)
            override val surfaceContainerHighDark = Color(0xFF2E282F)
            override val surfaceContainerHighestDark = Color(0xFF39333A)
            override val primaryDarkMediumContrast = Color(0xFFF5D0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF41005B)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE71DD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFEDDE7B)
            override val onSecondaryDarkMediumContrast = Color(0xFF2B2600)
            override val secondaryContainerDarkMediumContrast = Color(0xFFADA044)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF151200)
            override val tertiaryDarkMediumContrast = Color(0xFFEADE92)
            override val onTertiaryDarkMediumContrast = Color(0xFF2B2600)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9C924E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171218)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBDFE9)
            override val surfaceDarkMediumContrast = Color(0xFF171218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7D7E8)
            override val outlineDarkMediumContrast = Color(0xFFBCADBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF998C9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E282F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6E238D)
            override val surfaceDimDarkMediumContrast = Color(0xFF171218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF49424A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A060C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211C23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C262D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423B43)
            override val primaryDarkHighContrast = Color(0xFFFEEAFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEAACFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF190025)
            override val secondaryDarkHighContrast = Color(0xFFFFF29F)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD2C464)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFEF2A4)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCFC47B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171218)
            override val onBackgroundDarkHighContrast = Color(0xFFEBDFE9)
            override val surfaceDarkHighContrast = Color(0xFF171218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEBFB)
            override val outlineVariantDarkHighContrast = Color(0xFFCDBECE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6E238D)
            override val surfaceDimDarkHighContrast = Color(0xFF171218)
            override val surfaceBrightDarkHighContrast = Color(0xFF554E56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231E25)
            override val surfaceContainerDarkHighContrast = Color(0xFF352E36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403941)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4C444C)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF732993)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8E44AD)
            override val onPrimaryContainerLight = Color(0xFFF8D8FF)
            override val secondaryLight = Color(0xFF361761)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D3079)
            override val onSecondaryContainerLight = Color(0xFFBD9DEE)
            override val tertiaryLight = Color(0xFF815122)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF9D6938)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FB)
            override val onBackgroundLight = Color(0xFF1F1A20)
            override val surfaceLight = Color(0xFFFFF7FB)
            override val onSurfaceLight = Color(0xFF1F1A20)
            override val surfaceVariantLight = Color(0xFFEEDEEE)
            override val onSurfaceVariantLight = Color(0xFF4E4350)
            override val outlineLight = Color(0xFF807381)
            override val outlineVariantLight = Color(0xFFD1C2D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF352E36)
            override val inverseOnSurfaceLight = Color(0xFFF9EDF7)
            override val inversePrimaryLight = Color(0xFFECB2FF)
            override val surfaceDimLight = Color(0xFFE2D7E0)
            override val surfaceBrightLight = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFCF0FA)
            override val surfaceContainerLight = Color(0xFFF6EAF4)
            override val surfaceContainerHighLight = Color(0xFFF0E5EF)
            override val surfaceContainerHighestLight = Color(0xFFEBDFE9)
            override val primaryLightMediumContrast = Color(0xFF5A067A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8E44AD)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF361761)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D3079)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFE1CCFF)
            override val tertiaryLightMediumContrast = Color(0xFF532C00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF946231)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1F1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightMediumContrast = Color(0xFF150F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3D333F)
            override val outlineLightMediumContrast = Color(0xFF5A4F5C)
            override val outlineVariantLightMediumContrast = Color(0xFF756977)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF9EDF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFECB2FF)
            override val surfaceDimLightMediumContrast = Color(0xFFCEC3CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFCF0FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF0E5EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE5D9E3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD9CED8)
            override val primaryLightHighContrast = Color(0xFF4B0068)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6F258F)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF361761)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4D3079)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF452400)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6A3F10)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FB)
            override val onBackgroundLightHighContrast = Color(0xFF1F1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEEDEEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF322935)
            override val outlineVariantLightHighContrast = Color(0xFF504652)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF352E36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFECB2FF)
            override val surfaceDimLightHighContrast = Color(0xFFC0B6BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF9EDF7)
            override val surfaceContainerLightHighContrast = Color(0xFFEBDFE9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDCD1DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCEC3CD)
            override val primaryDark = Color(0xFFECB2FF)
            override val onPrimaryDark = Color(0xFF520071)
            override val primaryContainerDark = Color(0xFF8E44AD)
            override val onPrimaryContainerDark = Color(0xFFF8D8FF)
            override val secondaryDark = Color(0xFFD6BAFF)
            override val onSecondaryDark = Color(0xFF3D1F68)
            override val secondaryContainerDark = Color(0xFF4D3079)
            override val onSecondaryContainerDark = Color(0xFFBD9DEE)
            override val tertiaryDark = Color(0xFFF9BA80)
            override val onTertiaryDark = Color(0xFF4B2800)
            override val tertiaryContainerDark = Color(0xFFBD8550)
            override val onTertiaryContainerDark = Color(0xFF2C1500)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF171218)
            override val onBackgroundDark = Color(0xFFEBDFE9)
            override val surfaceDark = Color(0xFF171218)
            override val onSurfaceDark = Color(0xFFEBDFE9)
            override val surfaceVariantDark = Color(0xFF4E4350)
            override val onSurfaceVariantDark = Color(0xFFD1C2D2)
            override val outlineDark = Color(0xFF9A8C9B)
            override val outlineVariantDark = Color(0xFF4E4350)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDark = Color(0xFF352E36)
            override val inversePrimaryDark = Color(0xFF873DA6)
            override val surfaceDimDark = Color(0xFF171218)
            override val surfaceBrightDark = Color(0xFF3E373F)
            override val surfaceContainerLowestDark = Color(0xFF110C13)
            override val surfaceContainerLowDark = Color(0xFF1F1A20)
            override val surfaceContainerDark = Color(0xFF231E25)
            override val surfaceContainerHighDark = Color(0xFF2E282F)
            override val surfaceContainerHighestDark = Color(0xFF39333A)
            override val primaryDarkMediumContrast = Color(0xFFF5D0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF41005B)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE71DD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE7D5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF32125D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA182D1)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B1)
            override val onTertiaryDarkMediumContrast = Color(0xFF3C1E00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBD8550)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF171218)
            override val onBackgroundDarkMediumContrast = Color(0xFFEBDFE9)
            override val surfaceDarkMediumContrast = Color(0xFF171218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE7D7E8)
            override val outlineDarkMediumContrast = Color(0xFFBCADBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF998C9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2E282F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6E238D)
            override val surfaceDimDarkMediumContrast = Color(0xFF171218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF49424A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0A060C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211C23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2C262D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF373038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF423B43)
            override val primaryDarkHighContrast = Color(0xFFFEEAFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEAACFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF190025)
            override val secondaryDarkHighContrast = Color(0xFFF7ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD3B5FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF13002F)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDE0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF5B67D)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF160800)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF171218)
            override val onBackgroundDarkHighContrast = Color(0xFFEBDFE9)
            override val surfaceDarkHighContrast = Color(0xFF171218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4E4350)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFBEBFB)
            override val outlineVariantDarkHighContrast = Color(0xFFCDBECE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEBDFE9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6E238D)
            override val surfaceDimDarkHighContrast = Color(0xFF171218)
            override val surfaceBrightDarkHighContrast = Color(0xFF554E56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231E25)
            override val surfaceContainerDarkHighContrast = Color(0xFF352E36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF403941)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4C444C)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("wisteria", "Wisteria")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}