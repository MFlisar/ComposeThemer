package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUICarrot : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF944A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE67E22)
            override val onPrimaryContainerLight = Color(0xFF502600)
            override val secondaryLight = Color(0xFF834D00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA16418)
            override val onSecondaryContainerLight = Color(0xFFFFF7F2)
            override val tertiaryLight = Color(0xFF765B00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE6B622)
            override val onTertiaryContainerLight = Color(0xFF5F4900)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F5)
            override val onBackgroundLight = Color(0xFF231A13)
            override val surfaceLight = Color(0xFFFFF8F5)
            override val onSurfaceLight = Color(0xFF231A13)
            override val surfaceVariantLight = Color(0xFFF9DDCC)
            override val onSurfaceVariantLight = Color(0xFF564337)
            override val outlineLight = Color(0xFF897365)
            override val outlineVariantLight = Color(0xFFDCC1B1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF392E27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE4)
            override val inversePrimaryLight = Color(0xFFFFB783)
            override val surfaceDimLight = Color(0xFFE9D6CC)
            override val surfaceBrightLight = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EA)
            override val surfaceContainerLight = Color(0xFFFEEADF)
            override val surfaceContainerHighLight = Color(0xFFF8E4DA)
            override val surfaceContainerHighestLight = Color(0xFFF2DFD4)
            override val primaryLightMediumContrast = Color(0xFF582A00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFAA5600)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF512E00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9B5F13)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF453400)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF886900)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightMediumContrast = Color(0xFF231A13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightMediumContrast = Color(0xFF180F09)
            override val surfaceVariantLightMediumContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF443327)
            override val outlineLightMediumContrast = Color(0xFF624F42)
            override val outlineVariantLightMediumContrast = Color(0xFF7E695B)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE4)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB783)
            override val surfaceDimLightMediumContrast = Color(0xFFD5C3B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF8E4DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFECD9CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE0CEC3)
            override val primaryLightHighContrast = Color(0xFF492100)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF743900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF432500)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6C3E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF392A00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5C4600)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightHighContrast = Color(0xFF231A13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF39291E)
            override val outlineVariantLightHighContrast = Color(0xFF584539)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB783)
            override val surfaceDimLightHighContrast = Color(0xFFC7B5AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE4)
            override val surfaceContainerLightHighContrast = Color(0xFFF2DFD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE3D1C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD5C3B9)
            override val primaryDark = Color(0xFFFFB783)
            override val onPrimaryDark = Color(0xFF4F2500)
            override val primaryContainerDark = Color(0xFFE67E22)
            override val onPrimaryContainerDark = Color(0xFF502600)
            override val secondaryDark = Color(0xFFFFB86D)
            override val onSecondaryDark = Color(0xFF492900)
            override val secondaryContainerDark = Color(0xFFA16418)
            override val onSecondaryContainerDark = Color(0xFFFFF7F2)
            override val tertiaryDark = Color(0xFFFFD35E)
            override val onTertiaryDark = Color(0xFF3E2E00)
            override val tertiaryContainerDark = Color(0xFFE6B622)
            override val onTertiaryContainerDark = Color(0xFF5F4900)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110B)
            override val onBackgroundDark = Color(0xFFF2DFD4)
            override val surfaceDark = Color(0xFF1A110B)
            override val onSurfaceDark = Color(0xFFF2DFD4)
            override val surfaceVariantDark = Color(0xFF564337)
            override val onSurfaceVariantDark = Color(0xFFDCC1B1)
            override val outlineDark = Color(0xFFA48C7D)
            override val outlineVariantDark = Color(0xFF564337)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDark = Color(0xFF392E27)
            override val inversePrimaryDark = Color(0xFF944A00)
            override val surfaceDimDark = Color(0xFF1A110B)
            override val surfaceBrightDark = Color(0xFF42372F)
            override val surfaceContainerLowestDark = Color(0xFF150C07)
            override val surfaceContainerLowDark = Color(0xFF231A13)
            override val surfaceContainerDark = Color(0xFF271E17)
            override val surfaceContainerHighDark = Color(0xFF322821)
            override val surfaceContainerHighestDark = Color(0xFF3E322B)
            override val primaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onPrimaryDarkMediumContrast = Color(0xFF3F1C00)
            override val primaryContainerDarkMediumContrast = Color(0xFFE67E22)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF110500)
            override val secondaryDarkMediumContrast = Color(0xFFFFD5AD)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A1F00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC58235)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD875)
            override val onTertiaryDarkMediumContrast = Color(0xFF312400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE6B622)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3C2D00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF2DFD4)
            override val surfaceDarkMediumContrast = Color(0xFF1A110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF3D7C6)
            override val outlineDarkMediumContrast = Color(0xFFC6AD9D)
            override val outlineVariantDarkMediumContrast = Color(0xFFA38C7D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322821)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723800)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4E423A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF30261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3029)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF473B34)
            override val primaryDarkHighContrast = Color(0xFFFFECE2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB179)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF180700)
            override val secondaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB361)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF150800)
            override val tertiaryDarkHighContrast = Color(0xFFFFEECD)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFEDBC29)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF110A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF2DFD4)
            override val surfaceDarkHighContrast = Color(0xFF1A110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE2)
            override val outlineVariantDarkHighContrast = Color(0xFFD8BEAD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723800)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5A4E45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF392E27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF453932)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF51443C)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF944A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE67E22)
            override val onPrimaryContainerLight = Color(0xFF502600)
            override val secondaryLight = Color(0xFF834D00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA16418)
            override val onSecondaryContainerLight = Color(0xFFFFF7F2)
            override val tertiaryLight = Color(0xFF6D5C44)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFE7C9)
            override val onTertiaryContainerLight = Color(0xFF78674F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F5)
            override val onBackgroundLight = Color(0xFF231A13)
            override val surfaceLight = Color(0xFFFFF8F5)
            override val onSurfaceLight = Color(0xFF231A13)
            override val surfaceVariantLight = Color(0xFFF9DDCC)
            override val onSurfaceVariantLight = Color(0xFF564337)
            override val outlineLight = Color(0xFF897365)
            override val outlineVariantLight = Color(0xFFDCC1B1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF392E27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE4)
            override val inversePrimaryLight = Color(0xFFFFB783)
            override val surfaceDimLight = Color(0xFFE9D6CC)
            override val surfaceBrightLight = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EA)
            override val surfaceContainerLight = Color(0xFFFEEADF)
            override val surfaceContainerHighLight = Color(0xFFF8E4DA)
            override val surfaceContainerHighestLight = Color(0xFFF2DFD4)
            override val primaryLightMediumContrast = Color(0xFF582A00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFAA5600)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF512E00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9B5F13)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF42341F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7C6A52)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightMediumContrast = Color(0xFF231A13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightMediumContrast = Color(0xFF180F09)
            override val surfaceVariantLightMediumContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF443327)
            override val outlineLightMediumContrast = Color(0xFF624F42)
            override val outlineVariantLightMediumContrast = Color(0xFF7E695B)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE4)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB783)
            override val surfaceDimLightMediumContrast = Color(0xFFD5C3B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF8E4DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFECD9CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE0CEC3)
            override val primaryLightHighContrast = Color(0xFF492100)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF743900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF432500)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6C3E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF372A16)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF564731)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightHighContrast = Color(0xFF231A13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF39291E)
            override val outlineVariantLightHighContrast = Color(0xFF584539)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB783)
            override val surfaceDimLightHighContrast = Color(0xFFC7B5AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE4)
            override val surfaceContainerLightHighContrast = Color(0xFFF2DFD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE3D1C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD5C3B9)
            override val primaryDark = Color(0xFFFFB783)
            override val onPrimaryDark = Color(0xFF4F2500)
            override val primaryContainerDark = Color(0xFFE67E22)
            override val onPrimaryContainerDark = Color(0xFF502600)
            override val secondaryDark = Color(0xFFFFB86D)
            override val onSecondaryDark = Color(0xFF492900)
            override val secondaryContainerDark = Color(0xFFA16418)
            override val onSecondaryContainerDark = Color(0xFFFFF7F2)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF3C2E1A)
            override val tertiaryContainerDark = Color(0xFFF7DFC1)
            override val onTertiaryContainerDark = Color(0xFF73624A)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110B)
            override val onBackgroundDark = Color(0xFFF2DFD4)
            override val surfaceDark = Color(0xFF1A110B)
            override val onSurfaceDark = Color(0xFFF2DFD4)
            override val surfaceVariantDark = Color(0xFF564337)
            override val onSurfaceVariantDark = Color(0xFFDCC1B1)
            override val outlineDark = Color(0xFFA48C7D)
            override val outlineVariantDark = Color(0xFF564337)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDark = Color(0xFF392E27)
            override val inversePrimaryDark = Color(0xFF944A00)
            override val surfaceDimDark = Color(0xFF1A110B)
            override val surfaceBrightDark = Color(0xFF42372F)
            override val surfaceContainerLowestDark = Color(0xFF150C07)
            override val surfaceContainerLowDark = Color(0xFF231A13)
            override val surfaceContainerDark = Color(0xFF271E17)
            override val surfaceContainerHighDark = Color(0xFF322821)
            override val surfaceContainerHighestDark = Color(0xFF3E322B)
            override val primaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onPrimaryDarkMediumContrast = Color(0xFF3F1C00)
            override val primaryContainerDarkMediumContrast = Color(0xFFE67E22)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF110500)
            override val secondaryDarkMediumContrast = Color(0xFFFFD5AD)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A1F00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC58235)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF3C2E1A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFF7DFC1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF554530)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF2DFD4)
            override val surfaceDarkMediumContrast = Color(0xFF1A110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF3D7C6)
            override val outlineDarkMediumContrast = Color(0xFFC6AD9D)
            override val outlineVariantDarkMediumContrast = Color(0xFFA38C7D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322821)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723800)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4E423A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF30261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3029)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF473B34)
            override val primaryDarkHighContrast = Color(0xFFFFECE2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB179)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF180700)
            override val secondaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB361)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF150800)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF7DFC1)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF352814)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF2DFD4)
            override val surfaceDarkHighContrast = Color(0xFF1A110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE2)
            override val outlineVariantDarkHighContrast = Color(0xFFD8BEAD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723800)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5A4E45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF392E27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF453932)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF51443C)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF944A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE67E22)
            override val onPrimaryContainerLight = Color(0xFF502600)
            override val secondaryLight = Color(0xFF0056C0)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF226FE6)
            override val onSecondaryContainerLight = Color(0xFFFDFBFF)
            override val tertiaryLight = Color(0xFF00367E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF184DA1)
            override val onTertiaryContainerLight = Color(0xFFA9C3FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F5)
            override val onBackgroundLight = Color(0xFF231A13)
            override val surfaceLight = Color(0xFFFFF8F5)
            override val onSurfaceLight = Color(0xFF231A13)
            override val surfaceVariantLight = Color(0xFFF9DDCC)
            override val onSurfaceVariantLight = Color(0xFF564337)
            override val outlineLight = Color(0xFF897365)
            override val outlineVariantLight = Color(0xFFDCC1B1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF392E27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE4)
            override val inversePrimaryLight = Color(0xFFFFB783)
            override val surfaceDimLight = Color(0xFFE9D6CC)
            override val surfaceBrightLight = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EA)
            override val surfaceContainerLight = Color(0xFFFEEADF)
            override val surfaceContainerHighLight = Color(0xFFF8E4DA)
            override val surfaceContainerHighestLight = Color(0xFFF2DFD4)
            override val primaryLightMediumContrast = Color(0xFF582A00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFAA5600)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003377)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1268DF)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003377)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF184DA1)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFEDF0FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightMediumContrast = Color(0xFF231A13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightMediumContrast = Color(0xFF180F09)
            override val surfaceVariantLightMediumContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF443327)
            override val outlineLightMediumContrast = Color(0xFF624F42)
            override val outlineVariantLightMediumContrast = Color(0xFF7E695B)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE4)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB783)
            override val surfaceDimLightMediumContrast = Color(0xFFD5C3B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF8E4DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFECD9CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE0CEC3)
            override val primaryLightHighContrast = Color(0xFF492100)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF743900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF002964)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00459C)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002963)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF094599)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightHighContrast = Color(0xFF231A13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF39291E)
            override val outlineVariantLightHighContrast = Color(0xFF584539)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB783)
            override val surfaceDimLightHighContrast = Color(0xFFC7B5AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE4)
            override val surfaceContainerLightHighContrast = Color(0xFFF2DFD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE3D1C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD5C3B9)
            override val primaryDark = Color(0xFFFFB783)
            override val onPrimaryDark = Color(0xFF4F2500)
            override val primaryContainerDark = Color(0xFFE67E22)
            override val onPrimaryContainerDark = Color(0xFF502600)
            override val secondaryDark = Color(0xFFAFC6FF)
            override val onSecondaryDark = Color(0xFF002D6C)
            override val secondaryContainerDark = Color(0xFF226FE6)
            override val onSecondaryContainerDark = Color(0xFFFDFBFF)
            override val tertiaryDark = Color(0xFFAFC6FF)
            override val onTertiaryDark = Color(0xFF002D6C)
            override val tertiaryContainerDark = Color(0xFF184DA1)
            override val onTertiaryContainerDark = Color(0xFFA9C3FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110B)
            override val onBackgroundDark = Color(0xFFF2DFD4)
            override val surfaceDark = Color(0xFF1A110B)
            override val onSurfaceDark = Color(0xFFF2DFD4)
            override val surfaceVariantDark = Color(0xFF564337)
            override val onSurfaceVariantDark = Color(0xFFDCC1B1)
            override val outlineDark = Color(0xFFA48C7D)
            override val outlineVariantDark = Color(0xFF564337)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDark = Color(0xFF392E27)
            override val inversePrimaryDark = Color(0xFF944A00)
            override val surfaceDimDark = Color(0xFF1A110B)
            override val surfaceBrightDark = Color(0xFF42372F)
            override val surfaceContainerLowestDark = Color(0xFF150C07)
            override val surfaceContainerLowDark = Color(0xFF231A13)
            override val surfaceContainerDark = Color(0xFF271E17)
            override val surfaceContainerHighDark = Color(0xFF322821)
            override val surfaceContainerHighestDark = Color(0xFF3E322B)
            override val primaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onPrimaryDarkMediumContrast = Color(0xFF3F1C00)
            override val primaryContainerDarkMediumContrast = Color(0xFFE67E22)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF110500)
            override val secondaryDarkMediumContrast = Color(0xFFD0DCFF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002357)
            override val secondaryContainerDarkMediumContrast = Color(0xFF518DFF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFCFDCFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF002357)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF658FE7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF2DFD4)
            override val surfaceDarkMediumContrast = Color(0xFF1A110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF3D7C6)
            override val outlineDarkMediumContrast = Color(0xFFC6AD9D)
            override val outlineVariantDarkMediumContrast = Color(0xFFA38C7D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322821)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723800)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4E423A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF30261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3029)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF473B34)
            override val primaryDarkHighContrast = Color(0xFFFFECE2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB179)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF180700)
            override val secondaryDarkHighContrast = Color(0xFFECEFFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA9C2FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000A23)
            override val tertiaryDarkHighContrast = Color(0xFFECEFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFA9C2FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000A23)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF2DFD4)
            override val surfaceDarkHighContrast = Color(0xFF1A110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE2)
            override val outlineVariantDarkHighContrast = Color(0xFFD8BEAD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723800)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5A4E45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF392E27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF453932)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF51443C)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF944A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE67E22)
            override val onPrimaryContainerLight = Color(0xFF502600)
            override val secondaryLight = Color(0xFF834D00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA16418)
            override val onSecondaryContainerLight = Color(0xFFFFF7F2)
            override val tertiaryLight = Color(0xFF086E00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF37E622)
            override val onTertiaryContainerLight = Color(0xFF076200)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F5)
            override val onBackgroundLight = Color(0xFF231A13)
            override val surfaceLight = Color(0xFFFFF8F5)
            override val onSurfaceLight = Color(0xFF231A13)
            override val surfaceVariantLight = Color(0xFFF9DDCC)
            override val onSurfaceVariantLight = Color(0xFF564337)
            override val outlineLight = Color(0xFF897365)
            override val outlineVariantLight = Color(0xFFDCC1B1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF392E27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE4)
            override val inversePrimaryLight = Color(0xFFFFB783)
            override val surfaceDimLight = Color(0xFFE9D6CC)
            override val surfaceBrightLight = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EA)
            override val surfaceContainerLight = Color(0xFFFEEADF)
            override val surfaceContainerHighLight = Color(0xFFF8E4DA)
            override val surfaceContainerHighestLight = Color(0xFFF2DFD4)
            override val primaryLightMediumContrast = Color(0xFF582A00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFAA5600)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF512E00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9B5F13)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF034000)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF0B7F00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightMediumContrast = Color(0xFF231A13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightMediumContrast = Color(0xFF180F09)
            override val surfaceVariantLightMediumContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF443327)
            override val outlineLightMediumContrast = Color(0xFF624F42)
            override val outlineVariantLightMediumContrast = Color(0xFF7E695B)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE4)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB783)
            override val surfaceDimLightMediumContrast = Color(0xFFD5C3B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFF8E4DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFECD9CE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE0CEC3)
            override val primaryLightHighContrast = Color(0xFF492100)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF743900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF432500)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6C3E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF023500)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF055600)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F5)
            override val onBackgroundLightHighContrast = Color(0xFF231A13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F5)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF9DDCC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF39291E)
            override val outlineVariantLightHighContrast = Color(0xFF584539)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF392E27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB783)
            override val surfaceDimLightHighContrast = Color(0xFFC7B5AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F5)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE4)
            override val surfaceContainerLightHighContrast = Color(0xFFF2DFD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE3D1C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD5C3B9)
            override val primaryDark = Color(0xFFFFB783)
            override val onPrimaryDark = Color(0xFF4F2500)
            override val primaryContainerDark = Color(0xFFE67E22)
            override val onPrimaryContainerDark = Color(0xFF502600)
            override val secondaryDark = Color(0xFFFFB86D)
            override val onSecondaryDark = Color(0xFF492900)
            override val secondaryContainerDark = Color(0xFFA16418)
            override val onSecondaryContainerDark = Color(0xFFFFF7F2)
            override val tertiaryDark = Color(0xFF83FF69)
            override val onTertiaryDark = Color(0xFF023900)
            override val tertiaryContainerDark = Color(0xFF37E622)
            override val onTertiaryContainerDark = Color(0xFF076200)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110B)
            override val onBackgroundDark = Color(0xFFF2DFD4)
            override val surfaceDark = Color(0xFF1A110B)
            override val onSurfaceDark = Color(0xFFF2DFD4)
            override val surfaceVariantDark = Color(0xFF564337)
            override val onSurfaceVariantDark = Color(0xFFDCC1B1)
            override val outlineDark = Color(0xFFA48C7D)
            override val outlineVariantDark = Color(0xFF564337)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDark = Color(0xFF392E27)
            override val inversePrimaryDark = Color(0xFF944A00)
            override val surfaceDimDark = Color(0xFF1A110B)
            override val surfaceBrightDark = Color(0xFF42372F)
            override val surfaceContainerLowestDark = Color(0xFF150C07)
            override val surfaceContainerLowDark = Color(0xFF231A13)
            override val surfaceContainerDark = Color(0xFF271E17)
            override val surfaceContainerHighDark = Color(0xFF322821)
            override val surfaceContainerHighestDark = Color(0xFF3E322B)
            override val primaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onPrimaryDarkMediumContrast = Color(0xFF3F1C00)
            override val primaryContainerDarkMediumContrast = Color(0xFFE67E22)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF110500)
            override val secondaryDarkMediumContrast = Color(0xFFFFD5AD)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A1F00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC58235)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF83FF69)
            override val onTertiaryDarkMediumContrast = Color(0xFF023300)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF37E622)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF034100)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110B)
            override val onBackgroundDarkMediumContrast = Color(0xFFF2DFD4)
            override val surfaceDarkMediumContrast = Color(0xFF1A110B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF3D7C6)
            override val outlineDarkMediumContrast = Color(0xFFC6AD9D)
            override val outlineVariantDarkMediumContrast = Color(0xFFA38C7D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322821)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723800)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4E423A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF30261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3029)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF473B34)
            override val primaryDarkHighContrast = Color(0xFFFFECE2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB179)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF180700)
            override val secondaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB361)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF150800)
            override val tertiaryDarkHighContrast = Color(0xFFC7FFB4)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF37E622)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF011800)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110B)
            override val onBackgroundDarkHighContrast = Color(0xFFF2DFD4)
            override val surfaceDarkHighContrast = Color(0xFF1A110B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF564337)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE2)
            override val outlineVariantDarkHighContrast = Color(0xFFD8BEAD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF2DFD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723800)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110B)
            override val surfaceBrightDarkHighContrast = Color(0xFF5A4E45)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF392E27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF453932)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF51443C)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("carrot", "Carrot")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}