package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIMidnightBlue : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF162839)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2C3E50)
            override val onPrimaryContainerLight = Color(0xFF96A9BE)
            override val secondaryLight = Color(0xFF091B23)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF1F3038)
            override val onSecondaryContainerLight = Color(0xFF8698A2)
            override val tertiaryLight = Color(0xFF1A1E39)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF2F3350)
            override val onTertiaryContainerLight = Color(0xFF989BBE)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FA)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FA)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC4C6CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB5C8DF)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F4)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E3)
            override val primaryLightMediumContrast = Color(0xFF162839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFBFD1E8)
            override val secondaryLightMediumContrast = Color(0xFF091B23)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1F3038)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFABBEC8)
            override val tertiaryLightMediumContrast = Color(0xFF1A1E39)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF2F3350)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFBFC2E7)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363B)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D3)
            override val primaryLightHighContrast = Color(0xFF162839)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF091B23)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF1F3038)
            override val onSecondaryContainerLightHighContrast = Color(0xFFD8EBF5)
            override val tertiaryLightHighContrast = Color(0xFF1A1E39)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF2F3350)
            override val onTertiaryContainerLightHighContrast = Color(0xFFF4F2FF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF292C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFB5C8DF)
            override val onPrimaryDark = Color(0xFF203243)
            override val primaryContainerDark = Color(0xFF2C3E50)
            override val onPrimaryContainerDark = Color(0xFF96A9BE)
            override val secondaryDark = Color(0xFFB7C9D4)
            override val onSecondaryDark = Color(0xFF22333B)
            override val secondaryContainerDark = Color(0xFF1F3038)
            override val onSecondaryContainerDark = Color(0xFF8698A2)
            override val tertiaryDark = Color(0xFFC1C4E8)
            override val onTertiaryDark = Color(0xFF2A2E4B)
            override val tertiaryContainerDark = Color(0xFF2F3350)
            override val onTertiaryContainerDark = Color(0xFF989BBE)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131315)
            override val onBackgroundDark = Color(0xFFE4E2E3)
            override val surfaceDark = Color(0xFF131315)
            override val onSurfaceDark = Color(0xFFE4E2E3)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC4C6CD)
            override val outlineDark = Color(0xFF8E9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4E6073)
            override val surfaceDimDark = Color(0xFF131315)
            override val surfaceBrightDark = Color(0xFF39393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFCBDEF5)
            override val onPrimaryDarkMediumContrast = Color(0xFF142738)
            override val primaryContainerDarkMediumContrast = Color(0xFF8093A7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFCDDFEA)
            override val onSecondaryDarkMediumContrast = Color(0xFF172830)
            override val secondaryContainerDarkMediumContrast = Color(0xFF81939D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF1F2440)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF8B8EB0)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF131315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDADCE2)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF384A5C)
            override val surfaceDimDarkMediumContrast = Color(0xFF131315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070708)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C4DB)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFE0F3FE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB3C5D0)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D14)
            override val tertiaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBDC0E4)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF050824)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131315)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E3)
            override val surfaceDarkHighContrast = Color(0xFF131315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F6)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF384A5C)
            override val surfaceDimDarkHighContrast = Color(0xFF131315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF162839)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2C3E50)
            override val onPrimaryContainerLight = Color(0xFF96A9BE)
            override val secondaryLight = Color(0xFF091B23)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF1F3038)
            override val onSecondaryContainerLight = Color(0xFF8698A2)
            override val tertiaryLight = Color(0xFF4F6169)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE2F6FF)
            override val onTertiaryContainerLight = Color(0xFF5F7179)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FA)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FA)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC4C6CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB5C8DF)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F4)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E3)
            override val primaryLightMediumContrast = Color(0xFF162839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFBFD1E8)
            override val secondaryLightMediumContrast = Color(0xFF091B23)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1F3038)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFABBEC8)
            override val tertiaryLightMediumContrast = Color(0xFF273940)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5D7078)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363B)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D3)
            override val primaryLightHighContrast = Color(0xFF162839)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF091B23)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF1F3038)
            override val onSecondaryContainerLightHighContrast = Color(0xFFD8EBF5)
            override val tertiaryLightHighContrast = Color(0xFF1D2F35)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3A4C53)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF292C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFB5C8DF)
            override val onPrimaryDark = Color(0xFF203243)
            override val primaryContainerDark = Color(0xFF2C3E50)
            override val onPrimaryContainerDark = Color(0xFF96A9BE)
            override val secondaryDark = Color(0xFFB7C9D4)
            override val onSecondaryDark = Color(0xFF22333B)
            override val secondaryContainerDark = Color(0xFF1F3038)
            override val onSecondaryContainerDark = Color(0xFF8698A2)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF21333A)
            override val tertiaryContainerDark = Color(0xFFD2E6EF)
            override val onTertiaryContainerDark = Color(0xFF55676F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131315)
            override val onBackgroundDark = Color(0xFFE4E2E3)
            override val surfaceDark = Color(0xFF131315)
            override val onSurfaceDark = Color(0xFFE4E2E3)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC4C6CD)
            override val outlineDark = Color(0xFF8E9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4E6073)
            override val surfaceDimDark = Color(0xFF131315)
            override val surfaceBrightDark = Color(0xFF39393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFCBDEF5)
            override val onPrimaryDarkMediumContrast = Color(0xFF142738)
            override val primaryContainerDarkMediumContrast = Color(0xFF8093A7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFCDDFEA)
            override val onSecondaryDarkMediumContrast = Color(0xFF172830)
            override val secondaryContainerDarkMediumContrast = Color(0xFF81939D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF21333A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD2E6EF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF384B52)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF131315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDADCE2)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF384A5C)
            override val surfaceDimDarkMediumContrast = Color(0xFF131315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070708)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C4DB)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFE0F3FE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB3C5D0)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D14)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD2E6EF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1A2D33)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131315)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E3)
            override val surfaceDarkHighContrast = Color(0xFF131315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F6)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF384A5C)
            override val surfaceDimDarkHighContrast = Color(0xFF131315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF162839)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2C3E50)
            override val onPrimaryContainerLight = Color(0xFF96A9BE)
            override val secondaryLight = Color(0xFF382718)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF503D2C)
            override val onSecondaryContainerLight = Color(0xFFC3A892)
            override val tertiaryLight = Color(0xFF22170C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF382B1F)
            override val onTertiaryContainerLight = Color(0xFFA59181)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FA)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FA)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC4C6CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB5C8DF)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F4)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E3)
            override val primaryLightMediumContrast = Color(0xFF162839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFBFD1E8)
            override val secondaryLightMediumContrast = Color(0xFF382718)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF503D2C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFEED1BA)
            override val tertiaryLightMediumContrast = Color(0xFF22170C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF382B1F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFCCB7A6)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363B)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D3)
            override val primaryLightHighContrast = Color(0xFF162839)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF382718)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF503D2C)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF22170C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF382B1F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFAE4D1)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF292C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFB5C8DF)
            override val onPrimaryDark = Color(0xFF203243)
            override val primaryContainerDark = Color(0xFF2C3E50)
            override val onPrimaryContainerDark = Color(0xFF96A9BE)
            override val secondaryDark = Color(0xFFDEC1AA)
            override val onSecondaryDark = Color(0xFF3E2D1D)
            override val secondaryContainerDark = Color(0xFF503D2C)
            override val onSecondaryContainerDark = Color(0xFFC3A892)
            override val tertiaryDark = Color(0xFFD8C3B1)
            override val onTertiaryDark = Color(0xFF3B2E22)
            override val tertiaryContainerDark = Color(0xFF382B1F)
            override val onTertiaryContainerDark = Color(0xFFA59181)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131315)
            override val onBackgroundDark = Color(0xFFE4E2E3)
            override val surfaceDark = Color(0xFF131315)
            override val onSurfaceDark = Color(0xFFE4E2E3)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC4C6CD)
            override val outlineDark = Color(0xFF8E9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4E6073)
            override val surfaceDimDark = Color(0xFF131315)
            override val surfaceBrightDark = Color(0xFF39393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFCBDEF5)
            override val onPrimaryDarkMediumContrast = Color(0xFF142738)
            override val primaryContainerDarkMediumContrast = Color(0xFF8093A7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF4D7BF)
            override val onSecondaryDarkMediumContrast = Color(0xFF332213)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA58C77)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEFD8C6)
            override val onTertiaryDarkMediumContrast = Color(0xFF302318)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA08D7D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF131315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDADCE2)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF384A5C)
            override val surfaceDimDarkMediumContrast = Color(0xFF131315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070708)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C4DB)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFFFEDDF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD9BEA7)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF150801)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD4BFAD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF130902)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131315)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E3)
            override val surfaceDarkHighContrast = Color(0xFF131315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F6)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF384A5C)
            override val surfaceDimDarkHighContrast = Color(0xFF131315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF162839)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2C3E50)
            override val onPrimaryContainerLight = Color(0xFF96A9BE)
            override val secondaryLight = Color(0xFF091B23)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF1F3038)
            override val onSecondaryContainerLight = Color(0xFF8698A2)
            override val tertiaryLight = Color(0xFF381729)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF502C3F)
            override val onTertiaryContainerLight = Color(0xFFC393AA)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FA)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FA)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC4C6CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB5C8DF)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F4)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE4E2E3)
            override val primaryLightMediumContrast = Color(0xFF162839)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFBFD1E8)
            override val secondaryLightMediumContrast = Color(0xFF091B23)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1F3038)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFABBEC8)
            override val tertiaryLightMediumContrast = Color(0xFF381729)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF502C3F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFEEBAD2)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363B)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D1D3)
            override val primaryLightHighContrast = Color(0xFF162839)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2C3E50)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF091B23)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF1F3038)
            override val onSecondaryContainerLightHighContrast = Color(0xFFD8EBF5)
            override val tertiaryLightHighContrast = Color(0xFF381729)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF502C3F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFF5F7)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF292C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB5C8DF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFB5C8DF)
            override val onPrimaryDark = Color(0xFF203243)
            override val primaryContainerDark = Color(0xFF2C3E50)
            override val onPrimaryContainerDark = Color(0xFF96A9BE)
            override val secondaryDark = Color(0xFFB7C9D4)
            override val onSecondaryDark = Color(0xFF22333B)
            override val secondaryContainerDark = Color(0xFF1F3038)
            override val onSecondaryContainerDark = Color(0xFF8698A2)
            override val tertiaryDark = Color(0xFFECB8D0)
            override val onTertiaryDark = Color(0xFF482538)
            override val tertiaryContainerDark = Color(0xFF502C3F)
            override val onTertiaryContainerDark = Color(0xFFC393AA)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF131315)
            override val onBackgroundDark = Color(0xFFE4E2E3)
            override val surfaceDark = Color(0xFF131315)
            override val onSurfaceDark = Color(0xFFE4E2E3)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC4C6CD)
            override val outlineDark = Color(0xFF8E9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4E6073)
            override val surfaceDimDark = Color(0xFF131315)
            override val surfaceBrightDark = Color(0xFF39393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFCBDEF5)
            override val onPrimaryDarkMediumContrast = Color(0xFF142738)
            override val primaryContainerDarkMediumContrast = Color(0xFF8093A7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFCDDFEA)
            override val onSecondaryDarkMediumContrast = Color(0xFF172830)
            override val secondaryContainerDarkMediumContrast = Color(0xFF81939D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFE4)
            override val onTertiaryDarkMediumContrast = Color(0xFF3C1A2D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB2839A)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF131315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF131315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDADCE2)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF384A5C)
            override val surfaceDimDarkMediumContrast = Color(0xFF131315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070708)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C4DB)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFE0F3FE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB3C5D0)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D14)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE8B4CC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1C0211)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF131315)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E2E3)
            override val surfaceDarkHighContrast = Color(0xFF131315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F6)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF384A5C)
            override val surfaceDimDarkHighContrast = Color(0xFF131315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("midnight_blue", "Midnight Blue")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}