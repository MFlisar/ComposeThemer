package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIOrange : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF865300)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF39C12)
            override val onPrimaryContainerLight = Color(0xFF603A00)
            override val secondaryLight = Color(0xFF755800)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF936F00)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF666000)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF3E712)
            override val onTertiaryContainerLight = Color(0xFF6C6600)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF221A12)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF221A12)
            override val surfaceVariantLight = Color(0xFFF5DFC8)
            override val onSurfaceVariantLight = Color(0xFF534434)
            override val outlineLight = Color(0xFF867461)
            override val outlineVariantLight = Color(0xFFD8C3AD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382F25)
            override val inverseOnSurfaceLight = Color(0xFFFEEEE0)
            override val inversePrimaryLight = Color(0xFFFFB961)
            override val surfaceDimLight = Color(0xFFE7D7CA)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E6)
            override val surfaceContainerLight = Color(0xFFFBEBDD)
            override val surfaceContainerHighLight = Color(0xFFF5E5D7)
            override val surfaceContainerHighestLight = Color(0xFFF0E0D2)
            override val primaryLightMediumContrast = Color(0xFF4F2F00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9A6000)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF463300)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8A6800)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3B3700)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF766F00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF221A12)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF171008)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413424)
            override val outlineLightMediumContrast = Color(0xFF5F503F)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6A58)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFEEEE0)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB961)
            override val surfaceDimLightMediumContrast = Color(0xFFD3C4B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E6)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E5D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEADACC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECFC1)
            override val primaryLightHighContrast = Color(0xFF412600)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF694000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3A2A00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5D4600)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF302D00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF221A12)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF372A1B)
            override val outlineVariantLightHighContrast = Color(0xFF564736)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB961)
            override val surfaceDimLightHighContrast = Color(0xFFC5B6A9)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFEEEE0)
            override val surfaceContainerLightHighContrast = Color(0xFFF0E0D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE1D2C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD3C4B6)
            override val primaryDark = Color(0xFFFFBE70)
            override val onPrimaryDark = Color(0xFF472A00)
            override val primaryContainerDark = Color(0xFFF39C12)
            override val onPrimaryContainerDark = Color(0xFF603A00)
            override val secondaryDark = Color(0xFFEFC04E)
            override val onSecondaryDark = Color(0xFF3F2E00)
            override val secondaryContainerDark = Color(0xFFB48B19)
            override val onSecondaryContainerDark = Color(0xFF2C1F00)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF353200)
            override val tertiaryContainerDark = Color(0xFFF3E712)
            override val onTertiaryContainerDark = Color(0xFF6C6600)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120A)
            override val onBackgroundDark = Color(0xFFF0E0D2)
            override val surfaceDark = Color(0xFF19120A)
            override val onSurfaceDark = Color(0xFFF0E0D2)
            override val surfaceVariantDark = Color(0xFF534434)
            override val onSurfaceVariantDark = Color(0xFFD8C3AD)
            override val outlineDark = Color(0xFFA18D7A)
            override val outlineVariantDark = Color(0xFF534434)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDark = Color(0xFF382F25)
            override val inversePrimaryDark = Color(0xFF865300)
            override val surfaceDimDark = Color(0xFF19120A)
            override val surfaceBrightDark = Color(0xFF41382E)
            override val surfaceContainerLowestDark = Color(0xFF140D06)
            override val surfaceContainerLowDark = Color(0xFF221A12)
            override val surfaceContainerDark = Color(0xFF261E16)
            override val surfaceContainerHighDark = Color(0xFF31281F)
            override val surfaceContainerHighestDark = Color(0xFF3C332A)
            override val primaryDarkMediumContrast = Color(0xFFFFD5A7)
            override val onPrimaryDarkMediumContrast = Color(0xFF382000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF39C12)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF361F00)
            override val secondaryDarkMediumContrast = Color(0xFFFFD87F)
            override val onSecondaryDarkMediumContrast = Color(0xFF322300)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB48B19)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF353200)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFF3E712)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF4E4900)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120A)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0E0D2)
            override val surfaceDarkMediumContrast = Color(0xFF19120A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEFD9C2)
            override val outlineDarkMediumContrast = Color(0xFFC3AE9A)
            override val outlineVariantDarkMediumContrast = Color(0xFFA08D7A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31291F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF673F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4339)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0602)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241C14)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F261D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3128)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463C32)
            override val primaryDarkHighContrast = Color(0xFFFFEDDC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB352)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF140900)
            override val secondaryDarkHighContrast = Color(0xFFFFEED0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFEBBC4A)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110A00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF3E712)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2E2B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120A)
            override val onBackgroundDarkHighContrast = Color(0xFFF0E0D2)
            override val surfaceDarkHighContrast = Color(0xFF19120A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BFAA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF673F00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120A)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E44)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261E16)
            override val surfaceContainerDarkHighContrast = Color(0xFF382F25)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF433A30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F453B)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF865300)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF39C12)
            override val onPrimaryContainerLight = Color(0xFF603A00)
            override val secondaryLight = Color(0xFF755800)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF936F00)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF685E3C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFF0C4)
            override val onTertiaryContainerLight = Color(0xFF776D49)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF221A12)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF221A12)
            override val surfaceVariantLight = Color(0xFFF5DFC8)
            override val onSurfaceVariantLight = Color(0xFF534434)
            override val outlineLight = Color(0xFF867461)
            override val outlineVariantLight = Color(0xFFD8C3AD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382F25)
            override val inverseOnSurfaceLight = Color(0xFFFEEEE0)
            override val inversePrimaryLight = Color(0xFFFFB961)
            override val surfaceDimLight = Color(0xFFE7D7CA)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E6)
            override val surfaceContainerLight = Color(0xFFFBEBDD)
            override val surfaceContainerHighLight = Color(0xFFF5E5D7)
            override val surfaceContainerHighestLight = Color(0xFFF0E0D2)
            override val primaryLightMediumContrast = Color(0xFF4F2F00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9A6000)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF463300)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8A6800)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3E3617)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF776D49)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF221A12)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF171008)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413424)
            override val outlineLightMediumContrast = Color(0xFF5F503F)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6A58)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFEEEE0)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB961)
            override val surfaceDimLightMediumContrast = Color(0xFFD3C4B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E6)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E5D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEADACC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECFC1)
            override val primaryLightHighContrast = Color(0xFF412600)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF694000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3A2A00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5D4600)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF332C0E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF524929)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF221A12)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF372A1B)
            override val outlineVariantLightHighContrast = Color(0xFF564736)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB961)
            override val surfaceDimLightHighContrast = Color(0xFFC5B6A9)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFEEEE0)
            override val surfaceContainerLightHighContrast = Color(0xFFF0E0D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE1D2C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD3C4B6)
            override val primaryDark = Color(0xFFFFBE70)
            override val onPrimaryDark = Color(0xFF472A00)
            override val primaryContainerDark = Color(0xFFF39C12)
            override val onPrimaryContainerDark = Color(0xFF603A00)
            override val secondaryDark = Color(0xFFEFC04E)
            override val onSecondaryDark = Color(0xFF3F2E00)
            override val secondaryContainerDark = Color(0xFFB48B19)
            override val onSecondaryContainerDark = Color(0xFF2C1F00)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF383012)
            override val tertiaryContainerDark = Color(0xFFF0E2B7)
            override val onTertiaryContainerDark = Color(0xFF6E6441)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120A)
            override val onBackgroundDark = Color(0xFFF0E0D2)
            override val surfaceDark = Color(0xFF19120A)
            override val onSurfaceDark = Color(0xFFF0E0D2)
            override val surfaceVariantDark = Color(0xFF534434)
            override val onSurfaceVariantDark = Color(0xFFD8C3AD)
            override val outlineDark = Color(0xFFA18D7A)
            override val outlineVariantDark = Color(0xFF534434)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDark = Color(0xFF382F25)
            override val inversePrimaryDark = Color(0xFF865300)
            override val surfaceDimDark = Color(0xFF19120A)
            override val surfaceBrightDark = Color(0xFF41382E)
            override val surfaceContainerLowestDark = Color(0xFF140D06)
            override val surfaceContainerLowDark = Color(0xFF221A12)
            override val surfaceContainerDark = Color(0xFF261E16)
            override val surfaceContainerHighDark = Color(0xFF31281F)
            override val surfaceContainerHighestDark = Color(0xFF3C332A)
            override val primaryDarkMediumContrast = Color(0xFFFFD5A7)
            override val onPrimaryDarkMediumContrast = Color(0xFF382000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF39C12)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF361F00)
            override val secondaryDarkMediumContrast = Color(0xFFFFD87F)
            override val onSecondaryDarkMediumContrast = Color(0xFF322300)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB48B19)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF383012)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFF0E2B7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF514727)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120A)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0E0D2)
            override val surfaceDarkMediumContrast = Color(0xFF19120A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEFD9C2)
            override val outlineDarkMediumContrast = Color(0xFFC3AE9A)
            override val outlineVariantDarkMediumContrast = Color(0xFFA08D7A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31291F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF673F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4339)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0602)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241C14)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F261D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3128)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463C32)
            override val primaryDarkHighContrast = Color(0xFFFFEDDC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB352)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF140900)
            override val secondaryDarkHighContrast = Color(0xFFFFEED0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFEBBC4A)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110A00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF0E2B7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF312A0C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120A)
            override val onBackgroundDarkHighContrast = Color(0xFFF0E0D2)
            override val surfaceDarkHighContrast = Color(0xFF19120A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BFAA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF673F00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120A)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E44)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261E16)
            override val surfaceContainerDarkHighContrast = Color(0xFF382F25)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF433A30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F453B)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF865300)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF39C12)
            override val onPrimaryContainerLight = Color(0xFF603A00)
            override val secondaryLight = Color(0xFF2E00C7)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4424F3)
            override val onSecondaryContainerLight = Color(0xFFC8C3FF)
            override val tertiaryLight = Color(0xFF1B0080)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF3019AA)
            override val onTertiaryContainerLight = Color(0xFF9F98FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF221A12)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF221A12)
            override val surfaceVariantLight = Color(0xFFF5DFC8)
            override val onSurfaceVariantLight = Color(0xFF534434)
            override val outlineLight = Color(0xFF867461)
            override val outlineVariantLight = Color(0xFFD8C3AD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382F25)
            override val inverseOnSurfaceLight = Color(0xFFFEEEE0)
            override val inversePrimaryLight = Color(0xFFFFB961)
            override val surfaceDimLight = Color(0xFFE7D7CA)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E6)
            override val surfaceContainerLight = Color(0xFFFBEBDD)
            override val surfaceContainerHighLight = Color(0xFFF5E5D7)
            override val surfaceContainerHighestLight = Color(0xFFF0E0D2)
            override val primaryLightMediumContrast = Color(0xFF4F2F00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9A6000)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF2800B3)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4424F3)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFBF6FF)
            override val tertiaryLightMediumContrast = Color(0xFF1B0080)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF3019AA)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFCBC6FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF221A12)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF171008)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413424)
            override val outlineLightMediumContrast = Color(0xFF5F503F)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6A58)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFEEEE0)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB961)
            override val surfaceDimLightMediumContrast = Color(0xFFD3C4B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E6)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E5D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEADACC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECFC1)
            override val primaryLightHighContrast = Color(0xFF412600)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF694000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF200096)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF3700E8)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF1B0080)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3019AA)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFBFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF221A12)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF372A1B)
            override val outlineVariantLightHighContrast = Color(0xFF564736)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB961)
            override val surfaceDimLightHighContrast = Color(0xFFC5B6A9)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFEEEE0)
            override val surfaceContainerLightHighContrast = Color(0xFFF0E0D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE1D2C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD3C4B6)
            override val primaryDark = Color(0xFFFFBE70)
            override val onPrimaryDark = Color(0xFF472A00)
            override val primaryContainerDark = Color(0xFFF39C12)
            override val onPrimaryContainerDark = Color(0xFF603A00)
            override val secondaryDark = Color(0xFFC5C0FF)
            override val onSecondaryDark = Color(0xFF2300A2)
            override val secondaryContainerDark = Color(0xFF4424F3)
            override val onSecondaryContainerDark = Color(0xFFC8C3FF)
            override val tertiaryDark = Color(0xFFC5C0FF)
            override val onTertiaryDark = Color(0xFF2500A1)
            override val tertiaryContainerDark = Color(0xFF3019AA)
            override val onTertiaryContainerDark = Color(0xFF9F98FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120A)
            override val onBackgroundDark = Color(0xFFF0E0D2)
            override val surfaceDark = Color(0xFF19120A)
            override val onSurfaceDark = Color(0xFFF0E0D2)
            override val surfaceVariantDark = Color(0xFF534434)
            override val onSurfaceVariantDark = Color(0xFFD8C3AD)
            override val outlineDark = Color(0xFFA18D7A)
            override val outlineVariantDark = Color(0xFF534434)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDark = Color(0xFF382F25)
            override val inversePrimaryDark = Color(0xFF865300)
            override val surfaceDimDark = Color(0xFF19120A)
            override val surfaceBrightDark = Color(0xFF41382E)
            override val surfaceContainerLowestDark = Color(0xFF140D06)
            override val surfaceContainerLowDark = Color(0xFF221A12)
            override val surfaceContainerDark = Color(0xFF261E16)
            override val surfaceContainerHighDark = Color(0xFF31281F)
            override val surfaceContainerHighestDark = Color(0xFF3C332A)
            override val primaryDarkMediumContrast = Color(0xFFFFD5A7)
            override val onPrimaryDarkMediumContrast = Color(0xFF382000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF39C12)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF361F00)
            override val secondaryDarkMediumContrast = Color(0xFFDCD8FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF1B0084)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8981FF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFDDD8FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF1C0083)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF8A80FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120A)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0E0D2)
            override val surfaceDarkMediumContrast = Color(0xFF19120A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEFD9C2)
            override val outlineDarkMediumContrast = Color(0xFFC3AE9A)
            override val outlineVariantDarkMediumContrast = Color(0xFFA08D7A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31291F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF673F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4339)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0602)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241C14)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F261D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3128)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463C32)
            override val primaryDarkHighContrast = Color(0xFFFFEDDC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB352)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF140900)
            override val secondaryDarkHighContrast = Color(0xFFF2EEFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC0BCFF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF060039)
            override val tertiaryDarkHighContrast = Color(0xFFF2EEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC1BBFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF070039)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120A)
            override val onBackgroundDarkHighContrast = Color(0xFFF0E0D2)
            override val surfaceDarkHighContrast = Color(0xFF19120A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BFAA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF673F00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120A)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E44)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261E16)
            override val surfaceContainerDarkHighContrast = Color(0xFF382F25)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF433A30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F453B)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF865300)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF39C12)
            override val onPrimaryContainerLight = Color(0xFF603A00)
            override val secondaryLight = Color(0xFF755800)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF936F00)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF006C52)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF12F3BD)
            override val onTertiaryContainerLight = Color(0xFF006A51)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF221A12)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF221A12)
            override val surfaceVariantLight = Color(0xFFF5DFC8)
            override val onSurfaceVariantLight = Color(0xFF534434)
            override val outlineLight = Color(0xFF867461)
            override val outlineVariantLight = Color(0xFFD8C3AD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382F25)
            override val inverseOnSurfaceLight = Color(0xFFFEEEE0)
            override val inversePrimaryLight = Color(0xFFFFB961)
            override val surfaceDimLight = Color(0xFFE7D7CA)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E6)
            override val surfaceContainerLight = Color(0xFFFBEBDD)
            override val surfaceContainerHighLight = Color(0xFFF5E5D7)
            override val surfaceContainerHighestLight = Color(0xFFF0E0D2)
            override val primaryLightMediumContrast = Color(0xFF4F2F00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9A6000)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF463300)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8A6800)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003E2E)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF007C5F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF221A12)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF171008)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413424)
            override val outlineLightMediumContrast = Color(0xFF5F503F)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6A58)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFEEEE0)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB961)
            override val surfaceDimLightMediumContrast = Color(0xFFD3C4B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E6)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E5D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEADACC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECFC1)
            override val primaryLightHighContrast = Color(0xFF412600)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF694000)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3A2A00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5D4600)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003325)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF00543F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF221A12)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DFC8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF372A1B)
            override val outlineVariantLightHighContrast = Color(0xFF564736)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382F25)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB961)
            override val surfaceDimLightHighContrast = Color(0xFFC5B6A9)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFEEEE0)
            override val surfaceContainerLightHighContrast = Color(0xFFF0E0D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE1D2C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD3C4B6)
            override val primaryDark = Color(0xFFFFBE70)
            override val onPrimaryDark = Color(0xFF472A00)
            override val primaryContainerDark = Color(0xFFF39C12)
            override val onPrimaryContainerDark = Color(0xFF603A00)
            override val secondaryDark = Color(0xFFEFC04E)
            override val onSecondaryDark = Color(0xFF3F2E00)
            override val secondaryContainerDark = Color(0xFFB48B19)
            override val onSecondaryContainerDark = Color(0xFF2C1F00)
            override val tertiaryDark = Color(0xFFCAFFE8)
            override val onTertiaryDark = Color(0xFF003829)
            override val tertiaryContainerDark = Color(0xFF12F3BD)
            override val onTertiaryContainerDark = Color(0xFF006A51)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120A)
            override val onBackgroundDark = Color(0xFFF0E0D2)
            override val surfaceDark = Color(0xFF19120A)
            override val onSurfaceDark = Color(0xFFF0E0D2)
            override val surfaceVariantDark = Color(0xFF534434)
            override val onSurfaceVariantDark = Color(0xFFD8C3AD)
            override val outlineDark = Color(0xFFA18D7A)
            override val outlineVariantDark = Color(0xFF534434)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDark = Color(0xFF382F25)
            override val inversePrimaryDark = Color(0xFF865300)
            override val surfaceDimDark = Color(0xFF19120A)
            override val surfaceBrightDark = Color(0xFF41382E)
            override val surfaceContainerLowestDark = Color(0xFF140D06)
            override val surfaceContainerLowDark = Color(0xFF221A12)
            override val surfaceContainerDark = Color(0xFF261E16)
            override val surfaceContainerHighDark = Color(0xFF31281F)
            override val surfaceContainerHighestDark = Color(0xFF3C332A)
            override val primaryDarkMediumContrast = Color(0xFFFFD5A7)
            override val onPrimaryDarkMediumContrast = Color(0xFF382000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF39C12)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF361F00)
            override val secondaryDarkMediumContrast = Color(0xFFFFD87F)
            override val onSecondaryDarkMediumContrast = Color(0xFF322300)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB48B19)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFCAFFE8)
            override val onTertiaryDarkMediumContrast = Color(0xFF003829)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF12F3BD)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF004B38)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120A)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0E0D2)
            override val surfaceDarkMediumContrast = Color(0xFF19120A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEFD9C2)
            override val outlineDarkMediumContrast = Color(0xFFC3AE9A)
            override val outlineVariantDarkMediumContrast = Color(0xFFA08D7A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31291F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF673F00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4339)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0602)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241C14)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F261D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3128)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463C32)
            override val primaryDarkHighContrast = Color(0xFFFFEDDC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB352)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF140900)
            override val secondaryDarkHighContrast = Color(0xFFFFEED0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFEBBC4A)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110A00)
            override val tertiaryDarkHighContrast = Color(0xFFCAFFE8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF12F3BD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF00271C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120A)
            override val onBackgroundDarkHighContrast = Color(0xFFF0E0D2)
            override val surfaceDarkHighContrast = Color(0xFF19120A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF534434)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BFAA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0E0D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF673F00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120A)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E44)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261E16)
            override val surfaceContainerDarkHighContrast = Color(0xFF382F25)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF433A30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F453B)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("orange", "Orange")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}