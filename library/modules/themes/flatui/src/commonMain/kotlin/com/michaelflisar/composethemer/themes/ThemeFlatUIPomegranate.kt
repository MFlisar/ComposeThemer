package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIPomegranate : ComposeTheme.Group {

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("pomegranate", "Pomegranate")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E2016)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0392B)
            override val onPrimaryContainerLight = Color(0xFFFFE5E1)
            override val secondaryLight = Color(0xFF660E0A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF86261E)
            override val onSecondaryContainerLight = Color(0xFFFF9E91)
            override val tertiaryLight = Color(0xFF914804)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB05F1F)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF59413D)
            override val outlineLight = Color(0xFF8D706C)
            override val outlineVariantLight = Color(0xFFE1BFB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEED4D1)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFCE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF7DDD9)
            override val primaryLightMediumContrast = Color(0xFF740001)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC0392B)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF660E0A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF86261E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFDBD6)
            override val tertiaryLightMediumContrast = Color(0xFF592900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA75818)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF47312D)
            override val outlineLightMediumContrast = Color(0xFF664C48)
            override val outlineVariantLightMediumContrast = Color(0xFF826662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF1D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF91160E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF5E0706)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF86261E)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4A2100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF763800)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C2724)
            override val outlineVariantLightHighContrast = Color(0xFF5C433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCBB3B0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF7DDD9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE8CFCB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFC0392B)
            override val onPrimaryContainerDark = Color(0xFFFFE5E1)
            override val secondaryDark = Color(0xFFFFB4AA)
            override val onSecondaryDark = Color(0xFF640C09)
            override val secondaryContainerDark = Color(0xFF86261E)
            override val onSecondaryContainerDark = Color(0xFFFF9E91)
            override val tertiaryDark = Color(0xFFFFB786)
            override val onTertiaryDark = Color(0xFF502400)
            override val tertiaryContainerDark = Color(0xFFD27B39)
            override val onTertiaryContainerDark = Color(0xFF2D1200)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF7DDD9)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF7DDD9)
            override val surfaceVariantDark = Color(0xFF59413D)
            override val onSurfaceVariantDark = Color(0xFFE1BFB9)
            override val outlineDark = Color(0xFFA88A85)
            override val outlineVariantDark = Color(0xFF59413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDark = Color(0xFF3C2D2A)
            override val inversePrimaryDark = Color(0xFFB02D21)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463533)
            override val surfaceContainerLowestDark = Color(0xFF170B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2A1C1A)
            override val surfaceContainerHighDark = Color(0xFF352624)
            override val surfaceContainerHighestDark = Color(0xFF41312F)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF55F4D)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540002)
            override val secondaryContainerDarkMediumContrast = Color(0xFFE56C5E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onTertiaryDarkMediumContrast = Color(0xFF401C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD27B39)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF7DDD9)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF8D4CF)
            override val outlineDarkMediumContrast = Color(0xFFCBAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA88985)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF90150D)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51403E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF281A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF332422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A37)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE3)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF7DDD9)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDDBBB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF90150D)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5E4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF483835)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF544340)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E2016)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0392B)
            override val onPrimaryContainerLight = Color(0xFFFFE5E1)
            override val secondaryLight = Color(0xFF660E0A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF86261E)
            override val onSecondaryContainerLight = Color(0xFFFF9E91)
            override val tertiaryLight = Color(0xFF785654)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD1CE)
            override val onTertiaryContainerLight = Color(0xFF7A5756)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF59413D)
            override val outlineLight = Color(0xFF8D706C)
            override val outlineVariantLight = Color(0xFFE1BFB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEED4D1)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFCE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF7DDD9)
            override val primaryLightMediumContrast = Color(0xFF740001)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC0392B)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF660E0A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF86261E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFDBD6)
            override val tertiaryLightMediumContrast = Color(0xFF4C2E2D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF886462)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF47312D)
            override val outlineLightMediumContrast = Color(0xFF664C48)
            override val outlineVariantLightMediumContrast = Color(0xFF826662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF1D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF91160E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF5E0706)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF86261E)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF402523)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF61413F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C2724)
            override val outlineVariantLightHighContrast = Color(0xFF5C433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCBB3B0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF7DDD9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE8CFCB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFC0392B)
            override val onPrimaryContainerDark = Color(0xFFFFE5E1)
            override val secondaryDark = Color(0xFFFFB4AA)
            override val onSecondaryDark = Color(0xFF640C09)
            override val secondaryContainerDark = Color(0xFF86261E)
            override val onSecondaryContainerDark = Color(0xFFFF9E91)
            override val tertiaryDark = Color(0xFFFFF6F5)
            override val onTertiaryDark = Color(0xFF452927)
            override val tertiaryContainerDark = Color(0xFFFFD1CE)
            override val onTertiaryContainerDark = Color(0xFF7A5756)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF7DDD9)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF7DDD9)
            override val surfaceVariantDark = Color(0xFF59413D)
            override val onSurfaceVariantDark = Color(0xFFE1BFB9)
            override val outlineDark = Color(0xFFA88A85)
            override val outlineVariantDark = Color(0xFF59413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDark = Color(0xFF3C2D2A)
            override val inversePrimaryDark = Color(0xFFB02D21)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463533)
            override val surfaceContainerLowestDark = Color(0xFF170B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2A1C1A)
            override val surfaceContainerHighDark = Color(0xFF352624)
            override val surfaceContainerHighestDark = Color(0xFF41312F)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF55F4D)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540002)
            override val secondaryContainerDarkMediumContrast = Color(0xFFE56C5E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFF6F5)
            override val onTertiaryDarkMediumContrast = Color(0xFF452927)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFFD1CE)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF5B3C3A)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF7DDD9)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF8D4CF)
            override val outlineDarkMediumContrast = Color(0xFFCBAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA88985)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF90150D)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51403E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF281A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF332422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A37)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFF6F5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFD1CE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF381E1D)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF7DDD9)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDDBBB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF90150D)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5E4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF483835)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF544340)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E2016)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0392B)
            override val onPrimaryContainerLight = Color(0xFFFFE5E1)
            override val secondaryLight = Color(0xFF006E22)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF2BC04A)
            override val onSecondaryContainerLight = Color(0xFF004713)
            override val tertiaryLight = Color(0xFF006B22)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF1E8634)
            override val onTertiaryContainerLight = Color(0xFFF7FFF1)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF59413D)
            override val outlineLight = Color(0xFF8D706C)
            override val outlineVariantLight = Color(0xFFE1BFB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEED4D1)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFCE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF7DDD9)
            override val primaryLightMediumContrast = Color(0xFF740001)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC0392B)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF004010)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007F28)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF004011)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF117E2D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF47312D)
            override val outlineLightMediumContrast = Color(0xFF664C48)
            override val outlineVariantLightMediumContrast = Color(0xFF826662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF1D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF91160E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00340B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005618)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF00340C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF00561A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C2724)
            override val outlineVariantLightHighContrast = Color(0xFF5C433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCBB3B0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF7DDD9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE8CFCB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFC0392B)
            override val onPrimaryContainerDark = Color(0xFFFFE5E1)
            override val secondaryDark = Color(0xFF54E166)
            override val onSecondaryDark = Color(0xFF00390D)
            override val secondaryContainerDark = Color(0xFF2BC04A)
            override val onSecondaryContainerDark = Color(0xFF004713)
            override val tertiaryDark = Color(0xFF79DC7E)
            override val onTertiaryDark = Color(0xFF00390E)
            override val tertiaryContainerDark = Color(0xFF1E8634)
            override val onTertiaryContainerDark = Color(0xFFF7FFF1)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF7DDD9)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF7DDD9)
            override val surfaceVariantDark = Color(0xFF59413D)
            override val onSurfaceVariantDark = Color(0xFFE1BFB9)
            override val outlineDark = Color(0xFFA88A85)
            override val outlineVariantDark = Color(0xFF59413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDark = Color(0xFF3C2D2A)
            override val inversePrimaryDark = Color(0xFFB02D21)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463533)
            override val surfaceContainerLowestDark = Color(0xFF170B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2A1C1A)
            override val surfaceContainerHighDark = Color(0xFF352624)
            override val surfaceContainerHighestDark = Color(0xFF41312F)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF55F4D)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFF6CF87A)
            override val onSecondaryDarkMediumContrast = Color(0xFF002D09)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2BC04A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF002305)
            override val tertiaryDarkMediumContrast = Color(0xFF8EF392)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D09)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF41A44E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF7DDD9)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF8D4CF)
            override val outlineDarkMediumContrast = Color(0xFFCBAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA88985)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF90150D)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51403E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF281A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF332422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A37)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFC4FFBF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF4FDD63)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F02)
            override val tertiaryDarkHighContrast = Color(0xFFC4FFC0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF75D87B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F02)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF7DDD9)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDDBBB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF90150D)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5E4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF483835)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF544340)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF9E2016)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0392B)
            override val onPrimaryContainerLight = Color(0xFFFFE5E1)
            override val secondaryLight = Color(0xFF660E0A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF86261E)
            override val onSecondaryContainerLight = Color(0xFFFF9E91)
            override val tertiaryLight = Color(0xFF5C6300)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB4C02B)
            override val onTertiaryContainerLight = Color(0xFF464C00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF261816)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF261816)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF59413D)
            override val outlineLight = Color(0xFF8D706C)
            override val outlineVariantLight = Color(0xFFE1BFB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFEED4D1)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFCE2DE)
            override val surfaceContainerHighestLight = Color(0xFFF7DDD9)
            override val primaryLightMediumContrast = Color(0xFF740001)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFC0392B)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF660E0A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF86261E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFDBD6)
            override val tertiaryLightMediumContrast = Color(0xFF353900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6A7300)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF261816)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1A0E0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF47312D)
            override val outlineLightMediumContrast = Color(0xFF664C48)
            override val outlineVariantLightMediumContrast = Color(0xFF826662)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFD9C1BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFCE2DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF1D7D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE5CCC8)
            override val primaryLightHighContrast = Color(0xFF610001)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF91160E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF5E0706)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF86261E)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2B2F00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF474D00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF261816)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3C2724)
            override val outlineVariantLightHighContrast = Color(0xFF5C433F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3C2D2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCBB3B0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFF7DDD9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE8CFCB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD9C1BD)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690001)
            override val primaryContainerDark = Color(0xFFC0392B)
            override val onPrimaryContainerDark = Color(0xFFFFE5E1)
            override val secondaryDark = Color(0xFFFFB4AA)
            override val onSecondaryDark = Color(0xFF640C09)
            override val secondaryContainerDark = Color(0xFF86261E)
            override val onSecondaryContainerDark = Color(0xFFFF9E91)
            override val tertiaryDark = Color(0xFFD0DC47)
            override val onTertiaryDark = Color(0xFF2F3300)
            override val tertiaryContainerDark = Color(0xFFB4C02B)
            override val onTertiaryContainerDark = Color(0xFF464C00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1D100E)
            override val onBackgroundDark = Color(0xFFF7DDD9)
            override val surfaceDark = Color(0xFF1D100E)
            override val onSurfaceDark = Color(0xFFF7DDD9)
            override val surfaceVariantDark = Color(0xFF59413D)
            override val onSurfaceVariantDark = Color(0xFFE1BFB9)
            override val outlineDark = Color(0xFFA88A85)
            override val outlineVariantDark = Color(0xFF59413D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDark = Color(0xFF3C2D2A)
            override val inversePrimaryDark = Color(0xFFB02D21)
            override val surfaceDimDark = Color(0xFF1D100E)
            override val surfaceBrightDark = Color(0xFF463533)
            override val surfaceContainerLowestDark = Color(0xFF170B09)
            override val surfaceContainerLowDark = Color(0xFF261816)
            override val surfaceContainerDark = Color(0xFF2A1C1A)
            override val surfaceContainerHighDark = Color(0xFF352624)
            override val surfaceContainerHighestDark = Color(0xFF41312F)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onPrimaryDarkMediumContrast = Color(0xFF540000)
            override val primaryContainerDarkMediumContrast = Color(0xFFF55F4D)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540002)
            override val secondaryContainerDarkMediumContrast = Color(0xFFE56C5E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD9E64F)
            override val onTertiaryDarkMediumContrast = Color(0xFF252800)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB4C02B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF2A2E00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1D100E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF7DDD9)
            override val surfaceDarkMediumContrast = Color(0xFF1D100E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFF8D4CF)
            override val outlineDarkMediumContrast = Color(0xFFCBAAA5)
            override val outlineVariantDarkMediumContrast = Color(0xFFA88985)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF352624)
            override val inversePrimaryDarkMediumContrast = Color(0xFF90150D)
            override val surfaceDimDarkMediumContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF51403E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0F0504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF281A18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF332422)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3E2F2C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4A3A37)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFEDFA61)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBFCB37)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0B0C00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1D100E)
            override val onBackgroundDarkHighContrast = Color(0xFFF7DDD9)
            override val surfaceDarkHighContrast = Color(0xFF1D100E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF59413D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFDDBBB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF7DDD9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF90150D)
            override val surfaceDimDarkHighContrast = Color(0xFF1D100E)
            override val surfaceBrightDarkHighContrast = Color(0xFF5E4C49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2A1C1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF3C2D2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF483835)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF544340)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}