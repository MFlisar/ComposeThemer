package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIEmerald : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF006D37)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2ECC71)
            override val onPrimaryContainerLight = Color(0xFF005027)
            override val secondaryLight = Color(0xFF00694A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF0B855F)
            override val onSecondaryContainerLight = Color(0xFFF5FFF7)
            override val tertiaryLight = Color(0xFF005EA5)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF2577C5)
            override val onTertiaryContainerLight = Color(0xFFFDFCFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF3FCF1)
            override val onBackgroundLight = Color(0xFF161D17)
            override val surfaceLight = Color(0xFFF3FCF1)
            override val onSurfaceLight = Color(0xFF161D17)
            override val surfaceVariantLight = Color(0xFFD7E7D6)
            override val onSurfaceVariantLight = Color(0xFF3D4A3E)
            override val outlineLight = Color(0xFF6C7B6D)
            override val outlineVariantLight = Color(0xFFBBCBBB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B322B)
            override val inverseOnSurfaceLight = Color(0xFFEBF3E8)
            override val inversePrimaryLight = Color(0xFF4AE183)
            override val surfaceDimLight = Color(0xFFD4DCD2)
            override val surfaceBrightLight = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEEF6EB)
            override val surfaceContainerLight = Color(0xFFE8F0E5)
            override val surfaceContainerHighLight = Color(0xFFE2EBE0)
            override val surfaceContainerHighestLight = Color(0xFFDCE5DA)
            override val primaryLightMediumContrast = Color(0xFF003F1D)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007E40)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003F2A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007D58)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003765)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF166FBD)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightMediumContrast = Color(0xFF161D17)
            override val surfaceLightMediumContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0B130D)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C392E)
            override val outlineLightMediumContrast = Color(0xFF485649)
            override val outlineVariantLightMediumContrast = Color(0xFF637163)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEBF3E8)
            override val inversePrimaryLightMediumContrast = Color(0xFF4AE183)
            override val surfaceDimLightMediumContrast = Color(0xFFC0C9BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEEF6EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE2EBE0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD7DFD4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCBD4C9)
            override val primaryLightHighContrast = Color(0xFF003417)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005529)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003322)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00543A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002D54)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF004B85)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightHighContrast = Color(0xFF161D17)
            override val surfaceLightHighContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222F24)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C40)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF4AE183)
            override val surfaceDimLightHighContrast = Color(0xFFB3BBB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEBF3E8)
            override val surfaceContainerLightHighContrast = Color(0xFFDCE5DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCED7CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC0C9BE)
            override val primaryDark = Color(0xFF54E98A)
            override val onPrimaryDark = Color(0xFF003919)
            override val primaryContainerDark = Color(0xFF2ECC71)
            override val onPrimaryContainerDark = Color(0xFF005027)
            override val secondaryDark = Color(0xFF74DAAD)
            override val onSecondaryDark = Color(0xFF003826)
            override val secondaryContainerDark = Color(0xFF3AA27A)
            override val onSecondaryContainerDark = Color(0xFF00190F)
            override val tertiaryDark = Color(0xFFA2C9FF)
            override val onTertiaryDark = Color(0xFF00315B)
            override val tertiaryContainerDark = Color(0xFF4B94E4)
            override val onTertiaryContainerDark = Color(0xFF000E21)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E150F)
            override val onBackgroundDark = Color(0xFFDCE5DA)
            override val surfaceDark = Color(0xFF0E150F)
            override val onSurfaceDark = Color(0xFFDCE5DA)
            override val surfaceVariantDark = Color(0xFF3D4A3E)
            override val onSurfaceVariantDark = Color(0xFFBBCBBB)
            override val outlineDark = Color(0xFF869486)
            override val outlineVariantDark = Color(0xFF3D4A3E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDark = Color(0xFF2B322B)
            override val inversePrimaryDark = Color(0xFF006D37)
            override val surfaceDimDark = Color(0xFF0E150F)
            override val surfaceBrightDark = Color(0xFF333B34)
            override val surfaceContainerLowestDark = Color(0xFF09100A)
            override val surfaceContainerLowDark = Color(0xFF161D17)
            override val surfaceContainerDark = Color(0xFF1A211B)
            override val surfaceContainerHighDark = Color(0xFF242C25)
            override val surfaceContainerHighestDark = Color(0xFF2F372F)
            override val primaryDarkMediumContrast = Color(0xFF64F797)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D13)
            override val primaryContainerDarkMediumContrast = Color(0xFF2ECC71)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF002F14)
            override val secondaryDarkMediumContrast = Color(0xFF8BF0C2)
            override val onSecondaryDarkMediumContrast = Color(0xFF002C1D)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3AA27A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFC8DEFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF002649)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF4B94E4)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E150F)
            override val onBackgroundDarkMediumContrast = Color(0xFFDCE5DA)
            override val surfaceDarkMediumContrast = Color(0xFF0E150F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1E0D0)
            override val outlineDarkMediumContrast = Color(0xFFA7B6A7)
            override val outlineVariantDarkMediumContrast = Color(0xFF869486)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF242C25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005428)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3E473F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF030904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF222A23)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D352D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF384038)
            override val primaryDarkHighContrast = Color(0xFFC0FFCB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF45DC7F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F04)
            override val secondaryDarkHighContrast = Color(0xFFB9FFDC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF70D6A9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E07)
            override val tertiaryDarkHighContrast = Color(0xFFE9F0FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF9BC5FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000C1C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E150F)
            override val onBackgroundDarkHighContrast = Color(0xFFDCE5DA)
            override val surfaceDarkHighContrast = Color(0xFF0E150F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F4E4)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C7B7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005428)
            override val surfaceDimDarkHighContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4A524A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF353D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414941)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF006D37)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2ECC71)
            override val onPrimaryContainerLight = Color(0xFF005027)
            override val secondaryLight = Color(0xFF00694A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF0B855F)
            override val onSecondaryContainerLight = Color(0xFFF5FFF7)
            override val tertiaryLight = Color(0xFF3A675A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFCEFFEE)
            override val onTertiaryContainerLight = Color(0xFF4B786B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF3FCF1)
            override val onBackgroundLight = Color(0xFF161D17)
            override val surfaceLight = Color(0xFFF3FCF1)
            override val onSurfaceLight = Color(0xFF161D17)
            override val surfaceVariantLight = Color(0xFFD7E7D6)
            override val onSurfaceVariantLight = Color(0xFF3D4A3E)
            override val outlineLight = Color(0xFF6C7B6D)
            override val outlineVariantLight = Color(0xFFBBCBBB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B322B)
            override val inverseOnSurfaceLight = Color(0xFFEBF3E8)
            override val inversePrimaryLight = Color(0xFF4AE183)
            override val surfaceDimLight = Color(0xFFD4DCD2)
            override val surfaceBrightLight = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEEF6EB)
            override val surfaceContainerLight = Color(0xFFE8F0E5)
            override val surfaceContainerHighLight = Color(0xFFE2EBE0)
            override val surfaceContainerHighestLight = Color(0xFFDCE5DA)
            override val primaryLightMediumContrast = Color(0xFF003F1D)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007E40)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003F2A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007D58)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF0C3D32)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF497668)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightMediumContrast = Color(0xFF161D17)
            override val surfaceLightMediumContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0B130D)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C392E)
            override val outlineLightMediumContrast = Color(0xFF485649)
            override val outlineVariantLightMediumContrast = Color(0xFF637163)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEBF3E8)
            override val inversePrimaryLightMediumContrast = Color(0xFF4AE183)
            override val surfaceDimLightMediumContrast = Color(0xFFC0C9BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEEF6EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE2EBE0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD7DFD4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCBD4C9)
            override val primaryLightHighContrast = Color(0xFF003417)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005529)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003322)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00543A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003328)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF235145)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightHighContrast = Color(0xFF161D17)
            override val surfaceLightHighContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222F24)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C40)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF4AE183)
            override val surfaceDimLightHighContrast = Color(0xFFB3BBB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEBF3E8)
            override val surfaceContainerLightHighContrast = Color(0xFFDCE5DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCED7CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC0C9BE)
            override val primaryDark = Color(0xFF54E98A)
            override val onPrimaryDark = Color(0xFF003919)
            override val primaryContainerDark = Color(0xFF2ECC71)
            override val onPrimaryContainerDark = Color(0xFF005027)
            override val secondaryDark = Color(0xFF74DAAD)
            override val onSecondaryDark = Color(0xFF003826)
            override val secondaryContainerDark = Color(0xFF3AA27A)
            override val onSecondaryContainerDark = Color(0xFF00190F)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF04382D)
            override val tertiaryContainerDark = Color(0xFFBCEDDC)
            override val onTertiaryContainerDark = Color(0xFF406D60)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E150F)
            override val onBackgroundDark = Color(0xFFDCE5DA)
            override val surfaceDark = Color(0xFF0E150F)
            override val onSurfaceDark = Color(0xFFDCE5DA)
            override val surfaceVariantDark = Color(0xFF3D4A3E)
            override val onSurfaceVariantDark = Color(0xFFBBCBBB)
            override val outlineDark = Color(0xFF869486)
            override val outlineVariantDark = Color(0xFF3D4A3E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDark = Color(0xFF2B322B)
            override val inversePrimaryDark = Color(0xFF006D37)
            override val surfaceDimDark = Color(0xFF0E150F)
            override val surfaceBrightDark = Color(0xFF333B34)
            override val surfaceContainerLowestDark = Color(0xFF09100A)
            override val surfaceContainerLowDark = Color(0xFF161D17)
            override val surfaceContainerDark = Color(0xFF1A211B)
            override val surfaceContainerHighDark = Color(0xFF242C25)
            override val surfaceContainerHighestDark = Color(0xFF2F372F)
            override val primaryDarkMediumContrast = Color(0xFF64F797)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D13)
            override val primaryContainerDarkMediumContrast = Color(0xFF2ECC71)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF002F14)
            override val secondaryDarkMediumContrast = Color(0xFF8BF0C2)
            override val onSecondaryDarkMediumContrast = Color(0xFF002C1D)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3AA27A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF04382D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBCEDDC)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF225044)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E150F)
            override val onBackgroundDarkMediumContrast = Color(0xFFDCE5DA)
            override val surfaceDarkMediumContrast = Color(0xFF0E150F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1E0D0)
            override val outlineDarkMediumContrast = Color(0xFFA7B6A7)
            override val outlineVariantDarkMediumContrast = Color(0xFF869486)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF242C25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005428)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3E473F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF030904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF222A23)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D352D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF384038)
            override val primaryDarkHighContrast = Color(0xFFC0FFCB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF45DC7F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F04)
            override val secondaryDarkHighContrast = Color(0xFFB9FFDC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF70D6A9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E07)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBCEDDC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF003126)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E150F)
            override val onBackgroundDarkHighContrast = Color(0xFFDCE5DA)
            override val surfaceDarkHighContrast = Color(0xFF0E150F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F4E4)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C7B7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005428)
            override val surfaceDimDarkHighContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4A524A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF353D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414941)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006D37)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2ECC71)
            override val onPrimaryContainerLight = Color(0xFF005027)
            override val secondaryLight = Color(0xFFA43713)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFC54F29)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF70250B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF8F3B20)
            override val onTertiaryContainerLight = Color(0xFFFFBAA5)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF3FCF1)
            override val onBackgroundLight = Color(0xFF161D17)
            override val surfaceLight = Color(0xFFF3FCF1)
            override val onSurfaceLight = Color(0xFF161D17)
            override val surfaceVariantLight = Color(0xFFD7E7D6)
            override val onSurfaceVariantLight = Color(0xFF3D4A3E)
            override val outlineLight = Color(0xFF6C7B6D)
            override val outlineVariantLight = Color(0xFFBBCBBB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B322B)
            override val inverseOnSurfaceLight = Color(0xFFEBF3E8)
            override val inversePrimaryLight = Color(0xFF4AE183)
            override val surfaceDimLight = Color(0xFFD4DCD2)
            override val surfaceBrightLight = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEEF6EB)
            override val surfaceContainerLight = Color(0xFFE8F0E5)
            override val surfaceContainerHighLight = Color(0xFFE2EBE0)
            override val surfaceContainerHighestLight = Color(0xFFDCE5DA)
            override val primaryLightMediumContrast = Color(0xFF003F1D)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007E40)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF691A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFBB4823)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF661D04)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8F3B20)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFF7F5)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightMediumContrast = Color(0xFF161D17)
            override val surfaceLightMediumContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0B130D)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C392E)
            override val outlineLightMediumContrast = Color(0xFF485649)
            override val outlineVariantLightMediumContrast = Color(0xFF637163)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEBF3E8)
            override val inversePrimaryLightMediumContrast = Color(0xFF4AE183)
            override val surfaceDimLightMediumContrast = Color(0xFFC0C9BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEEF6EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE2EBE0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD7DFD4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCBD4C9)
            override val primaryLightHighContrast = Color(0xFF003417)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005529)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF571400)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF8A2500)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF571400)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7F3015)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightHighContrast = Color(0xFF161D17)
            override val surfaceLightHighContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222F24)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C40)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF4AE183)
            override val surfaceDimLightHighContrast = Color(0xFFB3BBB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEBF3E8)
            override val surfaceContainerLightHighContrast = Color(0xFFDCE5DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCED7CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC0C9BE)
            override val primaryDark = Color(0xFF54E98A)
            override val onPrimaryDark = Color(0xFF003919)
            override val primaryContainerDark = Color(0xFF2ECC71)
            override val onPrimaryContainerDark = Color(0xFF005027)
            override val secondaryDark = Color(0xFFFFB59F)
            override val onSecondaryDark = Color(0xFF5E1600)
            override val secondaryContainerDark = Color(0xFFEA6A42)
            override val onSecondaryContainerDark = Color(0xFF200300)
            override val tertiaryDark = Color(0xFFFFB59F)
            override val onTertiaryDark = Color(0xFF5E1701)
            override val tertiaryContainerDark = Color(0xFF8F3B20)
            override val onTertiaryContainerDark = Color(0xFFFFBAA5)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E150F)
            override val onBackgroundDark = Color(0xFFDCE5DA)
            override val surfaceDark = Color(0xFF0E150F)
            override val onSurfaceDark = Color(0xFFDCE5DA)
            override val surfaceVariantDark = Color(0xFF3D4A3E)
            override val onSurfaceVariantDark = Color(0xFFBBCBBB)
            override val outlineDark = Color(0xFF869486)
            override val outlineVariantDark = Color(0xFF3D4A3E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDark = Color(0xFF2B322B)
            override val inversePrimaryDark = Color(0xFF006D37)
            override val surfaceDimDark = Color(0xFF0E150F)
            override val surfaceBrightDark = Color(0xFF333B34)
            override val surfaceContainerLowestDark = Color(0xFF09100A)
            override val surfaceContainerLowDark = Color(0xFF161D17)
            override val surfaceContainerDark = Color(0xFF1A211B)
            override val surfaceContainerHighDark = Color(0xFF242C25)
            override val surfaceContainerHighestDark = Color(0xFF2F372F)
            override val primaryDarkMediumContrast = Color(0xFF64F797)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D13)
            override val primaryContainerDarkMediumContrast = Color(0xFF2ECC71)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF002F14)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF4C1000)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEA6A42)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3C6)
            override val onTertiaryDarkMediumContrast = Color(0xFF4C1000)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDA7454)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E150F)
            override val onBackgroundDarkMediumContrast = Color(0xFFDCE5DA)
            override val surfaceDarkMediumContrast = Color(0xFF0E150F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1E0D0)
            override val outlineDarkMediumContrast = Color(0xFFA7B6A7)
            override val outlineVariantDarkMediumContrast = Color(0xFF869486)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF242C25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005428)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3E473F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF030904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF222A23)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D352D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF384038)
            override val primaryDarkHighContrast = Color(0xFFC0FFCB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF45DC7F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F04)
            override val secondaryDarkHighContrast = Color(0xFFFFECE7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAF98)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF200300)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE7)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAF97)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E150F)
            override val onBackgroundDarkHighContrast = Color(0xFFDCE5DA)
            override val surfaceDarkHighContrast = Color(0xFF0E150F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F4E4)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C7B7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005428)
            override val surfaceDimDarkHighContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4A524A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF353D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414941)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006D37)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2ECC71)
            override val onPrimaryContainerLight = Color(0xFF005027)
            override val secondaryLight = Color(0xFF00694A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF0B855F)
            override val onSecondaryContainerLight = Color(0xFFF5FFF7)
            override val tertiaryLight = Color(0xFFA600A0)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC829BE)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF3FCF1)
            override val onBackgroundLight = Color(0xFF161D17)
            override val surfaceLight = Color(0xFFF3FCF1)
            override val onSurfaceLight = Color(0xFF161D17)
            override val surfaceVariantLight = Color(0xFFD7E7D6)
            override val onSurfaceVariantLight = Color(0xFF3D4A3E)
            override val outlineLight = Color(0xFF6C7B6D)
            override val outlineVariantLight = Color(0xFFBBCBBB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B322B)
            override val inverseOnSurfaceLight = Color(0xFFEBF3E8)
            override val inversePrimaryLight = Color(0xFF4AE183)
            override val surfaceDimLight = Color(0xFFD4DCD2)
            override val surfaceBrightLight = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEEF6EB)
            override val surfaceContainerLight = Color(0xFFE8F0E5)
            override val surfaceContainerHighLight = Color(0xFFE2EBE0)
            override val surfaceContainerHighestLight = Color(0xFFDCE5DA)
            override val primaryLightMediumContrast = Color(0xFF003F1D)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007E40)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003F2A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007D58)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF660062)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFBF1DB6)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightMediumContrast = Color(0xFF161D17)
            override val surfaceLightMediumContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0B130D)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C392E)
            override val outlineLightMediumContrast = Color(0xFF485649)
            override val outlineVariantLightMediumContrast = Color(0xFF637163)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEBF3E8)
            override val inversePrimaryLightMediumContrast = Color(0xFF4AE183)
            override val surfaceDimLightMediumContrast = Color(0xFFC0C9BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEEF6EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE2EBE0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD7DFD4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCBD4C9)
            override val primaryLightHighContrast = Color(0xFF003417)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005529)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003322)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00543A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF550051)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF860081)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF3FCF1)
            override val onBackgroundLightHighContrast = Color(0xFF161D17)
            override val surfaceLightHighContrast = Color(0xFFF3FCF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E7D6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222F24)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C40)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF4AE183)
            override val surfaceDimLightHighContrast = Color(0xFFB3BBB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF3FCF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEBF3E8)
            override val surfaceContainerLightHighContrast = Color(0xFFDCE5DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCED7CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC0C9BE)
            override val primaryDark = Color(0xFF54E98A)
            override val onPrimaryDark = Color(0xFF003919)
            override val primaryContainerDark = Color(0xFF2ECC71)
            override val onPrimaryContainerDark = Color(0xFF005027)
            override val secondaryDark = Color(0xFF74DAAD)
            override val onSecondaryDark = Color(0xFF003826)
            override val secondaryContainerDark = Color(0xFF3AA27A)
            override val onSecondaryContainerDark = Color(0xFF00190F)
            override val tertiaryDark = Color(0xFFFFABEF)
            override val onTertiaryDark = Color(0xFF5C0058)
            override val tertiaryContainerDark = Color(0xFFEB4DDE)
            override val onTertiaryContainerDark = Color(0xFF160014)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E150F)
            override val onBackgroundDark = Color(0xFFDCE5DA)
            override val surfaceDark = Color(0xFF0E150F)
            override val onSurfaceDark = Color(0xFFDCE5DA)
            override val surfaceVariantDark = Color(0xFF3D4A3E)
            override val onSurfaceVariantDark = Color(0xFFBBCBBB)
            override val outlineDark = Color(0xFF869486)
            override val outlineVariantDark = Color(0xFF3D4A3E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDark = Color(0xFF2B322B)
            override val inversePrimaryDark = Color(0xFF006D37)
            override val surfaceDimDark = Color(0xFF0E150F)
            override val surfaceBrightDark = Color(0xFF333B34)
            override val surfaceContainerLowestDark = Color(0xFF09100A)
            override val surfaceContainerLowDark = Color(0xFF161D17)
            override val surfaceContainerDark = Color(0xFF1A211B)
            override val surfaceContainerHighDark = Color(0xFF242C25)
            override val surfaceContainerHighestDark = Color(0xFF2F372F)
            override val primaryDarkMediumContrast = Color(0xFF64F797)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D13)
            override val primaryContainerDarkMediumContrast = Color(0xFF2ECC71)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF002F14)
            override val secondaryDarkMediumContrast = Color(0xFF8BF0C2)
            override val onSecondaryDarkMediumContrast = Color(0xFF002C1D)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3AA27A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCEF2)
            override val onTertiaryDarkMediumContrast = Color(0xFF4A0046)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFEB4DDE)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E150F)
            override val onBackgroundDarkMediumContrast = Color(0xFFDCE5DA)
            override val surfaceDarkMediumContrast = Color(0xFF0E150F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1E0D0)
            override val outlineDarkMediumContrast = Color(0xFFA7B6A7)
            override val outlineVariantDarkMediumContrast = Color(0xFF869486)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF242C25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005428)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3E473F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF030904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF222A23)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D352D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF384038)
            override val primaryDarkHighContrast = Color(0xFFC0FFCB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF45DC7F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F04)
            override val secondaryDarkHighContrast = Color(0xFFB9FFDC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF70D6A9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E07)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAF7)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA5EF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF160014)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E150F)
            override val onBackgroundDarkHighContrast = Color(0xFFDCE5DA)
            override val surfaceDarkHighContrast = Color(0xFF0E150F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4A3E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F4E4)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C7B7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDCE5DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005428)
            override val surfaceDimDarkHighContrast = Color(0xFF0E150F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4A524A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF353D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414941)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("emerald", "Emerald")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}