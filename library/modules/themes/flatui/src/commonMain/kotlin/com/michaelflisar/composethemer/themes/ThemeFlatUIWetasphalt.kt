package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIWetasphalt : ComposeTheme.Group {

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("wetasphalt", "Wetasphalt")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF1D3246)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF34495E)
            override val onPrimaryContainerLight = Color(0xFFA2B8D1)
            override val secondaryLight = Color(0xFF0D242C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF243942)
            override val onSecondaryContainerLight = Color(0xFF8CA2AD)
            override val tertiaryLight = Color(0xFF222647)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF383C5E)
            override val onTertiaryContainerLight = Color(0xFFA4A7CF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FB)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FB)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC3C7CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB3C9E2)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F5)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E4)
            override val primaryLightMediumContrast = Color(0xFF1D3246)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFCDE3FD)
            override val secondaryLightMediumContrast = Color(0xFF0D242C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF243942)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFB3CAD5)
            override val tertiaryLightMediumContrast = Color(0xFF222647)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF383C5E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFCDD0FA)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightMediumContrast = Color(0xFF101113)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363C)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D3)
            override val primaryLightHighContrast = Color(0xFF182E42)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0D242C)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF243942)
            override val onSecondaryContainerLightHighContrast = Color(0xFFEAF8FF)
            override val tertiaryLightHighContrast = Color(0xFF222647)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF383C5E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C8)
            override val primaryDark = Color(0xFFB3C9E2)
            override val onPrimaryDark = Color(0xFF1D3246)
            override val primaryContainerDark = Color(0xFF34495E)
            override val onPrimaryContainerDark = Color(0xFFA2B8D1)
            override val secondaryDark = Color(0xFFB3CAD5)
            override val onSecondaryDark = Color(0xFF1E333C)
            override val secondaryContainerDark = Color(0xFF243942)
            override val onSecondaryContainerDark = Color(0xFF8CA2AD)
            override val tertiaryDark = Color(0xFFC0C4ED)
            override val onTertiaryDark = Color(0xFF2A2E4F)
            override val tertiaryContainerDark = Color(0xFF383C5E)
            override val onTertiaryContainerDark = Color(0xFFA4A7CF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121315)
            override val onBackgroundDark = Color(0xFFE3E2E4)
            override val surfaceDark = Color(0xFF121315)
            override val onSurfaceDark = Color(0xFFE3E2E4)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC3C7CD)
            override val outlineDark = Color(0xFF8D9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4B6076)
            override val surfaceDimDark = Color(0xFF121315)
            override val surfaceBrightDark = Color(0xFF38393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2C)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC8DFF9)
            override val onPrimaryDarkMediumContrast = Color(0xFF11273B)
            override val primaryContainerDarkMediumContrast = Color(0xFF7D93AB)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC9E0EB)
            override val onSecondaryDarkMediumContrast = Color(0xFF132831)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7E949F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF1F2343)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF8A8EB5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E4)
            override val surfaceDarkMediumContrast = Color(0xFF121315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DCE3)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF354A5F)
            override val surfaceDimDarkMediumContrast = Color(0xFF121315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070709)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFC5DE)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFDDF3FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB0C6D1)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFF0EEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBDC0E9)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF040728)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121315)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E4)
            override val surfaceDarkHighContrast = Color(0xFF121315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F7)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF354A5F)
            override val surfaceDimDarkHighContrast = Color(0xFF121315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505052)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF1D3246)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF34495E)
            override val onPrimaryContainerLight = Color(0xFFA2B8D1)
            override val secondaryLight = Color(0xFF0D242C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF243942)
            override val onSecondaryContainerLight = Color(0xFF8CA2AD)
            override val tertiaryLight = Color(0xFF4F6169)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE3F6FF)
            override val onTertiaryContainerLight = Color(0xFF5F7179)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FB)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FB)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC3C7CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB3C9E2)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F5)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E4)
            override val primaryLightMediumContrast = Color(0xFF1D3246)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFCDE3FD)
            override val secondaryLightMediumContrast = Color(0xFF0D242C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF243942)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFB3CAD5)
            override val tertiaryLightMediumContrast = Color(0xFF273940)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5E7077)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightMediumContrast = Color(0xFF101113)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363C)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D3)
            override val primaryLightHighContrast = Color(0xFF182E42)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0D242C)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF243942)
            override val onSecondaryContainerLightHighContrast = Color(0xFFEAF8FF)
            override val tertiaryLightHighContrast = Color(0xFF1D2F35)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3A4C53)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C8)
            override val primaryDark = Color(0xFFB3C9E2)
            override val onPrimaryDark = Color(0xFF1D3246)
            override val primaryContainerDark = Color(0xFF34495E)
            override val onPrimaryContainerDark = Color(0xFFA2B8D1)
            override val secondaryDark = Color(0xFFB3CAD5)
            override val onSecondaryDark = Color(0xFF1E333C)
            override val secondaryContainerDark = Color(0xFF243942)
            override val onSecondaryContainerDark = Color(0xFF8CA2AD)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF22333A)
            override val tertiaryContainerDark = Color(0xFFD3E6EE)
            override val onTertiaryContainerDark = Color(0xFF55676F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121315)
            override val onBackgroundDark = Color(0xFFE3E2E4)
            override val surfaceDark = Color(0xFF121315)
            override val onSurfaceDark = Color(0xFFE3E2E4)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC3C7CD)
            override val outlineDark = Color(0xFF8D9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4B6076)
            override val surfaceDimDark = Color(0xFF121315)
            override val surfaceBrightDark = Color(0xFF38393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2C)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC8DFF9)
            override val onPrimaryDarkMediumContrast = Color(0xFF11273B)
            override val primaryContainerDarkMediumContrast = Color(0xFF7D93AB)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC9E0EB)
            override val onSecondaryDarkMediumContrast = Color(0xFF132831)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7E949F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF22333A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD3E6EE)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF394B52)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E4)
            override val surfaceDarkMediumContrast = Color(0xFF121315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DCE3)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF354A5F)
            override val surfaceDimDarkMediumContrast = Color(0xFF121315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070709)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFC5DE)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFDDF3FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB0C6D1)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD3E6EE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1B2C33)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121315)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E4)
            override val surfaceDarkHighContrast = Color(0xFF121315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F7)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF354A5F)
            override val surfaceDimDarkHighContrast = Color(0xFF121315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505052)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF1D3246)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF34495E)
            override val onPrimaryContainerLight = Color(0xFFA2B8D1)
            override val secondaryLight = Color(0xFF45321F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF5E4834)
            override val onSecondaryContainerLight = Color(0xFFD6B89E)
            override val tertiaryLight = Color(0xFF2B1D10)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF423224)
            override val onTertiaryContainerLight = Color(0xFFB19A87)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FB)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FB)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC3C7CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB3C9E2)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F5)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E4)
            override val primaryLightMediumContrast = Color(0xFF1D3246)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFCDE3FD)
            override val secondaryLightMediumContrast = Color(0xFF45321F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF5E4834)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFE5D0)
            override val tertiaryLightMediumContrast = Color(0xFF2B1D10)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF423224)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFD9C0AD)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightMediumContrast = Color(0xFF101113)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363C)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D3)
            override val primaryLightHighContrast = Color(0xFF182E42)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3B2816)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5B4531)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2B1D10)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF423224)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFF1E8)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C8)
            override val primaryDark = Color(0xFFB3C9E2)
            override val onPrimaryDark = Color(0xFF1D3246)
            override val primaryContainerDark = Color(0xFF34495E)
            override val onPrimaryContainerDark = Color(0xFFA2B8D1)
            override val secondaryDark = Color(0xFFE0C1A7)
            override val onSecondaryDark = Color(0xFF402C1A)
            override val secondaryContainerDark = Color(0xFF5E4834)
            override val onSecondaryContainerDark = Color(0xFFD6B89E)
            override val tertiaryDark = Color(0xFFDBC2AE)
            override val onTertiaryDark = Color(0xFF3D2D20)
            override val tertiaryContainerDark = Color(0xFF423224)
            override val onTertiaryContainerDark = Color(0xFFB19A87)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121315)
            override val onBackgroundDark = Color(0xFFE3E2E4)
            override val surfaceDark = Color(0xFF121315)
            override val onSurfaceDark = Color(0xFFE3E2E4)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC3C7CD)
            override val outlineDark = Color(0xFF8D9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4B6076)
            override val surfaceDimDark = Color(0xFF121315)
            override val surfaceBrightDark = Color(0xFF38393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2C)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC8DFF9)
            override val onPrimaryDarkMediumContrast = Color(0xFF11273B)
            override val primaryContainerDarkMediumContrast = Color(0xFF7D93AB)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF7D6BC)
            override val onSecondaryDarkMediumContrast = Color(0xFF342211)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA78C74)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF2D8C3)
            override val onTertiaryDarkMediumContrast = Color(0xFF312316)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA38D7B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E4)
            override val surfaceDarkMediumContrast = Color(0xFF121315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DCE3)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF354A5F)
            override val surfaceDimDarkMediumContrast = Color(0xFF121315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070709)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFC5DE)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFFFEDDF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDCBDA3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF160800)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDE0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD7BEAA)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF140902)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121315)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E4)
            override val surfaceDarkHighContrast = Color(0xFF121315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F7)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF354A5F)
            override val surfaceDimDarkHighContrast = Color(0xFF121315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505052)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF1D3246)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF34495E)
            override val onPrimaryContainerLight = Color(0xFFA2B8D1)
            override val secondaryLight = Color(0xFF0D242C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF243942)
            override val onSecondaryContainerLight = Color(0xFF8CA2AD)
            override val tertiaryLight = Color(0xFF451E34)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF5E344B)
            override val onTertiaryContainerLight = Color(0xFFD59EB9)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBF9FB)
            override val onBackgroundLight = Color(0xFF1B1C1D)
            override val surfaceLight = Color(0xFFFBF9FB)
            override val onSurfaceLight = Color(0xFF1B1C1D)
            override val surfaceVariantLight = Color(0xFFE0E2E9)
            override val onSurfaceVariantLight = Color(0xFF43474C)
            override val outlineLight = Color(0xFF74777D)
            override val outlineVariantLight = Color(0xFFC3C7CD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303032)
            override val inverseOnSurfaceLight = Color(0xFFF2F0F2)
            override val inversePrimaryLight = Color(0xFFB3C9E2)
            override val surfaceDimLight = Color(0xFFDBD9DB)
            override val surfaceBrightLight = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F3F5)
            override val surfaceContainerLight = Color(0xFFEFEDEF)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E4)
            override val primaryLightMediumContrast = Color(0xFF1D3246)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFCDE3FD)
            override val secondaryLightMediumContrast = Color(0xFF0D242C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF243942)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFB3CAD5)
            override val tertiaryLightMediumContrast = Color(0xFF451E34)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5E344B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFC8E2)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightMediumContrast = Color(0xFF101113)
            override val surfaceVariantLightMediumContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF33363C)
            override val outlineLightMediumContrast = Color(0xFF4F5358)
            override val outlineVariantLightMediumContrast = Color(0xFF6A6D73)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F2)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDCDE)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D3)
            override val primaryLightHighContrast = Color(0xFF182E42)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF34495E)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0D242C)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF243942)
            override val onSecondaryContainerLightHighContrast = Color(0xFFEAF8FF)
            override val tertiaryLightHighContrast = Color(0xFF451E34)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5E344B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBF9FB)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C1D)
            override val surfaceLightHighContrast = Color(0xFFFBF9FB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE0E2E9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282C31)
            override val outlineVariantLightHighContrast = Color(0xFF46494F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303032)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3C9E2)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BA)
            override val surfaceBrightLightHighContrast = Color(0xFFFBF9FB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F0F2)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C8)
            override val primaryDark = Color(0xFFB3C9E2)
            override val onPrimaryDark = Color(0xFF1D3246)
            override val primaryContainerDark = Color(0xFF34495E)
            override val onPrimaryContainerDark = Color(0xFFA2B8D1)
            override val secondaryDark = Color(0xFFB3CAD5)
            override val onSecondaryDark = Color(0xFF1E333C)
            override val secondaryContainerDark = Color(0xFF243942)
            override val onSecondaryContainerDark = Color(0xFF8CA2AD)
            override val tertiaryDark = Color(0xFFF0B6D2)
            override val onTertiaryDark = Color(0xFF4A2339)
            override val tertiaryContainerDark = Color(0xFF5E344B)
            override val onTertiaryContainerDark = Color(0xFFD59EB9)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121315)
            override val onBackgroundDark = Color(0xFFE3E2E4)
            override val surfaceDark = Color(0xFF121315)
            override val onSurfaceDark = Color(0xFFE3E2E4)
            override val surfaceVariantDark = Color(0xFF43474C)
            override val onSurfaceVariantDark = Color(0xFFC3C7CD)
            override val outlineDark = Color(0xFF8D9197)
            override val outlineVariantDark = Color(0xFF43474C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDark = Color(0xFF303032)
            override val inversePrimaryDark = Color(0xFF4B6076)
            override val surfaceDimDark = Color(0xFF121315)
            override val surfaceBrightDark = Color(0xFF38393B)
            override val surfaceContainerLowestDark = Color(0xFF0D0E10)
            override val surfaceContainerLowDark = Color(0xFF1B1C1D)
            override val surfaceContainerDark = Color(0xFF1F2021)
            override val surfaceContainerHighDark = Color(0xFF292A2C)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC8DFF9)
            override val onPrimaryDarkMediumContrast = Color(0xFF11273B)
            override val primaryContainerDarkMediumContrast = Color(0xFF7D93AB)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC9E0EB)
            override val onSecondaryDarkMediumContrast = Color(0xFF132831)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7E949F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFE5)
            override val onTertiaryDarkMediumContrast = Color(0xFF3E192E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB6819C)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121315)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E4)
            override val surfaceDarkMediumContrast = Color(0xFF121315)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DCE3)
            override val outlineDarkMediumContrast = Color(0xFFAFB2B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8D9096)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF354A5F)
            override val surfaceDimDarkMediumContrast = Color(0xFF121315)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444446)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070709)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323234)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFC5DE)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C19)
            override val secondaryDarkHighContrast = Color(0xFFDDF3FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB0C6D1)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFECB2CE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1E0113)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121315)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E4)
            override val surfaceDarkHighContrast = Color(0xFF121315)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43474C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEDF0F7)
            override val outlineVariantDarkHighContrast = Color(0xFFC0C3C9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF354A5F)
            override val surfaceDimDarkHighContrast = Color(0xFF121315)
            override val surfaceBrightDarkHighContrast = Color(0xFF505052)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF303032)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3B3D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}