package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeFlatUIBelizehole : ComposeTheme.Group {

    override val collection = FlatUIThemes
    override val groupKey = ComposeTheme.Key("belizehole", "Belizehole")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF006193)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF207AB3)
            override val onPrimaryContainerLight = Color(0xFFFDFCFF)
            override val secondaryLight = Color(0xFF005066)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF1D6982)
            override val onSecondaryContainerLight = Color(0xFFACE5FF)
            override val tertiaryLight = Color(0xFF152AA2)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF3345B9)
            override val onTertiaryContainerLight = Color(0xFFBBC2FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FE)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FE)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDCE3ED)
            override val onSurfaceVariantLight = Color(0xFF40484F)
            override val outlineLight = Color(0xFF707880)
            override val outlineVariantLight = Color(0xFFC0C7D1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEFF1F6)
            override val inversePrimaryLight = Color(0xFF92CCFF)
            override val surfaceDimLight = Color(0xFFD8DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFECEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8ED)
            override val surfaceContainerHighestLight = Color(0xFFE0E2E8)
            override val primaryLightMediumContrast = Color(0xFF00395A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF1073AB)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003B4C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1D6982)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF0B239D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF3345B9)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFF4F2FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F373F)
            override val outlineLightMediumContrast = Color(0xFF4C535B)
            override val outlineVariantLightMediumContrast = Color(0xFF666E76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF92CCFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C6CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004D76)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005066)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF00188B)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF283BB0)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D34)
            override val outlineVariantLightHighContrast = Color(0xFF424A52)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF92CCFF)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E2E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C6CB)
            override val primaryDark = Color(0xFF92CCFF)
            override val onPrimaryDark = Color(0xFF003351)
            override val primaryContainerDark = Color(0xFF4797D1)
            override val onPrimaryContainerDark = Color(0xFF000E1A)
            override val secondaryDark = Color(0xFF8DD0EC)
            override val onSecondaryDark = Color(0xFF003545)
            override val secondaryContainerDark = Color(0xFF1D6982)
            override val onSecondaryContainerDark = Color(0xFFACE5FF)
            override val tertiaryDark = Color(0xFFBBC3FF)
            override val onTertiaryDark = Color(0xFF001B97)
            override val tertiaryContainerDark = Color(0xFF3345B9)
            override val onTertiaryContainerDark = Color(0xFFBBC2FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E2E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E2E8)
            override val surfaceVariantDark = Color(0xFF40484F)
            override val onSurfaceVariantDark = Color(0xFFC0C7D1)
            override val outlineDark = Color(0xFF8A919A)
            override val outlineVariantDark = Color(0xFF40484F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF006497)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF36393E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF323539)
            override val primaryDarkMediumContrast = Color(0xFFC0E0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF4797D1)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFAAE5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A36)
            override val secondaryContainerDarkMediumContrast = Color(0xFF5699B4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00147A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7587FD)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E2E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD6DDE7)
            override val outlineDarkMediumContrast = Color(0xFFABB3BC)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004C75)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF25282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE6F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF89C9FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E1A)
            override val secondaryDarkHighContrast = Color(0xFFDDF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF89CCE8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB6BEFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000434)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E2E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F1FB)
            override val outlineVariantDarkHighContrast = Color(0xFFBCC3CD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004C75)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44474B)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF006193)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF207AB3)
            override val onPrimaryContainerLight = Color(0xFFFDFCFF)
            override val secondaryLight = Color(0xFF005066)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF1D6982)
            override val onSecondaryContainerLight = Color(0xFFACE5FF)
            override val tertiaryLight = Color(0xFF40646E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFCDF3FF)
            override val onTertiaryContainerLight = Color(0xFF4C707A)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FE)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FE)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDCE3ED)
            override val onSurfaceVariantLight = Color(0xFF40484F)
            override val outlineLight = Color(0xFF707880)
            override val outlineVariantLight = Color(0xFFC0C7D1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEFF1F6)
            override val inversePrimaryLight = Color(0xFF92CCFF)
            override val surfaceDimLight = Color(0xFFD8DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFECEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8ED)
            override val surfaceContainerHighestLight = Color(0xFFE0E2E8)
            override val primaryLightMediumContrast = Color(0xFF00395A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF1073AB)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003B4C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1D6982)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF153B44)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF4F727D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F373F)
            override val outlineLightMediumContrast = Color(0xFF4C535B)
            override val outlineVariantLightMediumContrast = Color(0xFF666E76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF92CCFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C6CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004D76)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005066)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF07313A)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF2A4E58)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D34)
            override val outlineVariantLightHighContrast = Color(0xFF424A52)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF92CCFF)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E2E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C6CB)
            override val primaryDark = Color(0xFF92CCFF)
            override val onPrimaryDark = Color(0xFF003351)
            override val primaryContainerDark = Color(0xFF4797D1)
            override val onPrimaryContainerDark = Color(0xFF000E1A)
            override val secondaryDark = Color(0xFF8DD0EC)
            override val onSecondaryDark = Color(0xFF003545)
            override val secondaryContainerDark = Color(0xFF1D6982)
            override val onSecondaryContainerDark = Color(0xFFACE5FF)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF0D353E)
            override val tertiaryContainerDark = Color(0xFFC3E9F5)
            override val onTertiaryContainerDark = Color(0xFF466A74)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E2E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E2E8)
            override val surfaceVariantDark = Color(0xFF40484F)
            override val onSurfaceVariantDark = Color(0xFFC0C7D1)
            override val outlineDark = Color(0xFF8A919A)
            override val outlineVariantDark = Color(0xFF40484F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF006497)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF36393E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF323539)
            override val primaryDarkMediumContrast = Color(0xFFC0E0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF4797D1)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFAAE5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A36)
            override val secondaryContainerDarkMediumContrast = Color(0xFF5699B4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF0D353E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC3E9F5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF294D57)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E2E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD6DDE7)
            override val outlineDarkMediumContrast = Color(0xFFABB3BC)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004C75)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF25282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE6F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF89C9FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E1A)
            override val secondaryDarkHighContrast = Color(0xFFDDF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF89CCE8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC3E9F5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF042F38)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E2E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F1FB)
            override val outlineVariantDarkHighContrast = Color(0xFFBCC3CD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004C75)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44474B)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006193)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF207AB3)
            override val onPrimaryContainerLight = Color(0xFFFDFCFF)
            override val secondaryLight = Color(0xFF8F4A05)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFAD6120)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF663406)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF824B1D)
            override val onTertiaryContainerLight = Color(0xFFFFC399)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FE)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FE)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDCE3ED)
            override val onSurfaceVariantLight = Color(0xFF40484F)
            override val outlineLight = Color(0xFF707880)
            override val outlineVariantLight = Color(0xFFC0C7D1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEFF1F6)
            override val inversePrimaryLight = Color(0xFF92CCFF)
            override val surfaceDimLight = Color(0xFFD8DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFECEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8ED)
            override val surfaceContainerHighestLight = Color(0xFFE0E2E8)
            override val primaryLightMediumContrast = Color(0xFF00395A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF1073AB)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF572A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA45A18)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF572A00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF824B1D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F373F)
            override val outlineLightMediumContrast = Color(0xFF4C535B)
            override val outlineVariantLightMediumContrast = Color(0xFF666E76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF92CCFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C6CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004D76)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF482200)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF743A00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF482200)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6F3C0E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D34)
            override val outlineVariantLightHighContrast = Color(0xFF424A52)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF92CCFF)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E2E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C6CB)
            override val primaryDark = Color(0xFF92CCFF)
            override val onPrimaryDark = Color(0xFF003351)
            override val primaryContainerDark = Color(0xFF4797D1)
            override val onPrimaryContainerDark = Color(0xFF000E1A)
            override val secondaryDark = Color(0xFFFFB782)
            override val onSecondaryDark = Color(0xFF4F2500)
            override val secondaryContainerDark = Color(0xFFCF7D39)
            override val onSecondaryContainerDark = Color(0xFF260F00)
            override val tertiaryDark = Color(0xFFFFB782)
            override val onTertiaryDark = Color(0xFF4F2500)
            override val tertiaryContainerDark = Color(0xFF824B1D)
            override val onTertiaryContainerDark = Color(0xFFFFC399)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E2E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E2E8)
            override val surfaceVariantDark = Color(0xFF40484F)
            override val onSurfaceVariantDark = Color(0xFFC0C7D1)
            override val outlineDark = Color(0xFF8A919A)
            override val outlineVariantDark = Color(0xFF40484F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF006497)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF36393E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF323539)
            override val primaryDarkMediumContrast = Color(0xFFC0E0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF4797D1)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4B7)
            override val onSecondaryDarkMediumContrast = Color(0xFF3F1C00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFCF7D39)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B7)
            override val onTertiaryDarkMediumContrast = Color(0xFF3F1C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC4824F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E2E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD6DDE7)
            override val outlineDarkMediumContrast = Color(0xFFABB3BC)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004C75)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF25282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE6F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF89C9FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E1A)
            override val secondaryDarkHighContrast = Color(0xFFFFECE2)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB178)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF170700)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFDB27B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF170700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E2E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F1FB)
            override val outlineVariantDarkHighContrast = Color(0xFFBCC3CD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004C75)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44474B)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006193)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF207AB3)
            override val onPrimaryContainerLight = Color(0xFFFDFCFF)
            override val secondaryLight = Color(0xFF005066)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF1D6982)
            override val onSecondaryContainerLight = Color(0xFFACE5FF)
            override val tertiaryLight = Color(0xFF990164)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB9297D)
            override val onTertiaryContainerLight = Color(0xFFFFDDE9)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FE)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FE)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDCE3ED)
            override val onSurfaceVariantLight = Color(0xFF40484F)
            override val outlineLight = Color(0xFF707880)
            override val outlineVariantLight = Color(0xFFC0C7D1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEFF1F6)
            override val inversePrimaryLight = Color(0xFF92CCFF)
            override val surfaceDimLight = Color(0xFFD8DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFECEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8ED)
            override val surfaceContainerHighestLight = Color(0xFFE0E2E8)
            override val primaryLightMediumContrast = Color(0xFF00395A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF1073AB)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003B4C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF1D6982)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF6D0046)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFB9297D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F373F)
            override val outlineLightMediumContrast = Color(0xFF4C535B)
            override val outlineVariantLightMediumContrast = Color(0xFF666E76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF92CCFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C6CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004D76)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005066)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF5B0039)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF8F005D)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FE)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDCE3ED)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D34)
            override val outlineVariantLightHighContrast = Color(0xFF424A52)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF92CCFF)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E2E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C6CB)
            override val primaryDark = Color(0xFF92CCFF)
            override val onPrimaryDark = Color(0xFF003351)
            override val primaryContainerDark = Color(0xFF4797D1)
            override val onPrimaryContainerDark = Color(0xFF000E1A)
            override val secondaryDark = Color(0xFF8DD0EC)
            override val onSecondaryDark = Color(0xFF003545)
            override val secondaryContainerDark = Color(0xFF1D6982)
            override val onSecondaryContainerDark = Color(0xFFACE5FF)
            override val tertiaryDark = Color(0xFFFFAFD2)
            override val onTertiaryDark = Color(0xFF63003F)
            override val tertiaryContainerDark = Color(0xFFB9297D)
            override val onTertiaryContainerDark = Color(0xFFFFDDE9)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E2E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E2E8)
            override val surfaceVariantDark = Color(0xFF40484F)
            override val onSurfaceVariantDark = Color(0xFFC0C7D1)
            override val outlineDark = Color(0xFF8A919A)
            override val outlineVariantDark = Color(0xFF40484F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF006497)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF36393E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF323539)
            override val primaryDarkMediumContrast = Color(0xFFC0E0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF4797D1)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFAAE5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A36)
            override val secondaryContainerDarkMediumContrast = Color(0xFF5699B4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD0E2)
            override val onTertiaryDarkMediumContrast = Color(0xFF4F0031)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFEF57A9)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E2E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD6DDE7)
            override val outlineDarkMediumContrast = Color(0xFFABB3BC)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919A)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004C75)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF25282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE6F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF89C9FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E1A)
            override val secondaryDarkHighContrast = Color(0xFFDDF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF89CCE8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF1)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA9CF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF200011)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E2E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF40484F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F1FB)
            override val outlineVariantDarkHighContrast = Color(0xFFBCC3CD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E2E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004C75)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44474B)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}