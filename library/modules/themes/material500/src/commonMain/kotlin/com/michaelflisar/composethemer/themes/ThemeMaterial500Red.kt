package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Red : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFFB81311)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDC3128)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF891311)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFAB2D26)
            override val onSecondaryContainerLight = Color(0xFFFFC8C1)
            override val tertiaryLight = Color(0xFF974800)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF48736)
            override val onTertiaryContainerLight = Color(0xFF5F2B00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF281715)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF281715)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5C403C)
            override val outlineLight = Color(0xFF906F6B)
            override val outlineVariantLight = Color(0xFFE5BDB8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C29)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFF2D3CF)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFFE2DD)
            override val surfaceContainerHighestLight = Color(0xFFFADCD7)
            override val primaryLightMediumContrast = Color(0xFF740003)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD12921)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF740005)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFAB2D26)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5A2800)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFAE5400)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF281715)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0B)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF49302C)
            override val outlineLightMediumContrast = Color(0xFF694B47)
            override val outlineVariantLightMediumContrast = Color(0xFF856561)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0BC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DD)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D6D2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE9CBC7)
            override val primaryLightHighContrast = Color(0xFF610002)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF980006)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF600004)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF901916)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4B2000)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF773700)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF281715)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2623)
            override val outlineVariantLightHighContrast = Color(0xFF5E423E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCFB2AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFECCEC9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0BC)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690002)
            override val primaryContainerDark = Color(0xFFFF5545)
            override val onPrimaryContainerDark = Color(0xFF450001)
            override val secondaryDark = Color(0xFFFFB4AB)
            override val onSecondaryDark = Color(0xFF690004)
            override val secondaryContainerDark = Color(0xFFAB2D26)
            override val onSecondaryContainerDark = Color(0xFFFFC8C1)
            override val tertiaryDark = Color(0xFFFFB688)
            override val onTertiaryDark = Color(0xFF512400)
            override val tertiaryContainerDark = Color(0xFFF48736)
            override val onTertiaryContainerDark = Color(0xFF5F2B00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E0F0D)
            override val onBackgroundDark = Color(0xFFFADCD7)
            override val surfaceDark = Color(0xFF1E0F0D)
            override val onSurfaceDark = Color(0xFFFADCD7)
            override val surfaceVariantDark = Color(0xFF5C403C)
            override val onSurfaceVariantDark = Color(0xFFE5BDB8)
            override val outlineDark = Color(0xFFAC8884)
            override val outlineVariantDark = Color(0xFF5C403C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD7)
            override val inverseOnSurfaceDark = Color(0xFF3E2C29)
            override val inversePrimaryDark = Color(0xFFBB1614)
            override val surfaceDimDark = Color(0xFF1E0F0D)
            override val surfaceBrightDark = Color(0xFF483432)
            override val surfaceContainerLowestDark = Color(0xFF190A08)
            override val surfaceContainerLowDark = Color(0xFF281715)
            override val surfaceContainerDark = Color(0xFF2C1B19)
            override val surfaceContainerHighDark = Color(0xFF372623)
            override val surfaceContainerHighestDark = Color(0xFF43302D)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onPrimaryDarkMediumContrast = Color(0xFF540002)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5545)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540003)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF36154)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4BA)
            override val onTertiaryDarkMediumContrast = Color(0xFF411B00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFF48736)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF2C1000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD7)
            override val surfaceDarkMediumContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFCD3CD)
            override val outlineDarkMediumContrast = Color(0xFFCFA9A4)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB8883)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF382623)
            override val inversePrimaryDarkMediumContrast = Color(0xFF950005)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A1917)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352321)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E2B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D3936)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE3)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17F)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180600)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD7)
            override val surfaceDarkHighContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFE1BAB4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF950005)
            override val surfaceDimDarkHighContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B48)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B19)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C29)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3734)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF57423F)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFFB81311)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDC3128)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF891311)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFAB2D26)
            override val onSecondaryContainerLight = Color(0xFFFFC8C1)
            override val tertiaryLight = Color(0xFF974800)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF48736)
            override val onTertiaryContainerLight = Color(0xFF5F2B00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF281715)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF281715)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5C403C)
            override val outlineLight = Color(0xFF906F6B)
            override val outlineVariantLight = Color(0xFFE5BDB8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C29)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFF2D3CF)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFFE2DD)
            override val surfaceContainerHighestLight = Color(0xFFFADCD7)
            override val primaryLightMediumContrast = Color(0xFF740003)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD12921)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF740005)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFAB2D26)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5A2800)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFAE5400)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF281715)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0B)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF49302C)
            override val outlineLightMediumContrast = Color(0xFF694B47)
            override val outlineVariantLightMediumContrast = Color(0xFF856561)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0BC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DD)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D6D2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE9CBC7)
            override val primaryLightHighContrast = Color(0xFF610002)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF980006)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF600004)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF901916)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4B2000)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF773700)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF281715)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2623)
            override val outlineVariantLightHighContrast = Color(0xFF5E423E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCFB2AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFECCEC9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0BC)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690002)
            override val primaryContainerDark = Color(0xFFFF5545)
            override val onPrimaryContainerDark = Color(0xFF450001)
            override val secondaryDark = Color(0xFFFFB4AB)
            override val onSecondaryDark = Color(0xFF690004)
            override val secondaryContainerDark = Color(0xFFAB2D26)
            override val onSecondaryContainerDark = Color(0xFFFFC8C1)
            override val tertiaryDark = Color(0xFFFFB688)
            override val onTertiaryDark = Color(0xFF512400)
            override val tertiaryContainerDark = Color(0xFFF48736)
            override val onTertiaryContainerDark = Color(0xFF5F2B00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E0F0D)
            override val onBackgroundDark = Color(0xFFFADCD7)
            override val surfaceDark = Color(0xFF1E0F0D)
            override val onSurfaceDark = Color(0xFFFADCD7)
            override val surfaceVariantDark = Color(0xFF5C403C)
            override val onSurfaceVariantDark = Color(0xFFE5BDB8)
            override val outlineDark = Color(0xFFAC8884)
            override val outlineVariantDark = Color(0xFF5C403C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD7)
            override val inverseOnSurfaceDark = Color(0xFF3E2C29)
            override val inversePrimaryDark = Color(0xFFBB1614)
            override val surfaceDimDark = Color(0xFF1E0F0D)
            override val surfaceBrightDark = Color(0xFF483432)
            override val surfaceContainerLowestDark = Color(0xFF190A08)
            override val surfaceContainerLowDark = Color(0xFF281715)
            override val surfaceContainerDark = Color(0xFF2C1B19)
            override val surfaceContainerHighDark = Color(0xFF372623)
            override val surfaceContainerHighestDark = Color(0xFF43302D)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onPrimaryDarkMediumContrast = Color(0xFF540002)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5545)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540003)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF36154)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4BA)
            override val onTertiaryDarkMediumContrast = Color(0xFF411B00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFF48736)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF2C1000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD7)
            override val surfaceDarkMediumContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFCD3CD)
            override val outlineDarkMediumContrast = Color(0xFFCFA9A4)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB8883)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF382623)
            override val inversePrimaryDarkMediumContrast = Color(0xFF950005)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A1917)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352321)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E2B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D3936)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE3)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17F)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180600)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD7)
            override val surfaceDarkHighContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFE1BAB4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF950005)
            override val surfaceDimDarkHighContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B48)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B19)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C29)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3734)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF57423F)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB81311)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDC3128)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF006E19)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF36F450)
            override val onSecondaryContainerLight = Color(0xFF006B18)
            override val tertiaryLight = Color(0xFF006E1A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF26AB38)
            override val onTertiaryContainerLight = Color(0xFF003608)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF281715)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF281715)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5C403C)
            override val outlineLight = Color(0xFF906F6B)
            override val outlineVariantLight = Color(0xFFE5BDB8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C29)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFF2D3CF)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFFE2DD)
            override val surfaceContainerHighestLight = Color(0xFFFADCD7)
            override val primaryLightMediumContrast = Color(0xFF740003)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD12921)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF00400A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007F1E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF00400B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF007F20)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF281715)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0B)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF49302C)
            override val outlineLightMediumContrast = Color(0xFF694B47)
            override val outlineVariantLightMediumContrast = Color(0xFF856561)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0BC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DD)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D6D2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE9CBC7)
            override val primaryLightHighContrast = Color(0xFF610002)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF980006)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003507)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005611)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003508)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF005612)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF281715)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2623)
            override val outlineVariantLightHighContrast = Color(0xFF5E423E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCFB2AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFECCEC9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0BC)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690002)
            override val primaryContainerDark = Color(0xFFFF5545)
            override val onPrimaryContainerDark = Color(0xFF450001)
            override val secondaryDark = Color(0xFFC9FFBF)
            override val onSecondaryDark = Color(0xFF003908)
            override val secondaryContainerDark = Color(0xFF36F450)
            override val onSecondaryContainerDark = Color(0xFF006B18)
            override val tertiaryDark = Color(0xFF62E065)
            override val onTertiaryDark = Color(0xFF003909)
            override val tertiaryContainerDark = Color(0xFF26AB38)
            override val onTertiaryContainerDark = Color(0xFF003608)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E0F0D)
            override val onBackgroundDark = Color(0xFFFADCD7)
            override val surfaceDark = Color(0xFF1E0F0D)
            override val onSurfaceDark = Color(0xFFFADCD7)
            override val surfaceVariantDark = Color(0xFF5C403C)
            override val onSurfaceVariantDark = Color(0xFFE5BDB8)
            override val outlineDark = Color(0xFFAC8884)
            override val outlineVariantDark = Color(0xFF5C403C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD7)
            override val inverseOnSurfaceDark = Color(0xFF3E2C29)
            override val inversePrimaryDark = Color(0xFFBB1614)
            override val surfaceDimDark = Color(0xFF1E0F0D)
            override val surfaceBrightDark = Color(0xFF483432)
            override val surfaceContainerLowestDark = Color(0xFF190A08)
            override val surfaceContainerLowDark = Color(0xFF281715)
            override val surfaceContainerDark = Color(0xFF2C1B19)
            override val surfaceContainerHighDark = Color(0xFF372623)
            override val surfaceContainerHighestDark = Color(0xFF43302D)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onPrimaryDarkMediumContrast = Color(0xFF540002)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5545)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC9FFBF)
            override val onSecondaryDarkMediumContrast = Color(0xFF003908)
            override val secondaryContainerDarkMediumContrast = Color(0xFF36F450)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF004B0E)
            override val tertiaryDarkMediumContrast = Color(0xFF79F779)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D06)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF26AB38)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD7)
            override val surfaceDarkMediumContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFCD3CD)
            override val outlineDarkMediumContrast = Color(0xFFCFA9A4)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB8883)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF382623)
            override val inversePrimaryDarkMediumContrast = Color(0xFF950005)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A1917)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352321)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E2B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D3936)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFC9FFBF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF36F450)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF002604)
            override val tertiaryDarkHighContrast = Color(0xFFC5FFBC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF5EDC62)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F01)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD7)
            override val surfaceDarkHighContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFE1BAB4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF950005)
            override val surfaceDimDarkHighContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B48)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B19)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C29)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3734)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF57423F)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB81311)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDC3128)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF891311)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFAB2D26)
            override val onSecondaryContainerLight = Color(0xFFFFC8C1)
            override val tertiaryLight = Color(0xFF5E6300)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFEAF436)
            override val onTertiaryContainerLight = Color(0xFF696E00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF281715)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF281715)
            override val surfaceVariantLight = Color(0xFFFFDAD5)
            override val onSurfaceVariantLight = Color(0xFF5C403C)
            override val outlineLight = Color(0xFF906F6B)
            override val outlineVariantLight = Color(0xFFE5BDB8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C29)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEA)
            override val inversePrimaryLight = Color(0xFFFFB4A9)
            override val surfaceDimLight = Color(0xFFF2D3CF)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EE)
            override val surfaceContainerLight = Color(0xFFFFE9E6)
            override val surfaceContainerHighLight = Color(0xFFFFE2DD)
            override val surfaceContainerHighestLight = Color(0xFFFADCD7)
            override val primaryLightMediumContrast = Color(0xFF740003)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD12921)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF740005)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFAB2D26)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF363900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6D7200)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF281715)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0B)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF49302C)
            override val outlineLightMediumContrast = Color(0xFF694B47)
            override val outlineVariantLightMediumContrast = Color(0xFF856561)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0BC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DD)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D6D2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE9CBC7)
            override val primaryLightHighContrast = Color(0xFF610002)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF980006)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF600004)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF901916)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2C2E00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF494D00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF281715)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDAD5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2623)
            override val outlineVariantLightHighContrast = Color(0xFF5E423E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C29)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB4A9)
            override val surfaceDimLightHighContrast = Color(0xFFCFB2AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEA)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFECCEC9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0BC)
            override val primaryDark = Color(0xFFFFB4A9)
            override val onPrimaryDark = Color(0xFF690002)
            override val primaryContainerDark = Color(0xFFFF5545)
            override val onPrimaryContainerDark = Color(0xFF450001)
            override val secondaryDark = Color(0xFFFFB4AB)
            override val onSecondaryDark = Color(0xFF690004)
            override val secondaryContainerDark = Color(0xFFAB2D26)
            override val onSecondaryContainerDark = Color(0xFFFFC8C1)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF303300)
            override val tertiaryContainerDark = Color(0xFFE2EC2D)
            override val onTertiaryContainerDark = Color(0xFF646900)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E0F0D)
            override val onBackgroundDark = Color(0xFFFADCD7)
            override val surfaceDark = Color(0xFF1E0F0D)
            override val onSurfaceDark = Color(0xFFFADCD7)
            override val surfaceVariantDark = Color(0xFF5C403C)
            override val onSurfaceVariantDark = Color(0xFFE5BDB8)
            override val outlineDark = Color(0xFFAC8884)
            override val outlineVariantDark = Color(0xFF5C403C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD7)
            override val inverseOnSurfaceDark = Color(0xFF3E2C29)
            override val inversePrimaryDark = Color(0xFFBB1614)
            override val surfaceDimDark = Color(0xFF1E0F0D)
            override val surfaceBrightDark = Color(0xFF483432)
            override val surfaceContainerLowestDark = Color(0xFF190A08)
            override val surfaceContainerLowDark = Color(0xFF281715)
            override val surfaceContainerDark = Color(0xFF2C1B19)
            override val surfaceContainerHighDark = Color(0xFF372623)
            override val surfaceContainerHighestDark = Color(0xFF43302D)
            override val primaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onPrimaryDarkMediumContrast = Color(0xFF540002)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5545)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onSecondaryDarkMediumContrast = Color(0xFF540003)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF36154)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF303300)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE2EC2D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF484B00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD7)
            override val surfaceDarkMediumContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFCD3CD)
            override val outlineDarkMediumContrast = Color(0xFFCFA9A4)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB8883)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF382623)
            override val inversePrimaryDarkMediumContrast = Color(0xFF950005)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100504)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A1917)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352321)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E2B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D3936)
            override val primaryDarkHighContrast = Color(0xFFFFECE9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220000)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE2EC2D)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2A2C00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E0F0D)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD7)
            override val surfaceDarkHighContrast = Color(0xFF1E0F0D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5C403C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE9)
            override val outlineVariantDarkHighContrast = Color(0xFFE1BAB4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF950005)
            override val surfaceDimDarkHighContrast = Color(0xFF1E0F0D)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B48)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B19)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C29)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3734)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF57423F)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("red", "Red")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}