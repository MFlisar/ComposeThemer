package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Amber : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF785900)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFC107)
            override val onPrimaryContainerLight = Color(0xFF6D5100)
            override val secondaryLight = Color(0xFF6D5E00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB39B05)
            override val onSecondaryContainerLight = Color(0xFF3C3300)
            override val tertiaryLight = Color(0xFF576500)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDEFF07)
            override val onTertiaryContainerLight = Color(0xFF647400)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F2)
            override val onBackgroundLight = Color(0xFF201B11)
            override val surfaceLight = Color(0xFFFFF8F2)
            override val onSurfaceLight = Color(0xFF201B11)
            override val surfaceVariantLight = Color(0xFFF0E1C6)
            override val onSurfaceVariantLight = Color(0xFF4F4632)
            override val outlineLight = Color(0xFF827660)
            override val outlineVariantLight = Color(0xFFD4C5AB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF363024)
            override val inverseOnSurfaceLight = Color(0xFFFBEFDE)
            override val inversePrimaryLight = Color(0xFFFABD00)
            override val surfaceDimLight = Color(0xFFE4D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E1)
            override val surfaceContainerLight = Color(0xFFF8ECDB)
            override val surfaceContainerHighLight = Color(0xFFF2E7D6)
            override val surfaceContainerHighestLight = Color(0xFFECE1D0)
            override val primaryLightMediumContrast = Color(0xFF473300)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8B6700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3F3600)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7E6C00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF313A00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF647400)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightMediumContrast = Color(0xFF201B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightMediumContrast = Color(0xFF151107)
            override val surfaceVariantLightMediumContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3523)
            override val outlineLightMediumContrast = Color(0xFF5C513D)
            override val outlineVariantLightMediumContrast = Color(0xFF776C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFDE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABD00)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBD0C0)
            override val primaryLightHighContrast = Color(0xFF3A2900)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5E4500)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF342C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF554900)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF282F00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF434E00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightHighContrast = Color(0xFF201B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342B19)
            override val outlineVariantLightHighContrast = Color(0xFF524834)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABD00)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7A7)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFDE)
            override val surfaceContainerLightHighContrast = Color(0xFFECE1D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED3C2)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B5)
            override val primaryDark = Color(0xFFFFE4AF)
            override val onPrimaryDark = Color(0xFF3F2E00)
            override val primaryContainerDark = Color(0xFFFFC107)
            override val onPrimaryContainerDark = Color(0xFF6D5100)
            override val secondaryDark = Color(0xFFE1C63C)
            override val onSecondaryDark = Color(0xFF393000)
            override val secondaryContainerDark = Color(0xFFB39B05)
            override val onSecondaryContainerDark = Color(0xFF3C3300)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF2C3400)
            override val tertiaryContainerDark = Color(0xFFD1F100)
            override val onTertiaryContainerDark = Color(0xFF5C6B00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181309)
            override val onBackgroundDark = Color(0xFFECE1D0)
            override val surfaceDark = Color(0xFF181309)
            override val onSurfaceDark = Color(0xFFECE1D0)
            override val surfaceVariantDark = Color(0xFF4F4632)
            override val onSurfaceVariantDark = Color(0xFFD4C5AB)
            override val outlineDark = Color(0xFF9C8F78)
            override val outlineVariantDark = Color(0xFF4F4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFECE1D0)
            override val inverseOnSurfaceDark = Color(0xFF363024)
            override val inversePrimaryDark = Color(0xFF785900)
            override val surfaceDimDark = Color(0xFF181309)
            override val surfaceBrightDark = Color(0xFF3F382D)
            override val surfaceContainerLowestDark = Color(0xFF120E05)
            override val surfaceContainerLowDark = Color(0xFF201B11)
            override val surfaceContainerDark = Color(0xFF241F14)
            override val surfaceContainerHighDark = Color(0xFF2F291E)
            override val surfaceContainerHighestDark = Color(0xFF3A3428)
            override val primaryDarkMediumContrast = Color(0xFFFFE4AF)
            override val onPrimaryDarkMediumContrast = Color(0xFF3B2A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF4A3600)
            override val secondaryDarkMediumContrast = Color(0xFFF8DC50)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D2500)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB39B05)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF100D00)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2C3400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD1F100)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF424D00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181309)
            override val onBackgroundDarkMediumContrast = Color(0xFFECE1D0)
            override val surfaceDarkMediumContrast = Color(0xFF181309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEADAC0)
            override val outlineDarkMediumContrast = Color(0xFFBEB098)
            override val outlineVariantDarkMediumContrast = Color(0xFF9C8F78)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F291E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5D4400)
            override val surfaceDimDarkMediumContrast = Color(0xFF181309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4A4437)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383226)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF433D31)
            override val primaryDarkHighContrast = Color(0xFFFFEED1)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1F1500)
            override val secondaryDarkHighContrast = Color(0xFFFFF0B5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDCC238)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0F0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD1F100)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF262D00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181309)
            override val onBackgroundDarkHighContrast = Color(0xFFECE1D0)
            override val surfaceDarkHighContrast = Color(0xFF181309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFEEED3)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C1A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5D4400)
            override val surfaceDimDarkHighContrast = Color(0xFF181309)
            override val surfaceBrightDarkHighContrast = Color(0xFF564F42)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF241F14)
            override val surfaceContainerDarkHighContrast = Color(0xFF363024)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463A)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF785900)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFC107)
            override val onPrimaryContainerLight = Color(0xFF6D5100)
            override val secondaryLight = Color(0xFF6D5E00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB39B05)
            override val onSecondaryContainerLight = Color(0xFF3C3300)
            override val tertiaryLight = Color(0xFF645F36)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFF7C1)
            override val onTertiaryContainerLight = Color(0xFF767146)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F2)
            override val onBackgroundLight = Color(0xFF201B11)
            override val surfaceLight = Color(0xFFFFF8F2)
            override val onSurfaceLight = Color(0xFF201B11)
            override val surfaceVariantLight = Color(0xFFF0E1C6)
            override val onSurfaceVariantLight = Color(0xFF4F4632)
            override val outlineLight = Color(0xFF827660)
            override val outlineVariantLight = Color(0xFFD4C5AB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF363024)
            override val inverseOnSurfaceLight = Color(0xFFFBEFDE)
            override val inversePrimaryLight = Color(0xFFFABD00)
            override val surfaceDimLight = Color(0xFFE4D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E1)
            override val surfaceContainerLight = Color(0xFFF8ECDB)
            override val surfaceContainerHighLight = Color(0xFFF2E7D6)
            override val surfaceContainerHighestLight = Color(0xFFECE1D0)
            override val primaryLightMediumContrast = Color(0xFF473300)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8B6700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3F3600)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7E6C00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3B3711)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF736E43)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightMediumContrast = Color(0xFF201B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightMediumContrast = Color(0xFF151107)
            override val surfaceVariantLightMediumContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3523)
            override val outlineLightMediumContrast = Color(0xFF5C513D)
            override val outlineVariantLightMediumContrast = Color(0xFF776C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFDE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABD00)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBD0C0)
            override val primaryLightHighContrast = Color(0xFF3A2900)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5E4500)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF342C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF554900)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF302D08)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4E4A23)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightHighContrast = Color(0xFF201B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342B19)
            override val outlineVariantLightHighContrast = Color(0xFF524834)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABD00)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7A7)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFDE)
            override val surfaceContainerLightHighContrast = Color(0xFFECE1D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED3C2)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B5)
            override val primaryDark = Color(0xFFFFE4AF)
            override val onPrimaryDark = Color(0xFF3F2E00)
            override val primaryContainerDark = Color(0xFFFFC107)
            override val onPrimaryContainerDark = Color(0xFF6D5100)
            override val secondaryDark = Color(0xFFE1C63C)
            override val onSecondaryDark = Color(0xFF393000)
            override val secondaryContainerDark = Color(0xFFB39B05)
            override val onSecondaryContainerDark = Color(0xFF3C3300)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF35310C)
            override val tertiaryContainerDark = Color(0xFFECE4AF)
            override val onTertiaryContainerDark = Color(0xFF6A653B)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181309)
            override val onBackgroundDark = Color(0xFFECE1D0)
            override val surfaceDark = Color(0xFF181309)
            override val onSurfaceDark = Color(0xFFECE1D0)
            override val surfaceVariantDark = Color(0xFF4F4632)
            override val onSurfaceVariantDark = Color(0xFFD4C5AB)
            override val outlineDark = Color(0xFF9C8F78)
            override val outlineVariantDark = Color(0xFF4F4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFECE1D0)
            override val inverseOnSurfaceDark = Color(0xFF363024)
            override val inversePrimaryDark = Color(0xFF785900)
            override val surfaceDimDark = Color(0xFF181309)
            override val surfaceBrightDark = Color(0xFF3F382D)
            override val surfaceContainerLowestDark = Color(0xFF120E05)
            override val surfaceContainerLowDark = Color(0xFF201B11)
            override val surfaceContainerDark = Color(0xFF241F14)
            override val surfaceContainerHighDark = Color(0xFF2F291E)
            override val surfaceContainerHighestDark = Color(0xFF3A3428)
            override val primaryDarkMediumContrast = Color(0xFFFFE4AF)
            override val onPrimaryDarkMediumContrast = Color(0xFF3B2A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF4A3600)
            override val secondaryDarkMediumContrast = Color(0xFFF8DC50)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D2500)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB39B05)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF100D00)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF35310C)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFECE4AF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF4D4922)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181309)
            override val onBackgroundDarkMediumContrast = Color(0xFFECE1D0)
            override val surfaceDarkMediumContrast = Color(0xFF181309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEADAC0)
            override val outlineDarkMediumContrast = Color(0xFFBEB098)
            override val outlineVariantDarkMediumContrast = Color(0xFF9C8F78)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F291E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5D4400)
            override val surfaceDimDarkMediumContrast = Color(0xFF181309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4A4437)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383226)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF433D31)
            override val primaryDarkHighContrast = Color(0xFFFFEED1)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1F1500)
            override val secondaryDarkHighContrast = Color(0xFFFFF0B5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDCC238)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0F0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFECE4AF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2E2B06)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181309)
            override val onBackgroundDarkHighContrast = Color(0xFFECE1D0)
            override val surfaceDarkHighContrast = Color(0xFF181309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFEEED3)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C1A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5D4400)
            override val surfaceDimDarkHighContrast = Color(0xFF181309)
            override val surfaceBrightDarkHighContrast = Color(0xFF564F42)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF241F14)
            override val surfaceContainerDarkHighContrast = Color(0xFF363024)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463A)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF785900)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFC107)
            override val onPrimaryContainerLight = Color(0xFF6D5100)
            override val secondaryLight = Color(0xFF4E00C4)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF6807FF)
            override val onSecondaryContainerLight = Color(0xFFD9CBFF)
            override val tertiaryLight = Color(0xFF30007D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF4905B3)
            override val onTertiaryContainerLight = Color(0xFFB499FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F2)
            override val onBackgroundLight = Color(0xFF201B11)
            override val surfaceLight = Color(0xFFFFF8F2)
            override val onSurfaceLight = Color(0xFF201B11)
            override val surfaceVariantLight = Color(0xFFF0E1C6)
            override val onSurfaceVariantLight = Color(0xFF4F4632)
            override val outlineLight = Color(0xFF827660)
            override val outlineVariantLight = Color(0xFFD4C5AB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF363024)
            override val inverseOnSurfaceLight = Color(0xFFFBEFDE)
            override val inversePrimaryLight = Color(0xFFFABD00)
            override val surfaceDimLight = Color(0xFFE4D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E1)
            override val surfaceContainerLight = Color(0xFFF8ECDB)
            override val surfaceContainerHighLight = Color(0xFFF2E7D6)
            override val surfaceContainerHighestLight = Color(0xFFECE1D0)
            override val primaryLightMediumContrast = Color(0xFF473300)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8B6700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3F00A3)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF6807FF)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF30007D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF4905B3)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFD9CAFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightMediumContrast = Color(0xFF201B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightMediumContrast = Color(0xFF151107)
            override val surfaceVariantLightMediumContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3523)
            override val outlineLightMediumContrast = Color(0xFF5C513D)
            override val outlineVariantLightMediumContrast = Color(0xFF776C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFDE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABD00)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBD0C0)
            override val primaryLightHighContrast = Color(0xFF3A2900)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5E4500)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF340089)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5500D4)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF30007D)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4905B3)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightHighContrast = Color(0xFF201B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342B19)
            override val outlineVariantLightHighContrast = Color(0xFF524834)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABD00)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7A7)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFDE)
            override val surfaceContainerLightHighContrast = Color(0xFFECE1D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED3C2)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B5)
            override val primaryDark = Color(0xFFFFE4AF)
            override val onPrimaryDark = Color(0xFF3F2E00)
            override val primaryContainerDark = Color(0xFFFFC107)
            override val onPrimaryContainerDark = Color(0xFF6D5100)
            override val secondaryDark = Color(0xFFCEBDFF)
            override val onSecondaryDark = Color(0xFF390094)
            override val secondaryContainerDark = Color(0xFF6807FF)
            override val onSecondaryContainerDark = Color(0xFFD9CBFF)
            override val tertiaryDark = Color(0xFFCFBDFF)
            override val onTertiaryDark = Color(0xFF3A0093)
            override val tertiaryContainerDark = Color(0xFF4905B3)
            override val onTertiaryContainerDark = Color(0xFFB499FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181309)
            override val onBackgroundDark = Color(0xFFECE1D0)
            override val surfaceDark = Color(0xFF181309)
            override val onSurfaceDark = Color(0xFFECE1D0)
            override val surfaceVariantDark = Color(0xFF4F4632)
            override val onSurfaceVariantDark = Color(0xFFD4C5AB)
            override val outlineDark = Color(0xFF9C8F78)
            override val outlineVariantDark = Color(0xFF4F4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFECE1D0)
            override val inverseOnSurfaceDark = Color(0xFF363024)
            override val inversePrimaryDark = Color(0xFF785900)
            override val surfaceDimDark = Color(0xFF181309)
            override val surfaceBrightDark = Color(0xFF3F382D)
            override val surfaceContainerLowestDark = Color(0xFF120E05)
            override val surfaceContainerLowDark = Color(0xFF201B11)
            override val surfaceContainerDark = Color(0xFF241F14)
            override val surfaceContainerHighDark = Color(0xFF2F291E)
            override val surfaceContainerHighestDark = Color(0xFF3A3428)
            override val primaryDarkMediumContrast = Color(0xFFFFE4AF)
            override val onPrimaryDarkMediumContrast = Color(0xFF3B2A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF4A3600)
            override val secondaryDarkMediumContrast = Color(0xFFE2D6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2C0078)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9C7AFF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D0077)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9D79FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181309)
            override val onBackgroundDarkMediumContrast = Color(0xFFECE1D0)
            override val surfaceDarkMediumContrast = Color(0xFF181309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEADAC0)
            override val outlineDarkMediumContrast = Color(0xFFBEB098)
            override val outlineVariantDarkMediumContrast = Color(0xFF9C8F78)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F291E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5D4400)
            override val surfaceDimDarkMediumContrast = Color(0xFF181309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4A4437)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383226)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF433D31)
            override val primaryDarkHighContrast = Color(0xFFFFEED1)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1F1500)
            override val secondaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCBB8FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val tertiaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCBB8FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181309)
            override val onBackgroundDarkHighContrast = Color(0xFFECE1D0)
            override val surfaceDarkHighContrast = Color(0xFF181309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFEEED3)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C1A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5D4400)
            override val surfaceDimDarkHighContrast = Color(0xFF181309)
            override val surfaceBrightDarkHighContrast = Color(0xFF564F42)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF241F14)
            override val surfaceContainerDarkHighContrast = Color(0xFF363024)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463A)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF785900)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFC107)
            override val onPrimaryContainerLight = Color(0xFF6D5100)
            override val secondaryLight = Color(0xFF6D5E00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB39B05)
            override val onSecondaryContainerLight = Color(0xFF3C3300)
            override val tertiaryLight = Color(0xFF006590)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF07B5FF)
            override val onTertiaryContainerLight = Color(0xFF004362)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F2)
            override val onBackgroundLight = Color(0xFF201B11)
            override val surfaceLight = Color(0xFFFFF8F2)
            override val onSurfaceLight = Color(0xFF201B11)
            override val surfaceVariantLight = Color(0xFFF0E1C6)
            override val onSurfaceVariantLight = Color(0xFF4F4632)
            override val outlineLight = Color(0xFF827660)
            override val outlineVariantLight = Color(0xFFD4C5AB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF363024)
            override val inverseOnSurfaceLight = Color(0xFFFBEFDE)
            override val inversePrimaryLight = Color(0xFFFABD00)
            override val surfaceDimLight = Color(0xFFE4D9C8)
            override val surfaceBrightLight = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E1)
            override val surfaceContainerLight = Color(0xFFF8ECDB)
            override val surfaceContainerHighLight = Color(0xFFF2E7D6)
            override val surfaceContainerHighestLight = Color(0xFFECE1D0)
            override val primaryLightMediumContrast = Color(0xFF473300)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF8B6700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3F3600)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7E6C00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003A55)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF0074A6)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightMediumContrast = Color(0xFF201B11)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightMediumContrast = Color(0xFF151107)
            override val surfaceVariantLightMediumContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3523)
            override val outlineLightMediumContrast = Color(0xFF5C513D)
            override val outlineVariantLightMediumContrast = Color(0xFF776C56)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFDE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABD00)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E7D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBD0C0)
            override val primaryLightHighContrast = Color(0xFF3A2900)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5E4500)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF342C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF554900)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002F47)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF004E71)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F2)
            override val onBackgroundLightHighContrast = Color(0xFF201B11)
            override val surfaceLightHighContrast = Color(0xFFFFF8F2)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF0E1C6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342B19)
            override val outlineVariantLightHighContrast = Color(0xFF524834)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF363024)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABD00)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7A7)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F2)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFDE)
            override val surfaceContainerLightHighContrast = Color(0xFFECE1D0)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED3C2)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B5)
            override val primaryDark = Color(0xFFFFE4AF)
            override val onPrimaryDark = Color(0xFF3F2E00)
            override val primaryContainerDark = Color(0xFFFFC107)
            override val onPrimaryContainerDark = Color(0xFF6D5100)
            override val secondaryDark = Color(0xFFE1C63C)
            override val onSecondaryDark = Color(0xFF393000)
            override val secondaryContainerDark = Color(0xFFB39B05)
            override val onSecondaryContainerDark = Color(0xFF3C3300)
            override val tertiaryDark = Color(0xFF88CEFF)
            override val onTertiaryDark = Color(0xFF00344D)
            override val tertiaryContainerDark = Color(0xFF07B5FF)
            override val onTertiaryContainerDark = Color(0xFF004362)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181309)
            override val onBackgroundDark = Color(0xFFECE1D0)
            override val surfaceDark = Color(0xFF181309)
            override val onSurfaceDark = Color(0xFFECE1D0)
            override val surfaceVariantDark = Color(0xFF4F4632)
            override val onSurfaceVariantDark = Color(0xFFD4C5AB)
            override val outlineDark = Color(0xFF9C8F78)
            override val outlineVariantDark = Color(0xFF4F4632)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFECE1D0)
            override val inverseOnSurfaceDark = Color(0xFF363024)
            override val inversePrimaryDark = Color(0xFF785900)
            override val surfaceDimDark = Color(0xFF181309)
            override val surfaceBrightDark = Color(0xFF3F382D)
            override val surfaceContainerLowestDark = Color(0xFF120E05)
            override val surfaceContainerLowDark = Color(0xFF201B11)
            override val surfaceContainerDark = Color(0xFF241F14)
            override val surfaceContainerHighDark = Color(0xFF2F291E)
            override val surfaceContainerHighestDark = Color(0xFF3A3428)
            override val primaryDarkMediumContrast = Color(0xFFFFE4AF)
            override val onPrimaryDarkMediumContrast = Color(0xFF3B2A00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF4A3600)
            override val secondaryDarkMediumContrast = Color(0xFFF8DC50)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D2500)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB39B05)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF100D00)
            override val tertiaryDarkMediumContrast = Color(0xFFBBE1FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00293D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF07B5FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF002235)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181309)
            override val onBackgroundDarkMediumContrast = Color(0xFFECE1D0)
            override val surfaceDarkMediumContrast = Color(0xFF181309)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEADAC0)
            override val outlineDarkMediumContrast = Color(0xFFBEB098)
            override val outlineVariantDarkMediumContrast = Color(0xFF9C8F78)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F291E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5D4400)
            override val surfaceDimDarkMediumContrast = Color(0xFF181309)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4A4437)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383226)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF433D31)
            override val primaryDarkHighContrast = Color(0xFFFFEED1)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFC107)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1F1500)
            override val secondaryDarkHighContrast = Color(0xFFFFF0B5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDCC238)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0F0B00)
            override val tertiaryDarkHighContrast = Color(0xFFE4F2FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF7ECBFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000D17)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181309)
            override val onBackgroundDarkHighContrast = Color(0xFFECE1D0)
            override val surfaceDarkHighContrast = Color(0xFF181309)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4632)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFEEED3)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C1A8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFECE1D0)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5D4400)
            override val surfaceDimDarkHighContrast = Color(0xFF181309)
            override val surfaceBrightDarkHighContrast = Color(0xFF564F42)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF241F14)
            override val surfaceContainerDarkHighContrast = Color(0xFF363024)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413B2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463A)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("amber", "Amber")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}