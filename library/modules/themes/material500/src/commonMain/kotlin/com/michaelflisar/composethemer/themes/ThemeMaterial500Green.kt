package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Green : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF006E1C)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF4CAF50)
            override val onPrimaryContainerLight = Color(0xFF003C0B)
            override val secondaryLight = Color(0xFF196124)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF357A3A)
            override val onSecondaryContainerLight = Color(0xFFBDFFB8)
            override val tertiaryLight = Color(0xFF00696E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF4CA9AF)
            override val onTertiaryContainerLight = Color(0xFF003A3D)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FBEF)
            override val onBackgroundLight = Color(0xFF171D16)
            override val surfaceLight = Color(0xFFF5FBEF)
            override val onSurfaceLight = Color(0xFF171D16)
            override val surfaceVariantLight = Color(0xFFDAE6D4)
            override val onSurfaceVariantLight = Color(0xFF3F4A3C)
            override val outlineLight = Color(0xFF6F7A6B)
            override val outlineVariantLight = Color(0xFFBECAB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C322A)
            override val inverseOnSurfaceLight = Color(0xFFEDF3E7)
            override val inversePrimaryLight = Color(0xFF78DC77)
            override val surfaceDimLight = Color(0xFFD6DCD0)
            override val surfaceBrightLight = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F6EA)
            override val surfaceContainerLight = Color(0xFFEAF0E4)
            override val surfaceContainerHighLight = Color(0xFFE4EADE)
            override val surfaceContainerHighestLight = Color(0xFFDEE4D9)
            override val primaryLightMediumContrast = Color(0xFF00400C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF117E26)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF00400F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF357A3A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003D40)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF00797F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightMediumContrast = Color(0xFF171D16)
            override val surfaceLightMediumContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D130C)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F392C)
            override val outlineLightMediumContrast = Color(0xFF4B5548)
            override val outlineVariantLightMediumContrast = Color(0xFF657061)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF3E7)
            override val inversePrimaryLightMediumContrast = Color(0xFF78DC77)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F6EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4EADE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DFD3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED4C8)
            override val primaryLightHighContrast = Color(0xFF003509)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005614)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00340B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF09551A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003235)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF005256)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightHighContrast = Color(0xFF171D16)
            override val surfaceLightHighContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252F23)
            override val outlineVariantLightHighContrast = Color(0xFF414C3F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF78DC77)
            override val surfaceDimLightHighContrast = Color(0xFFB5BBB0)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF3E7)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4D9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8BD)
            override val primaryDark = Color(0xFF78DC77)
            override val onPrimaryDark = Color(0xFF00390A)
            override val primaryContainerDark = Color(0xFF4CAF50)
            override val onPrimaryContainerDark = Color(0xFF003C0B)
            override val secondaryDark = Color(0xFF8FD88C)
            override val onSecondaryDark = Color(0xFF00390D)
            override val secondaryContainerDark = Color(0xFF357A3A)
            override val onSecondaryContainerDark = Color(0xFFBDFFB8)
            override val tertiaryDark = Color(0xFF7AD5DB)
            override val onTertiaryDark = Color(0xFF003739)
            override val tertiaryContainerDark = Color(0xFF4CA9AF)
            override val onTertiaryContainerDark = Color(0xFF003A3D)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F150E)
            override val onBackgroundDark = Color(0xFFDEE4D9)
            override val surfaceDark = Color(0xFF0F150E)
            override val onSurfaceDark = Color(0xFFDEE4D9)
            override val surfaceVariantDark = Color(0xFF3F4A3C)
            override val onSurfaceVariantDark = Color(0xFFBECAB9)
            override val outlineDark = Color(0xFF899484)
            override val outlineVariantDark = Color(0xFF3F4A3C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDark = Color(0xFF2C322A)
            override val inversePrimaryDark = Color(0xFF006E1C)
            override val surfaceDimDark = Color(0xFF0F150E)
            override val surfaceBrightDark = Color(0xFF353B33)
            override val surfaceContainerLowestDark = Color(0xFF0A1009)
            override val surfaceContainerLowDark = Color(0xFF171D16)
            override val surfaceContainerDark = Color(0xFF1B211A)
            override val surfaceContainerHighDark = Color(0xFF262C24)
            override val surfaceContainerHighestDark = Color(0xFF30362E)
            override val primaryDarkMediumContrast = Color(0xFF8EF38B)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D06)
            override val primaryContainerDarkMediumContrast = Color(0xFF4CAF50)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000F01)
            override val secondaryDarkMediumContrast = Color(0xFFA4EEA1)
            override val onSecondaryDarkMediumContrast = Color(0xFF002D08)
            override val secondaryContainerDarkMediumContrast = Color(0xFF5AA05B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF90EBF1)
            override val onTertiaryDarkMediumContrast = Color(0xFF002B2D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF4CA9AF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000F10)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F150E)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4D9)
            override val surfaceDarkMediumContrast = Color(0xFF0F150E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD4E0CE)
            override val outlineDarkMediumContrast = Color(0xFFAAB5A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF889484)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262C24)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005413)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40463E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF242922)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E342C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F37)
            override val primaryDarkHighContrast = Color(0xFFC5FFBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF74D873)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F01)
            override val secondaryDarkHighContrast = Color(0xFFC4FFBE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF8BD489)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F01)
            override val tertiaryDarkHighContrast = Color(0xFFBEFBFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF76D1D7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000E0F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F150E)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4D9)
            override val surfaceDarkHighContrast = Color(0xFF0F150E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE8F4E1)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC6B5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005413)
            override val surfaceDimDarkHighContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5249)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211A)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C322A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D35)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424840)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF006E1C)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF4CAF50)
            override val onPrimaryContainerLight = Color(0xFF003C0B)
            override val secondaryLight = Color(0xFF196124)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF357A3A)
            override val onSecondaryContainerLight = Color(0xFFBDFFB8)
            override val tertiaryLight = Color(0xFF46664C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDBFFDD)
            override val onTertiaryContainerLight = Color(0xFF58785C)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FBEF)
            override val onBackgroundLight = Color(0xFF171D16)
            override val surfaceLight = Color(0xFFF5FBEF)
            override val onSurfaceLight = Color(0xFF171D16)
            override val surfaceVariantLight = Color(0xFFDAE6D4)
            override val onSurfaceVariantLight = Color(0xFF3F4A3C)
            override val outlineLight = Color(0xFF6F7A6B)
            override val outlineVariantLight = Color(0xFFBECAB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C322A)
            override val inverseOnSurfaceLight = Color(0xFFEDF3E7)
            override val inversePrimaryLight = Color(0xFF78DC77)
            override val surfaceDimLight = Color(0xFFD6DCD0)
            override val surfaceBrightLight = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F6EA)
            override val surfaceContainerLight = Color(0xFFEAF0E4)
            override val surfaceContainerHighLight = Color(0xFFE4EADE)
            override val surfaceContainerHighestLight = Color(0xFFDEE4D9)
            override val primaryLightMediumContrast = Color(0xFF00400C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF117E26)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF00400F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF357A3A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF1F3C25)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF557559)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightMediumContrast = Color(0xFF171D16)
            override val surfaceLightMediumContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D130C)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F392C)
            override val outlineLightMediumContrast = Color(0xFF4B5548)
            override val outlineVariantLightMediumContrast = Color(0xFF657061)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF3E7)
            override val inversePrimaryLightMediumContrast = Color(0xFF78DC77)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F6EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4EADE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DFD3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED4C8)
            override val primaryLightHighContrast = Color(0xFF003509)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005614)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00340B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF09551A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF14321C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF325037)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightHighContrast = Color(0xFF171D16)
            override val surfaceLightHighContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252F23)
            override val outlineVariantLightHighContrast = Color(0xFF414C3F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF78DC77)
            override val surfaceDimLightHighContrast = Color(0xFFB5BBB0)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF3E7)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4D9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8BD)
            override val primaryDark = Color(0xFF78DC77)
            override val onPrimaryDark = Color(0xFF00390A)
            override val primaryContainerDark = Color(0xFF4CAF50)
            override val onPrimaryContainerDark = Color(0xFF003C0B)
            override val secondaryDark = Color(0xFF8FD88C)
            override val onSecondaryDark = Color(0xFF00390D)
            override val secondaryContainerDark = Color(0xFF357A3A)
            override val onSecondaryContainerDark = Color(0xFFBDFFB8)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF193620)
            override val tertiaryContainerDark = Color(0xFFC8ECCA)
            override val onTertiaryContainerDark = Color(0xFF4C6C51)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F150E)
            override val onBackgroundDark = Color(0xFFDEE4D9)
            override val surfaceDark = Color(0xFF0F150E)
            override val onSurfaceDark = Color(0xFFDEE4D9)
            override val surfaceVariantDark = Color(0xFF3F4A3C)
            override val onSurfaceVariantDark = Color(0xFFBECAB9)
            override val outlineDark = Color(0xFF899484)
            override val outlineVariantDark = Color(0xFF3F4A3C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDark = Color(0xFF2C322A)
            override val inversePrimaryDark = Color(0xFF006E1C)
            override val surfaceDimDark = Color(0xFF0F150E)
            override val surfaceBrightDark = Color(0xFF353B33)
            override val surfaceContainerLowestDark = Color(0xFF0A1009)
            override val surfaceContainerLowDark = Color(0xFF171D16)
            override val surfaceContainerDark = Color(0xFF1B211A)
            override val surfaceContainerHighDark = Color(0xFF262C24)
            override val surfaceContainerHighestDark = Color(0xFF30362E)
            override val primaryDarkMediumContrast = Color(0xFF8EF38B)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D06)
            override val primaryContainerDarkMediumContrast = Color(0xFF4CAF50)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000F01)
            override val secondaryDarkMediumContrast = Color(0xFFA4EEA1)
            override val onSecondaryDarkMediumContrast = Color(0xFF002D08)
            override val secondaryContainerDarkMediumContrast = Color(0xFF5AA05B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF193620)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC8ECCA)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF304F36)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F150E)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4D9)
            override val surfaceDarkMediumContrast = Color(0xFF0F150E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD4E0CE)
            override val outlineDarkMediumContrast = Color(0xFFAAB5A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF889484)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262C24)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005413)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40463E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF242922)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E342C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F37)
            override val primaryDarkHighContrast = Color(0xFFC5FFBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF74D873)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F01)
            override val secondaryDarkHighContrast = Color(0xFFC4FFBE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF8BD489)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F01)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC8ECCA)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF12301A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F150E)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4D9)
            override val surfaceDarkHighContrast = Color(0xFF0F150E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE8F4E1)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC6B5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005413)
            override val surfaceDimDarkHighContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5249)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211A)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C322A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D35)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424840)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006E1C)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF4CAF50)
            override val onPrimaryContainerLight = Color(0xFF003C0B)
            override val secondaryLight = Color(0xFF903836)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFAF4F4C)
            override val onSecondaryContainerLight = Color(0xFFFFECEA)
            override val tertiaryLight = Color(0xFF5D2120)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF7A3735)
            override val onTertiaryContainerLight = Color(0xFFFFA49F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FBEF)
            override val onBackgroundLight = Color(0xFF171D16)
            override val surfaceLight = Color(0xFFF5FBEF)
            override val onSurfaceLight = Color(0xFF171D16)
            override val surfaceVariantLight = Color(0xFFDAE6D4)
            override val onSurfaceVariantLight = Color(0xFF3F4A3C)
            override val outlineLight = Color(0xFF6F7A6B)
            override val outlineVariantLight = Color(0xFFBECAB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C322A)
            override val inverseOnSurfaceLight = Color(0xFFEDF3E7)
            override val inversePrimaryLight = Color(0xFF78DC77)
            override val surfaceDimLight = Color(0xFFD6DCD0)
            override val surfaceBrightLight = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F6EA)
            override val surfaceContainerLight = Color(0xFFEAF0E4)
            override val surfaceContainerHighLight = Color(0xFFE4EADE)
            override val surfaceContainerHighestLight = Color(0xFFDEE4D9)
            override val primaryLightMediumContrast = Color(0xFF00400C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF117E26)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF67191A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFAF4F4C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5D2120)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7A3735)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFE2DF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightMediumContrast = Color(0xFF171D16)
            override val surfaceLightMediumContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D130C)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F392C)
            override val outlineLightMediumContrast = Color(0xFF4B5548)
            override val outlineVariantLightMediumContrast = Color(0xFF657061)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF3E7)
            override val inversePrimaryLightMediumContrast = Color(0xFF78DC77)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F6EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4EADE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DFD3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED4C8)
            override val primaryLightHighContrast = Color(0xFF003509)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005614)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF590F12)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF812C2B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF521818)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF773533)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightHighContrast = Color(0xFF171D16)
            override val surfaceLightHighContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252F23)
            override val outlineVariantLightHighContrast = Color(0xFF414C3F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF78DC77)
            override val surfaceDimLightHighContrast = Color(0xFFB5BBB0)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF3E7)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4D9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8BD)
            override val primaryDark = Color(0xFF78DC77)
            override val onPrimaryDark = Color(0xFF00390A)
            override val primaryContainerDark = Color(0xFF4CAF50)
            override val onPrimaryContainerDark = Color(0xFF003C0B)
            override val secondaryDark = Color(0xFFFFB3AF)
            override val onSecondaryDark = Color(0xFF5F1315)
            override val secondaryContainerDark = Color(0xFFAF4F4C)
            override val onSecondaryContainerDark = Color(0xFFFFECEA)
            override val tertiaryDark = Color(0xFFFFB3AF)
            override val onTertiaryDark = Color(0xFF571D1C)
            override val tertiaryContainerDark = Color(0xFF7A3735)
            override val onTertiaryContainerDark = Color(0xFFFFA49F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F150E)
            override val onBackgroundDark = Color(0xFFDEE4D9)
            override val surfaceDark = Color(0xFF0F150E)
            override val onSurfaceDark = Color(0xFFDEE4D9)
            override val surfaceVariantDark = Color(0xFF3F4A3C)
            override val onSurfaceVariantDark = Color(0xFFBECAB9)
            override val outlineDark = Color(0xFF899484)
            override val outlineVariantDark = Color(0xFF3F4A3C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDark = Color(0xFF2C322A)
            override val inversePrimaryDark = Color(0xFF006E1C)
            override val surfaceDimDark = Color(0xFF0F150E)
            override val surfaceBrightDark = Color(0xFF353B33)
            override val surfaceContainerLowestDark = Color(0xFF0A1009)
            override val surfaceContainerLowDark = Color(0xFF171D16)
            override val surfaceContainerDark = Color(0xFF1B211A)
            override val surfaceContainerHighDark = Color(0xFF262C24)
            override val surfaceContainerHighestDark = Color(0xFF30362E)
            override val primaryDarkMediumContrast = Color(0xFF8EF38B)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D06)
            override val primaryContainerDarkMediumContrast = Color(0xFF4CAF50)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000F01)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CE)
            override val onSecondaryDarkMediumContrast = Color(0xFF50070C)
            override val secondaryContainerDarkMediumContrast = Color(0xFFDB716D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD2CF)
            override val onTertiaryDarkMediumContrast = Color(0xFF491212)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCD7A76)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F150E)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4D9)
            override val surfaceDarkMediumContrast = Color(0xFF0F150E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD4E0CE)
            override val outlineDarkMediumContrast = Color(0xFFAAB5A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF889484)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262C24)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005413)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40463E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF242922)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E342C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F37)
            override val primaryDarkHighContrast = Color(0xFFC5FFBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF74D873)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F01)
            override val secondaryDarkHighContrast = Color(0xFFFFECEA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220001)
            override val tertiaryDarkHighContrast = Color(0xFFFFECEA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAEA9)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF220002)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F150E)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4D9)
            override val surfaceDarkHighContrast = Color(0xFF0F150E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE8F4E1)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC6B5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005413)
            override val surfaceDimDarkHighContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5249)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211A)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C322A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D35)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424840)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006E1C)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF4CAF50)
            override val onPrimaryContainerLight = Color(0xFF003C0B)
            override val secondaryLight = Color(0xFF196124)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF357A3A)
            override val onSecondaryContainerLight = Color(0xFFBDFFB8)
            override val tertiaryLight = Color(0xFF783294)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF934CAF)
            override val onTertiaryContainerLight = Color(0xFFFCE4FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FBEF)
            override val onBackgroundLight = Color(0xFF171D16)
            override val surfaceLight = Color(0xFFF5FBEF)
            override val onSurfaceLight = Color(0xFF171D16)
            override val surfaceVariantLight = Color(0xFFDAE6D4)
            override val onSurfaceVariantLight = Color(0xFF3F4A3C)
            override val outlineLight = Color(0xFF6F7A6B)
            override val outlineVariantLight = Color(0xFFBECAB9)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C322A)
            override val inverseOnSurfaceLight = Color(0xFFEDF3E7)
            override val inversePrimaryLight = Color(0xFF78DC77)
            override val surfaceDimLight = Color(0xFFD6DCD0)
            override val surfaceBrightLight = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F6EA)
            override val surfaceContainerLight = Color(0xFFEAF0E4)
            override val surfaceContainerHighLight = Color(0xFFE4EADE)
            override val surfaceContainerHighestLight = Color(0xFFDEE4D9)
            override val primaryLightMediumContrast = Color(0xFF00400C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF117E26)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF00400F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF357A3A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF590D76)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF934CAF)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightMediumContrast = Color(0xFF171D16)
            override val surfaceLightMediumContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D130C)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F392C)
            override val outlineLightMediumContrast = Color(0xFF4B5548)
            override val outlineVariantLightMediumContrast = Color(0xFF657061)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF3E7)
            override val inversePrimaryLightMediumContrast = Color(0xFF78DC77)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F6EA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4EADE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DFD3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED4C8)
            override val primaryLightHighContrast = Color(0xFF003509)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF005614)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00340B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF09551A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4C0068)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6E288A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FBEF)
            override val onBackgroundLightHighContrast = Color(0xFF171D16)
            override val surfaceLightHighContrast = Color(0xFFF5FBEF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE6D4)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252F23)
            override val outlineVariantLightHighContrast = Color(0xFF414C3F)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C322A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF78DC77)
            override val surfaceDimLightHighContrast = Color(0xFFB5BBB0)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FBEF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF3E7)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4D9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8BD)
            override val primaryDark = Color(0xFF78DC77)
            override val onPrimaryDark = Color(0xFF00390A)
            override val primaryContainerDark = Color(0xFF4CAF50)
            override val onPrimaryContainerDark = Color(0xFF003C0B)
            override val secondaryDark = Color(0xFF8FD88C)
            override val onSecondaryDark = Color(0xFF00390D)
            override val secondaryContainerDark = Color(0xFF357A3A)
            override val onSecondaryContainerDark = Color(0xFFBDFFB8)
            override val tertiaryDark = Color(0xFFECB1FF)
            override val onTertiaryDark = Color(0xFF52026F)
            override val tertiaryContainerDark = Color(0xFF934CAF)
            override val onTertiaryContainerDark = Color(0xFFFCE4FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F150E)
            override val onBackgroundDark = Color(0xFFDEE4D9)
            override val surfaceDark = Color(0xFF0F150E)
            override val onSurfaceDark = Color(0xFFDEE4D9)
            override val surfaceVariantDark = Color(0xFF3F4A3C)
            override val onSurfaceVariantDark = Color(0xFFBECAB9)
            override val outlineDark = Color(0xFF899484)
            override val outlineVariantDark = Color(0xFF3F4A3C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDark = Color(0xFF2C322A)
            override val inversePrimaryDark = Color(0xFF006E1C)
            override val surfaceDimDark = Color(0xFF0F150E)
            override val surfaceBrightDark = Color(0xFF353B33)
            override val surfaceContainerLowestDark = Color(0xFF0A1009)
            override val surfaceContainerLowDark = Color(0xFF171D16)
            override val surfaceContainerDark = Color(0xFF1B211A)
            override val surfaceContainerHighDark = Color(0xFF262C24)
            override val surfaceContainerHighestDark = Color(0xFF30362E)
            override val primaryDarkMediumContrast = Color(0xFF8EF38B)
            override val onPrimaryDarkMediumContrast = Color(0xFF002D06)
            override val primaryContainerDarkMediumContrast = Color(0xFF4CAF50)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000F01)
            override val secondaryDarkMediumContrast = Color(0xFFA4EEA1)
            override val onSecondaryDarkMediumContrast = Color(0xFF002D08)
            override val secondaryContainerDarkMediumContrast = Color(0xFF5AA05B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF6D0FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF42005B)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBD73D9)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F150E)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4D9)
            override val surfaceDarkMediumContrast = Color(0xFF0F150E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD4E0CE)
            override val outlineDarkMediumContrast = Color(0xFFAAB5A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF889484)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262C24)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005413)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40463E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040904)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF242922)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E342C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F37)
            override val primaryDarkHighContrast = Color(0xFFC5FFBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF74D873)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F01)
            override val secondaryDarkHighContrast = Color(0xFFC4FFBE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF8BD489)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F01)
            override val tertiaryDarkHighContrast = Color(0xFFFEEAFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFEAACFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF190025)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F150E)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4D9)
            override val surfaceDarkHighContrast = Color(0xFF0F150E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3F4A3C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE8F4E1)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC6B5)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4D9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005413)
            override val surfaceDimDarkHighContrast = Color(0xFF0F150E)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5249)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211A)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C322A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D35)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424840)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("green", "Green")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}