package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500DeepOrange : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFFB02F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFF5722)
            override val onPrimaryContainerLight = Color(0xFF541200)
            override val secondaryLight = Color(0xFF922800)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB33F18)
            override val onSecondaryContainerLight = Color(0xFFFFDDD4)
            override val tertiaryLight = Color(0xFF8E4F00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFF9722)
            override val onTertiaryContainerLight = Color(0xFF673700)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF271813)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF271813)
            override val surfaceVariantLight = Color(0xFFFFDBD1)
            override val onSurfaceVariantLight = Color(0xFF5B4039)
            override val outlineLight = Color(0xFF907067)
            override val outlineVariantLight = Color(0xFFE4BEB4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE8)
            override val inversePrimaryLight = Color(0xFFFFB5A0)
            override val surfaceDimLight = Color(0xFFF1D4CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1ED)
            override val surfaceContainerLight = Color(0xFFFFE9E4)
            override val surfaceContainerHighLight = Color(0xFFFFE2DA)
            override val surfaceContainerHighestLight = Color(0xFFFADCD4)
            override val primaryLightMediumContrast = Color(0xFF691800)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFCA3700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF681A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFB33F18)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF542C00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA35B00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF271813)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF493029)
            override val outlineLightMediumContrast = Color(0xFF684C44)
            override val outlineVariantLightMediumContrast = Color(0xFF85665D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE8)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1ED)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D7CF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CBC4)
            override val primaryLightHighContrast = Color(0xFF581300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF8B2300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF571400)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF892500)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF452400)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6F3D00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF271813)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2620)
            override val outlineVariantLightHighContrast = Color(0xFF5E433B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightHighContrast = Color(0xFFCEB3AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE8)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCEC7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0B9)
            override val primaryDark = Color(0xFFFFB5A0)
            override val onPrimaryDark = Color(0xFF5F1500)
            override val primaryContainerDark = Color(0xFFFF5722)
            override val onPrimaryContainerDark = Color(0xFF541200)
            override val secondaryDark = Color(0xFFFFB59F)
            override val onSecondaryDark = Color(0xFF5E1600)
            override val secondaryContainerDark = Color(0xFFB33F18)
            override val onSecondaryContainerDark = Color(0xFFFFDDD4)
            override val tertiaryDark = Color(0xFFFFBF86)
            override val onTertiaryDark = Color(0xFF4B2700)
            override val tertiaryContainerDark = Color(0xFFFF9722)
            override val onTertiaryContainerDark = Color(0xFF673700)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E100C)
            override val onBackgroundDark = Color(0xFFFADCD4)
            override val surfaceDark = Color(0xFF1E100C)
            override val onSurfaceDark = Color(0xFFFADCD4)
            override val surfaceVariantDark = Color(0xFF5B4039)
            override val onSurfaceVariantDark = Color(0xFFE4BEB4)
            override val outlineDark = Color(0xFFAB8980)
            override val outlineVariantDark = Color(0xFF5B4039)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD4)
            override val inverseOnSurfaceDark = Color(0xFF3E2C27)
            override val inversePrimaryDark = Color(0xFFB02F00)
            override val surfaceDimDark = Color(0xFF1E100C)
            override val surfaceBrightDark = Color(0xFF483530)
            override val surfaceContainerLowestDark = Color(0xFF180B07)
            override val surfaceContainerLowDark = Color(0xFF271813)
            override val surfaceContainerDark = Color(0xFF2C1C17)
            override val surfaceContainerHighDark = Color(0xFF372621)
            override val surfaceContainerHighestDark = Color(0xFF43302B)
            override val primaryDarkMediumContrast = Color(0xFFFFD2C6)
            override val onPrimaryDarkMediumContrast = Color(0xFF4C0F00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5722)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF4C1000)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEC683E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B2)
            override val onTertiaryDarkMediumContrast = Color(0xFF3C1E00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFF9722)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3B1E00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E100C)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD4)
            override val surfaceDarkMediumContrast = Color(0xFF1E100C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD4C9)
            override val outlineDarkMediumContrast = Color(0xFFCEAAA0)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB897F)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372621)
            override val inversePrimaryDarkMediumContrast = Color(0xFF892200)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF35241F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF402E29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4C3934)
            override val primaryDarkHighContrast = Color(0xFFFFECE7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAF98)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val secondaryDarkHighContrast = Color(0xFFFFECE7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAF97)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDE0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB26B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF160800)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E100C)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD4)
            override val surfaceDarkHighContrast = Color(0xFF1E100C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE7)
            override val outlineVariantDarkHighContrast = Color(0xFFE0BAB0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF892200)
            override val surfaceDimDarkHighContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1C17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3732)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF56423D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFFB02F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFF5722)
            override val onPrimaryContainerLight = Color(0xFF541200)
            override val secondaryLight = Color(0xFF922800)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB33F18)
            override val onSecondaryContainerLight = Color(0xFFFFDDD4)
            override val tertiaryLight = Color(0xFF76574D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD6C8)
            override val onTertiaryContainerLight = Color(0xFF7A5B50)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF271813)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF271813)
            override val surfaceVariantLight = Color(0xFFFFDBD1)
            override val onSurfaceVariantLight = Color(0xFF5B4039)
            override val outlineLight = Color(0xFF907067)
            override val outlineVariantLight = Color(0xFFE4BEB4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE8)
            override val inversePrimaryLight = Color(0xFFFFB5A0)
            override val surfaceDimLight = Color(0xFFF1D4CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1ED)
            override val surfaceContainerLight = Color(0xFFFFE9E4)
            override val surfaceContainerHighLight = Color(0xFFFFE2DA)
            override val surfaceContainerHighestLight = Color(0xFFFADCD4)
            override val primaryLightMediumContrast = Color(0xFF691800)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFCA3700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF681A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFB33F18)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF493027)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF86665B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF271813)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF493029)
            override val outlineLightMediumContrast = Color(0xFF684C44)
            override val outlineVariantLightMediumContrast = Color(0xFF85665D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE8)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1ED)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D7CF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CBC4)
            override val primaryLightHighContrast = Color(0xFF581300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF8B2300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF571400)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF892500)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3E261D)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5F4339)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF271813)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2620)
            override val outlineVariantLightHighContrast = Color(0xFF5E433B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightHighContrast = Color(0xFFCEB3AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE8)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCEC7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0B9)
            override val primaryDark = Color(0xFFFFB5A0)
            override val onPrimaryDark = Color(0xFF5F1500)
            override val primaryContainerDark = Color(0xFFFF5722)
            override val onPrimaryContainerDark = Color(0xFF541200)
            override val secondaryDark = Color(0xFFFFB59F)
            override val onSecondaryDark = Color(0xFF5E1600)
            override val secondaryContainerDark = Color(0xFFB33F18)
            override val onSecondaryContainerDark = Color(0xFFFFDDD4)
            override val tertiaryDark = Color(0xFFFFFAF9)
            override val onTertiaryDark = Color(0xFF432A21)
            override val tertiaryContainerDark = Color(0xFFFFD6C8)
            override val onTertiaryContainerDark = Color(0xFF7A5B50)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E100C)
            override val onBackgroundDark = Color(0xFFFADCD4)
            override val surfaceDark = Color(0xFF1E100C)
            override val onSurfaceDark = Color(0xFFFADCD4)
            override val surfaceVariantDark = Color(0xFF5B4039)
            override val onSurfaceVariantDark = Color(0xFFE4BEB4)
            override val outlineDark = Color(0xFFAB8980)
            override val outlineVariantDark = Color(0xFF5B4039)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD4)
            override val inverseOnSurfaceDark = Color(0xFF3E2C27)
            override val inversePrimaryDark = Color(0xFFB02F00)
            override val surfaceDimDark = Color(0xFF1E100C)
            override val surfaceBrightDark = Color(0xFF483530)
            override val surfaceContainerLowestDark = Color(0xFF180B07)
            override val surfaceContainerLowDark = Color(0xFF271813)
            override val surfaceContainerDark = Color(0xFF2C1C17)
            override val surfaceContainerHighDark = Color(0xFF372621)
            override val surfaceContainerHighestDark = Color(0xFF43302B)
            override val primaryDarkMediumContrast = Color(0xFFFFD2C6)
            override val onPrimaryDarkMediumContrast = Color(0xFF4C0F00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5722)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF4C1000)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEC683E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFAF9)
            override val onTertiaryDarkMediumContrast = Color(0xFF432A21)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFFD6C8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF5B3F35)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E100C)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD4)
            override val surfaceDarkMediumContrast = Color(0xFF1E100C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD4C9)
            override val outlineDarkMediumContrast = Color(0xFFCEAAA0)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB897F)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372621)
            override val inversePrimaryDarkMediumContrast = Color(0xFF892200)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF35241F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF402E29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4C3934)
            override val primaryDarkHighContrast = Color(0xFFFFECE7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAF98)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val secondaryDarkHighContrast = Color(0xFFFFECE7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAF97)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val tertiaryDarkHighContrast = Color(0xFFFFFAF9)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFD6C8)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF392219)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E100C)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD4)
            override val surfaceDarkHighContrast = Color(0xFF1E100C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE7)
            override val outlineVariantDarkHighContrast = Color(0xFFE0BAB0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF892200)
            override val surfaceDimDarkHighContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1C17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3732)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF56423D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB02F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFF5722)
            override val onPrimaryContainerLight = Color(0xFF541200)
            override val secondaryLight = Color(0xFF006C4B)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF22FFB8)
            override val onSecondaryContainerLight = Color(0xFF007250)
            override val tertiaryLight = Color(0xFF006C4C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF18B281)
            override val onTertiaryContainerLight = Color(0xFF003D29)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF271813)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF271813)
            override val surfaceVariantLight = Color(0xFFFFDBD1)
            override val onSurfaceVariantLight = Color(0xFF5B4039)
            override val outlineLight = Color(0xFF907067)
            override val outlineVariantLight = Color(0xFFE4BEB4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE8)
            override val inversePrimaryLight = Color(0xFFFFB5A0)
            override val surfaceDimLight = Color(0xFFF1D4CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1ED)
            override val surfaceContainerLight = Color(0xFFFFE9E4)
            override val surfaceContainerHighLight = Color(0xFFFFE2DA)
            override val surfaceContainerHighestLight = Color(0xFFFADCD4)
            override val primaryLightMediumContrast = Color(0xFF691800)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFCA3700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003F2A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007D57)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003F2B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF007D58)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF271813)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF493029)
            override val outlineLightMediumContrast = Color(0xFF684C44)
            override val outlineVariantLightMediumContrast = Color(0xFF85665D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE8)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1ED)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D7CF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CBC4)
            override val primaryLightHighContrast = Color(0xFF581300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF8B2300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003322)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00543A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003322)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF00543A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF271813)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2620)
            override val outlineVariantLightHighContrast = Color(0xFF5E433B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightHighContrast = Color(0xFFCEB3AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE8)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCEC7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0B9)
            override val primaryDark = Color(0xFFFFB5A0)
            override val onPrimaryDark = Color(0xFF5F1500)
            override val primaryContainerDark = Color(0xFFFF5722)
            override val onPrimaryContainerDark = Color(0xFF541200)
            override val secondaryDark = Color(0xFFFBFFFA)
            override val onSecondaryDark = Color(0xFF003825)
            override val secondaryContainerDark = Color(0xFF22FFB8)
            override val onSecondaryContainerDark = Color(0xFF007250)
            override val tertiaryDark = Color(0xFF57DDA9)
            override val onTertiaryDark = Color(0xFF003826)
            override val tertiaryContainerDark = Color(0xFF18B281)
            override val onTertiaryContainerDark = Color(0xFF003D29)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E100C)
            override val onBackgroundDark = Color(0xFFFADCD4)
            override val surfaceDark = Color(0xFF1E100C)
            override val onSurfaceDark = Color(0xFFFADCD4)
            override val surfaceVariantDark = Color(0xFF5B4039)
            override val onSurfaceVariantDark = Color(0xFFE4BEB4)
            override val outlineDark = Color(0xFFAB8980)
            override val outlineVariantDark = Color(0xFF5B4039)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD4)
            override val inverseOnSurfaceDark = Color(0xFF3E2C27)
            override val inversePrimaryDark = Color(0xFFB02F00)
            override val surfaceDimDark = Color(0xFF1E100C)
            override val surfaceBrightDark = Color(0xFF483530)
            override val surfaceContainerLowestDark = Color(0xFF180B07)
            override val surfaceContainerLowDark = Color(0xFF271813)
            override val surfaceContainerDark = Color(0xFF2C1C17)
            override val surfaceContainerHighDark = Color(0xFF372621)
            override val surfaceContainerHighestDark = Color(0xFF43302B)
            override val primaryDarkMediumContrast = Color(0xFFFFD2C6)
            override val onPrimaryDarkMediumContrast = Color(0xFF4C0F00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5722)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFBFFFA)
            override val onSecondaryDarkMediumContrast = Color(0xFF003825)
            override val secondaryContainerDarkMediumContrast = Color(0xFF22FFB8)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF005238)
            override val tertiaryDarkMediumContrast = Color(0xFF6FF4BE)
            override val onTertiaryDarkMediumContrast = Color(0xFF002C1D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF18B281)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF00130A)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E100C)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD4)
            override val surfaceDarkMediumContrast = Color(0xFF1E100C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD4C9)
            override val outlineDarkMediumContrast = Color(0xFFCEAAA0)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB897F)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372621)
            override val inversePrimaryDarkMediumContrast = Color(0xFF892200)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF35241F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF402E29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4C3934)
            override val primaryDarkHighContrast = Color(0xFFFFECE7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAF98)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val secondaryDarkHighContrast = Color(0xFFFBFFFA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF22FFB8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF00301F)
            override val tertiaryDarkHighContrast = Color(0xFFB9FFDC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF52D9A5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000E07)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E100C)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD4)
            override val surfaceDarkHighContrast = Color(0xFF1E100C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE7)
            override val outlineVariantDarkHighContrast = Color(0xFFE0BAB0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF892200)
            override val surfaceDimDarkHighContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1C17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3732)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF56423D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB02F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFF5722)
            override val onPrimaryContainerLight = Color(0xFF541200)
            override val secondaryLight = Color(0xFF922800)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB33F18)
            override val onSecondaryContainerLight = Color(0xFFFFDDD4)
            override val tertiaryLight = Color(0xFF4E6700)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC7FF22)
            override val onTertiaryContainerLight = Color(0xFF587400)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF271813)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF271813)
            override val surfaceVariantLight = Color(0xFFFFDBD1)
            override val onSurfaceVariantLight = Color(0xFF5B4039)
            override val outlineLight = Color(0xFF907067)
            override val outlineVariantLight = Color(0xFFE4BEB4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2C27)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE8)
            override val inversePrimaryLight = Color(0xFFFFB5A0)
            override val surfaceDimLight = Color(0xFFF1D4CC)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1ED)
            override val surfaceContainerLight = Color(0xFFFFE9E4)
            override val surfaceContainerHighLight = Color(0xFFFFE2DA)
            override val surfaceContainerHighestLight = Color(0xFFFADCD4)
            override val primaryLightMediumContrast = Color(0xFF691800)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFCA3700)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF681A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFB33F18)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2C3B00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5A7700)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF271813)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0E09)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF493029)
            override val outlineLightMediumContrast = Color(0xFF684C44)
            override val outlineVariantLightMediumContrast = Color(0xFF85665D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE8)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightMediumContrast = Color(0xFFDDC0B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1ED)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE2DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D7CF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CBC4)
            override val primaryLightHighContrast = Color(0xFF581300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF8B2300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF571400)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF892500)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF233100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3C5000)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF271813)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFDBD1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2620)
            override val outlineVariantLightHighContrast = Color(0xFF5E433B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2C27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB5A0)
            override val surfaceDimLightHighContrast = Color(0xFFCEB3AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE8)
            override val surfaceContainerLightHighContrast = Color(0xFFFADCD4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCEC7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDC0B9)
            override val primaryDark = Color(0xFFFFB5A0)
            override val onPrimaryDark = Color(0xFF5F1500)
            override val primaryContainerDark = Color(0xFFFF5722)
            override val onPrimaryContainerDark = Color(0xFF541200)
            override val secondaryDark = Color(0xFFFFB59F)
            override val onSecondaryDark = Color(0xFF5E1600)
            override val secondaryContainerDark = Color(0xFFB33F18)
            override val onSecondaryContainerDark = Color(0xFFFFDDD4)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF273500)
            override val tertiaryContainerDark = Color(0xFFBEF50F)
            override val onTertiaryContainerDark = Color(0xFF536D00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1E100C)
            override val onBackgroundDark = Color(0xFFFADCD4)
            override val surfaceDark = Color(0xFF1E100C)
            override val onSurfaceDark = Color(0xFFFADCD4)
            override val surfaceVariantDark = Color(0xFF5B4039)
            override val onSurfaceVariantDark = Color(0xFFE4BEB4)
            override val outlineDark = Color(0xFFAB8980)
            override val outlineVariantDark = Color(0xFF5B4039)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADCD4)
            override val inverseOnSurfaceDark = Color(0xFF3E2C27)
            override val inversePrimaryDark = Color(0xFFB02F00)
            override val surfaceDimDark = Color(0xFF1E100C)
            override val surfaceBrightDark = Color(0xFF483530)
            override val surfaceContainerLowestDark = Color(0xFF180B07)
            override val surfaceContainerLowDark = Color(0xFF271813)
            override val surfaceContainerDark = Color(0xFF2C1C17)
            override val surfaceContainerHighDark = Color(0xFF372621)
            override val surfaceContainerHighestDark = Color(0xFF43302B)
            override val primaryDarkMediumContrast = Color(0xFFFFD2C6)
            override val onPrimaryDarkMediumContrast = Color(0xFF4C0F00)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF5722)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF4C1000)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEC683E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF273500)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBEF50F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3B4F00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1E100C)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADCD4)
            override val surfaceDarkMediumContrast = Color(0xFF1E100C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD4C9)
            override val outlineDarkMediumContrast = Color(0xFFCEAAA0)
            override val outlineVariantDarkMediumContrast = Color(0xFFAB897F)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372621)
            override val inversePrimaryDarkMediumContrast = Color(0xFF892200)
            override val surfaceDimDarkMediumContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF54403B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF100503)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF291A15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF35241F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF402E29)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4C3934)
            override val primaryDarkHighContrast = Color(0xFFFFECE7)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFAF98)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val secondaryDarkHighContrast = Color(0xFFFFECE7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAF97)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1E0300)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBEF50F)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF212E00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1E100C)
            override val onBackgroundDarkHighContrast = Color(0xFFFADCD4)
            override val surfaceDarkHighContrast = Color(0xFF1E100C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B4039)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE7)
            override val outlineVariantDarkHighContrast = Color(0xFFE0BAB0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADCD4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF892200)
            override val surfaceDimDarkHighContrast = Color(0xFF1E100C)
            override val surfaceBrightDarkHighContrast = Color(0xFF604B46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1C17)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2C27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3732)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF56423D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("deep_orange", "Deep Orange")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}