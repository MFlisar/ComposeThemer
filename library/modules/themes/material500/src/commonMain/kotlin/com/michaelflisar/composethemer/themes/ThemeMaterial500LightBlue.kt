package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500LightBlue : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("light_blue", "Light Blue")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF006493)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF03A9F4)
            override val onPrimaryContainerLight = Color(0xFF003A58)
            override val secondaryLight = Color(0xFF00647C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF007F9C)
            override val onSecondaryContainerLight = Color(0xFFFAFDFF)
            override val tertiaryLight = Color(0xFF0023BD)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF0F36F3)
            override val onTertiaryContainerLight = Color(0xFFC1C7FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF6F9FF)
            override val onBackgroundLight = Color(0xFF171C21)
            override val surfaceLight = Color(0xFFF6F9FF)
            override val onSurfaceLight = Color(0xFF171C21)
            override val surfaceVariantLight = Color(0xFFDAE4EF)
            override val onSurfaceVariantLight = Color(0xFF3E4851)
            override val outlineLight = Color(0xFF6E7882)
            override val outlineVariantLight = Color(0xFFBEC8D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3136)
            override val inverseOnSurfaceLight = Color(0xFFEDF1F8)
            override val inversePrimaryLight = Color(0xFF8DCDFF)
            override val surfaceDimLight = Color(0xFFD6DAE1)
            override val surfaceBrightLight = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F4FA)
            override val surfaceContainerLight = Color(0xFFEAEEF5)
            override val surfaceContainerHighLight = Color(0xFFE4E8EF)
            override val surfaceContainerHighestLight = Color(0xFFDEE3E9)
            override val primaryLightMediumContrast = Color(0xFF003A57)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0074A9)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003C4B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007792)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF001EA6)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF0F36F3)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFCF9FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF171C21)
            override val surfaceLightMediumContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1216)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2E3740)
            override val outlineLightMediumContrast = Color(0xFF4A545D)
            override val outlineVariantLightMediumContrast = Color(0xFF646E78)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF1F8)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C7CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F4FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E8EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DDE4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD2D8)
            override val primaryLightHighContrast = Color(0xFF002F48)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004E73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005063)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF00188C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF002AD9)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF171C21)
            override val surfaceLightHighContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF242D35)
            override val outlineVariantLightHighContrast = Color(0xFF404A53)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightHighContrast = Color(0xFFB4B9BF)
            override val surfaceBrightLightHighContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF1F8)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE3E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D5DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C7CD)
            override val primaryDark = Color(0xFF8DCDFF)
            override val onPrimaryDark = Color(0xFF00344F)
            override val primaryContainerDark = Color(0xFF03A9F4)
            override val onPrimaryContainerDark = Color(0xFF003A58)
            override val secondaryDark = Color(0xFF6FD3F5)
            override val onSecondaryDark = Color(0xFF003543)
            override val secondaryContainerDark = Color(0xFF2D9CBC)
            override val onSecondaryContainerDark = Color(0xFF001921)
            override val tertiaryDark = Color(0xFFBCC3FF)
            override val onTertiaryDark = Color(0xFF001A97)
            override val tertiaryContainerDark = Color(0xFF0F36F3)
            override val onTertiaryContainerDark = Color(0xFFC1C7FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1418)
            override val onBackgroundDark = Color(0xFFDEE3E9)
            override val surfaceDark = Color(0xFF0F1418)
            override val onSurfaceDark = Color(0xFFDEE3E9)
            override val surfaceVariantDark = Color(0xFF3E4851)
            override val onSurfaceVariantDark = Color(0xFFBEC8D2)
            override val outlineDark = Color(0xFF88929C)
            override val outlineVariantDark = Color(0xFF3E4851)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDark = Color(0xFF2C3136)
            override val inversePrimaryDark = Color(0xFF006493)
            override val surfaceDimDark = Color(0xFF0F1418)
            override val surfaceBrightDark = Color(0xFF353A3F)
            override val surfaceContainerLowestDark = Color(0xFF0A0F13)
            override val surfaceContainerLowDark = Color(0xFF171C21)
            override val surfaceContainerDark = Color(0xFF1B2025)
            override val surfaceContainerHighDark = Color(0xFF252B2F)
            override val surfaceContainerHighestDark = Color(0xFF30353A)
            override val primaryDarkMediumContrast = Color(0xFFBDE1FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF00283F)
            override val primaryContainerDarkMediumContrast = Color(0xFF03A9F4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF001523)
            override val secondaryDarkMediumContrast = Color(0xFFA4E6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A35)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2D9CBC)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00137A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7586FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1418)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE3E9)
            override val surfaceDarkMediumContrast = Color(0xFF0F1418)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD3DDE8)
            override val outlineDarkMediumContrast = Color(0xFFA9B3BD)
            override val outlineVariantDarkMediumContrast = Color(0xFF87919B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004D72)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40454A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191E23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23282D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3338)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393E43)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF83CAFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D17)
            override val secondaryDarkHighContrast = Color(0xFFDBF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF6BCFF1)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB7BEFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000434)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1418)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE3E9)
            override val surfaceDarkHighContrast = Color(0xFF0F1418)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE7F1FC)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC4CE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004D72)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5156)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B2025)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3136)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373C41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF42474D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF006493)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF03A9F4)
            override val onPrimaryContainerLight = Color(0xFF003A58)
            override val secondaryLight = Color(0xFF00647C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF007F9C)
            override val onSecondaryContainerLight = Color(0xFFFAFDFF)
            override val tertiaryLight = Color(0xFF336570)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC0F3FF)
            override val onTertiaryContainerLight = Color(0xFF3F707B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF6F9FF)
            override val onBackgroundLight = Color(0xFF171C21)
            override val surfaceLight = Color(0xFFF6F9FF)
            override val onSurfaceLight = Color(0xFF171C21)
            override val surfaceVariantLight = Color(0xFFDAE4EF)
            override val onSurfaceVariantLight = Color(0xFF3E4851)
            override val outlineLight = Color(0xFF6E7882)
            override val outlineVariantLight = Color(0xFFBEC8D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3136)
            override val inverseOnSurfaceLight = Color(0xFFEDF1F8)
            override val inversePrimaryLight = Color(0xFF8DCDFF)
            override val surfaceDimLight = Color(0xFFD6DAE1)
            override val surfaceBrightLight = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F4FA)
            override val surfaceContainerLight = Color(0xFFEAEEF5)
            override val surfaceContainerHighLight = Color(0xFFE4E8EF)
            override val surfaceContainerHighestLight = Color(0xFFDEE3E9)
            override val primaryLightMediumContrast = Color(0xFF003A57)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0074A9)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003C4B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007792)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003C46)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF43747F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF171C21)
            override val surfaceLightMediumContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1216)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2E3740)
            override val outlineLightMediumContrast = Color(0xFF4A545D)
            override val outlineVariantLightMediumContrast = Color(0xFF646E78)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF1F8)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C7CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F4FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E8EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DDE4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD2D8)
            override val primaryLightHighContrast = Color(0xFF002F48)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004E73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005063)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003139)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF1B505A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF171C21)
            override val surfaceLightHighContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF242D35)
            override val outlineVariantLightHighContrast = Color(0xFF404A53)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightHighContrast = Color(0xFFB4B9BF)
            override val surfaceBrightLightHighContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF1F8)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE3E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D5DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C7CD)
            override val primaryDark = Color(0xFF8DCDFF)
            override val onPrimaryDark = Color(0xFF00344F)
            override val primaryContainerDark = Color(0xFF03A9F4)
            override val onPrimaryContainerDark = Color(0xFF003A58)
            override val secondaryDark = Color(0xFF6FD3F5)
            override val onSecondaryDark = Color(0xFF003543)
            override val secondaryContainerDark = Color(0xFF2D9CBC)
            override val onSecondaryContainerDark = Color(0xFF001921)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF00363E)
            override val tertiaryContainerDark = Color(0xFFB8EBF7)
            override val onTertiaryContainerDark = Color(0xFF3A6B76)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1418)
            override val onBackgroundDark = Color(0xFFDEE3E9)
            override val surfaceDark = Color(0xFF0F1418)
            override val onSurfaceDark = Color(0xFFDEE3E9)
            override val surfaceVariantDark = Color(0xFF3E4851)
            override val onSurfaceVariantDark = Color(0xFFBEC8D2)
            override val outlineDark = Color(0xFF88929C)
            override val outlineVariantDark = Color(0xFF3E4851)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDark = Color(0xFF2C3136)
            override val inversePrimaryDark = Color(0xFF006493)
            override val surfaceDimDark = Color(0xFF0F1418)
            override val surfaceBrightDark = Color(0xFF353A3F)
            override val surfaceContainerLowestDark = Color(0xFF0A0F13)
            override val surfaceContainerLowDark = Color(0xFF171C21)
            override val surfaceContainerDark = Color(0xFF1B2025)
            override val surfaceContainerHighDark = Color(0xFF252B2F)
            override val surfaceContainerHighestDark = Color(0xFF30353A)
            override val primaryDarkMediumContrast = Color(0xFFBDE1FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF00283F)
            override val primaryContainerDarkMediumContrast = Color(0xFF03A9F4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF001523)
            override val secondaryDarkMediumContrast = Color(0xFFA4E6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A35)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2D9CBC)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00363E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB8EBF7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF194F58)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1418)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE3E9)
            override val surfaceDarkMediumContrast = Color(0xFF0F1418)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD3DDE8)
            override val outlineDarkMediumContrast = Color(0xFFA9B3BD)
            override val outlineVariantDarkMediumContrast = Color(0xFF87919B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004D72)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40454A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191E23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23282D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3338)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393E43)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF83CAFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D17)
            override val secondaryDarkHighContrast = Color(0xFFDBF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF6BCFF1)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB8EBF7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF002F37)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1418)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE3E9)
            override val surfaceDarkHighContrast = Color(0xFF0F1418)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE7F1FC)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC4CE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004D72)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5156)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B2025)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3136)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373C41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF42474D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006493)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF03A9F4)
            override val onPrimaryContainerLight = Color(0xFF003A58)
            override val secondaryLight = Color(0xFF9D4300)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFF36C03)
            override val onSecondaryContainerLight = Color(0xFF501E00)
            override val tertiaryLight = Color(0xFF853900)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFAA4C02)
            override val onTertiaryContainerLight = Color(0xFFFFE2D3)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF6F9FF)
            override val onBackgroundLight = Color(0xFF171C21)
            override val surfaceLight = Color(0xFFF6F9FF)
            override val onSurfaceLight = Color(0xFF171C21)
            override val surfaceVariantLight = Color(0xFFDAE4EF)
            override val onSurfaceVariantLight = Color(0xFF3E4851)
            override val outlineLight = Color(0xFF6E7882)
            override val outlineVariantLight = Color(0xFFBEC8D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3136)
            override val inverseOnSurfaceLight = Color(0xFFEDF1F8)
            override val inversePrimaryLight = Color(0xFF8DCDFF)
            override val surfaceDimLight = Color(0xFFD6DAE1)
            override val surfaceBrightLight = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F4FA)
            override val surfaceContainerLight = Color(0xFFEAEEF5)
            override val surfaceContainerHighLight = Color(0xFFE4E8EF)
            override val surfaceContainerHighestLight = Color(0xFFDEE3E9)
            override val primaryLightMediumContrast = Color(0xFF003A57)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0074A9)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5E2500)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFB54E00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5D2600)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFAA4C02)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF171C21)
            override val surfaceLightMediumContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1216)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2E3740)
            override val outlineLightMediumContrast = Color(0xFF4A545D)
            override val outlineVariantLightMediumContrast = Color(0xFF646E78)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF1F8)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C7CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F4FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E8EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DDE4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD2D8)
            override val primaryLightHighContrast = Color(0xFF002F48)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004E73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4E1E00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF7C3300)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4D1E00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7A3400)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF171C21)
            override val surfaceLightHighContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF242D35)
            override val outlineVariantLightHighContrast = Color(0xFF404A53)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightHighContrast = Color(0xFFB4B9BF)
            override val surfaceBrightLightHighContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF1F8)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE3E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D5DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C7CD)
            override val primaryDark = Color(0xFF8DCDFF)
            override val onPrimaryDark = Color(0xFF00344F)
            override val primaryContainerDark = Color(0xFF03A9F4)
            override val onPrimaryContainerDark = Color(0xFF003A58)
            override val secondaryDark = Color(0xFFFFB690)
            override val onSecondaryDark = Color(0xFF552100)
            override val secondaryContainerDark = Color(0xFFF36C03)
            override val onSecondaryContainerDark = Color(0xFF501E00)
            override val tertiaryDark = Color(0xFFFFB68E)
            override val onTertiaryDark = Color(0xFF542200)
            override val tertiaryContainerDark = Color(0xFFAA4C02)
            override val onTertiaryContainerDark = Color(0xFFFFE2D3)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1418)
            override val onBackgroundDark = Color(0xFFDEE3E9)
            override val surfaceDark = Color(0xFF0F1418)
            override val onSurfaceDark = Color(0xFFDEE3E9)
            override val surfaceVariantDark = Color(0xFF3E4851)
            override val onSurfaceVariantDark = Color(0xFFBEC8D2)
            override val outlineDark = Color(0xFF88929C)
            override val outlineVariantDark = Color(0xFF3E4851)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDark = Color(0xFF2C3136)
            override val inversePrimaryDark = Color(0xFF006493)
            override val surfaceDimDark = Color(0xFF0F1418)
            override val surfaceBrightDark = Color(0xFF353A3F)
            override val surfaceContainerLowestDark = Color(0xFF0A0F13)
            override val surfaceContainerLowDark = Color(0xFF171C21)
            override val surfaceContainerDark = Color(0xFF1B2025)
            override val surfaceContainerHighDark = Color(0xFF252B2F)
            override val surfaceContainerHighestDark = Color(0xFF30353A)
            override val primaryDarkMediumContrast = Color(0xFFBDE1FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF00283F)
            override val primaryContainerDarkMediumContrast = Color(0xFF03A9F4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF001523)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3BE)
            override val onSecondaryDarkMediumContrast = Color(0xFF441900)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF36C03)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3BD)
            override val onTertiaryDarkMediumContrast = Color(0xFF431900)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDF732E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1418)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE3E9)
            override val surfaceDarkMediumContrast = Color(0xFF0F1418)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD3DDE8)
            override val outlineDarkMediumContrast = Color(0xFFA9B3BD)
            override val outlineVariantDarkMediumContrast = Color(0xFF87919B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004D72)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40454A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191E23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23282D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3338)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393E43)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF83CAFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D17)
            override val secondaryDarkHighContrast = Color(0xFFFFECE4)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB087)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1A0600)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE4)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB185)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF190600)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1418)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE3E9)
            override val surfaceDarkHighContrast = Color(0xFF0F1418)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE7F1FC)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC4CE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004D72)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5156)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B2025)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3136)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373C41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF42474D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006493)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF03A9F4)
            override val onPrimaryContainerLight = Color(0xFF003A58)
            override val secondaryLight = Color(0xFF00647C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF007F9C)
            override val onSecondaryContainerLight = Color(0xFFFAFDFF)
            override val tertiaryLight = Color(0xFFB3006E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDF008B)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF6F9FF)
            override val onBackgroundLight = Color(0xFF171C21)
            override val surfaceLight = Color(0xFFF6F9FF)
            override val onSurfaceLight = Color(0xFF171C21)
            override val surfaceVariantLight = Color(0xFFDAE4EF)
            override val onSurfaceVariantLight = Color(0xFF3E4851)
            override val outlineLight = Color(0xFF6E7882)
            override val outlineVariantLight = Color(0xFFBEC8D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3136)
            override val inverseOnSurfaceLight = Color(0xFFEDF1F8)
            override val inversePrimaryLight = Color(0xFF8DCDFF)
            override val surfaceDimLight = Color(0xFFD6DAE1)
            override val surfaceBrightLight = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF0F4FA)
            override val surfaceContainerLight = Color(0xFFEAEEF5)
            override val surfaceContainerHighLight = Color(0xFFE4E8EF)
            override val surfaceContainerHighestLight = Color(0xFFDEE3E9)
            override val primaryLightMediumContrast = Color(0xFF003A57)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0074A9)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003C4B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007792)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF6E0042)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFD20082)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF171C21)
            override val surfaceLightMediumContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1216)
            override val surfaceVariantLightMediumContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2E3740)
            override val outlineLightMediumContrast = Color(0xFF4A545D)
            override val outlineVariantLightMediumContrast = Color(0xFF646E78)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF1F8)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C7CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF0F4FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E8EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DDE4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD2D8)
            override val primaryLightHighContrast = Color(0xFF002F48)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004E73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005063)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF5C0036)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF900058)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF6F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF171C21)
            override val surfaceLightHighContrast = Color(0xFFF6F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDAE4EF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF242D35)
            override val outlineVariantLightHighContrast = Color(0xFF404A53)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3136)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DCDFF)
            override val surfaceDimLightHighContrast = Color(0xFFB4B9BF)
            override val surfaceBrightLightHighContrast = Color(0xFFF6F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF1F8)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE3E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D5DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C7CD)
            override val primaryDark = Color(0xFF8DCDFF)
            override val onPrimaryDark = Color(0xFF00344F)
            override val primaryContainerDark = Color(0xFF03A9F4)
            override val onPrimaryContainerDark = Color(0xFF003A58)
            override val secondaryDark = Color(0xFF6FD3F5)
            override val onSecondaryDark = Color(0xFF003543)
            override val secondaryContainerDark = Color(0xFF2D9CBC)
            override val onSecondaryContainerDark = Color(0xFF001921)
            override val tertiaryDark = Color(0xFFFFB0CF)
            override val onTertiaryDark = Color(0xFF63003B)
            override val tertiaryContainerDark = Color(0xFFFF44A7)
            override val onTertiaryContainerDark = Color(0xFF34001D)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1418)
            override val onBackgroundDark = Color(0xFFDEE3E9)
            override val surfaceDark = Color(0xFF0F1418)
            override val onSurfaceDark = Color(0xFFDEE3E9)
            override val surfaceVariantDark = Color(0xFF3E4851)
            override val onSurfaceVariantDark = Color(0xFFBEC8D2)
            override val outlineDark = Color(0xFF88929C)
            override val outlineVariantDark = Color(0xFF3E4851)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDark = Color(0xFF2C3136)
            override val inversePrimaryDark = Color(0xFF006493)
            override val surfaceDimDark = Color(0xFF0F1418)
            override val surfaceBrightDark = Color(0xFF353A3F)
            override val surfaceContainerLowestDark = Color(0xFF0A0F13)
            override val surfaceContainerLowDark = Color(0xFF171C21)
            override val surfaceContainerDark = Color(0xFF1B2025)
            override val surfaceContainerHighDark = Color(0xFF252B2F)
            override val surfaceContainerHighestDark = Color(0xFF30353A)
            override val primaryDarkMediumContrast = Color(0xFFBDE1FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF00283F)
            override val primaryContainerDarkMediumContrast = Color(0xFF03A9F4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF001523)
            override val secondaryDarkMediumContrast = Color(0xFFA4E6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A35)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2D9CBC)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD0E0)
            override val onTertiaryDarkMediumContrast = Color(0xFF50002F)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFF44A7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1418)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE3E9)
            override val surfaceDarkMediumContrast = Color(0xFF0F1418)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD3DDE8)
            override val outlineDarkMediumContrast = Color(0xFFA9B3BD)
            override val outlineVariantDarkMediumContrast = Color(0xFF87919B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004D72)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkMediumContrast = Color(0xFF40454A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191E23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23282D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3338)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393E43)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF83CAFF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D17)
            override val secondaryDarkHighContrast = Color(0xFFDBF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF6BCFF1)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAACC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF200010)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1418)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE3E9)
            override val surfaceDarkHighContrast = Color(0xFF0F1418)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3E4851)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE7F1FC)
            override val outlineVariantDarkHighContrast = Color(0xFFBAC4CE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE3E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004D72)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1418)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5156)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B2025)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3136)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373C41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF42474D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}