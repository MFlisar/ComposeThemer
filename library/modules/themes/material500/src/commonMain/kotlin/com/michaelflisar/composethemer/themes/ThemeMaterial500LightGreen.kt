package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500LightGreen : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF3E6A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8BC34A)
            override val onPrimaryContainerLight = Color(0xFF2D4E00)
            override val secondaryLight = Color(0xFF486513)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF607E2B)
            override val onSecondaryContainerLight = Color(0xFFFAFFE8)
            override val tertiaryLight = Color(0xFF006E11)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF4EC34A)
            override val onTertiaryContainerLight = Color(0xFF004B08)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBEC)
            override val onBackgroundLight = Color(0xFF191D14)
            override val surfaceLight = Color(0xFFF8FBEC)
            override val onSurfaceLight = Color(0xFF191D14)
            override val surfaceVariantLight = Color(0xFFDEE5CF)
            override val onSurfaceVariantLight = Color(0xFF424939)
            override val outlineLight = Color(0xFF737A67)
            override val outlineVariantLight = Color(0xFFC2C9B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E3228)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E4)
            override val inversePrimaryLight = Color(0xFF9ED75B)
            override val surfaceDimLight = Color(0xFFD9DBCE)
            override val surfaceBrightLight = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5E7)
            override val surfaceContainerLight = Color(0xFFEDEFE1)
            override val surfaceContainerHighLight = Color(0xFFE7EADC)
            override val surfaceContainerHighestLight = Color(0xFFE1E4D6)
            override val primaryLightMediumContrast = Color(0xFF223D00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF497A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF273C00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF587624)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF004006)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF007F15)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightMediumContrast = Color(0xFF191D14)
            override val surfaceLightMediumContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightMediumContrast = Color(0xFF0F120A)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323829)
            override val outlineLightMediumContrast = Color(0xFF4E5544)
            override val outlineVariantLightMediumContrast = Color(0xFF69705E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E4)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ED75B)
            override val surfaceDimLightMediumContrast = Color(0xFFC5C8BA)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFE7EADC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED0)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C5)
            override val primaryLightHighContrast = Color(0xFF1B3200)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF305200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF203100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF365100)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003504)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF00560B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightHighContrast = Color(0xFF191D14)
            override val surfaceLightHighContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E20)
            override val outlineVariantLightHighContrast = Color(0xFF454B3B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ED75B)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAAD)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E4)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4D6)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD3D6C8)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC5C8BA)
            override val primaryDark = Color(0xFFA5DF63)
            override val onPrimaryDark = Color(0xFF1E3700)
            override val primaryContainerDark = Color(0xFF8BC34A)
            override val onPrimaryContainerDark = Color(0xFF2D4E00)
            override val secondaryDark = Color(0xFFB0D275)
            override val onSecondaryDark = Color(0xFF233600)
            override val secondaryContainerDark = Color(0xFF7B9B45)
            override val onSecondaryContainerDark = Color(0xFF0D1700)
            override val tertiaryDark = Color(0xFF6BE063)
            override val onTertiaryDark = Color(0xFF003A05)
            override val tertiaryContainerDark = Color(0xFF4EC34A)
            override val onTertiaryContainerDark = Color(0xFF004B08)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11150C)
            override val onBackgroundDark = Color(0xFFE1E4D6)
            override val surfaceDark = Color(0xFF11150C)
            override val onSurfaceDark = Color(0xFFE1E4D6)
            override val surfaceVariantDark = Color(0xFF424939)
            override val onSurfaceVariantDark = Color(0xFFC2C9B4)
            override val outlineDark = Color(0xFF8C9380)
            override val outlineVariantDark = Color(0xFF424939)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDark = Color(0xFF2E3228)
            override val inversePrimaryDark = Color(0xFF3E6A00)
            override val surfaceDimDark = Color(0xFF11150C)
            override val surfaceBrightDark = Color(0xFF373A31)
            override val surfaceContainerLowestDark = Color(0xFF0C0F08)
            override val surfaceContainerLowDark = Color(0xFF191D14)
            override val surfaceContainerDark = Color(0xFF1D2118)
            override val surfaceContainerHighDark = Color(0xFF282B22)
            override val surfaceContainerHighestDark = Color(0xFF32362C)
            override val primaryDarkMediumContrast = Color(0xFFB3EE6F)
            override val onPrimaryDarkMediumContrast = Color(0xFF162B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF8BC34A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF182D00)
            override val secondaryDarkMediumContrast = Color(0xFFC5E988)
            override val onSecondaryDarkMediumContrast = Color(0xFF1A2A00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7B9B45)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF80F675)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D03)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF4EC34A)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF002802)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11150C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4D6)
            override val surfaceDarkMediumContrast = Color(0xFF11150C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DFC9)
            override val outlineDarkMediumContrast = Color(0xFFAEB5A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9380)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF282B22)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F5100)
            override val surfaceDimDarkMediumContrast = Color(0xFF11150C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F16)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252920)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F35)
            override val primaryDarkHighContrast = Color(0xFFCFFF97)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF9AD358)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF050E00)
            override val secondaryDarkHighContrast = Color(0xFFD8FD9A)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFACCE71)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF060D00)
            override val tertiaryDarkHighContrast = Color(0xFFC6FFB8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF66DB5E)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F01)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11150C)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4D6)
            override val surfaceDarkHighContrast = Color(0xFF11150C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF3DD)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC5B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F5100)
            override val surfaceDimDarkHighContrast = Color(0xFF11150C)
            override val surfaceBrightDarkHighContrast = Color(0xFF4E5147)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D2118)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E3228)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44483E)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF3E6A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8BC34A)
            override val onPrimaryContainerLight = Color(0xFF2D4E00)
            override val secondaryLight = Color(0xFF486513)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF607E2B)
            override val onSecondaryContainerLight = Color(0xFFFAFFE8)
            override val tertiaryLight = Color(0xFF566344)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF0FFD7)
            override val onTertiaryContainerLight = Color(0xFF697757)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBEC)
            override val onBackgroundLight = Color(0xFF191D14)
            override val surfaceLight = Color(0xFFF8FBEC)
            override val onSurfaceLight = Color(0xFF191D14)
            override val surfaceVariantLight = Color(0xFFDEE5CF)
            override val onSurfaceVariantLight = Color(0xFF424939)
            override val outlineLight = Color(0xFF737A67)
            override val outlineVariantLight = Color(0xFFC2C9B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E3228)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E4)
            override val inversePrimaryLight = Color(0xFF9ED75B)
            override val surfaceDimLight = Color(0xFFD9DBCE)
            override val surfaceBrightLight = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5E7)
            override val surfaceContainerLight = Color(0xFFEDEFE1)
            override val surfaceContainerHighLight = Color(0xFFE7EADC)
            override val surfaceContainerHighestLight = Color(0xFFE1E4D6)
            override val primaryLightMediumContrast = Color(0xFF223D00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF497A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF273C00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF587624)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2E3A1F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF647252)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightMediumContrast = Color(0xFF191D14)
            override val surfaceLightMediumContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightMediumContrast = Color(0xFF0F120A)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323829)
            override val outlineLightMediumContrast = Color(0xFF4E5544)
            override val outlineVariantLightMediumContrast = Color(0xFF69705E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E4)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ED75B)
            override val surfaceDimLightMediumContrast = Color(0xFFC5C8BA)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFE7EADC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED0)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C5)
            override val primaryLightHighContrast = Color(0xFF1B3200)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF305200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF203100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF365100)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF243016)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF414D30)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightHighContrast = Color(0xFF191D14)
            override val surfaceLightHighContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E20)
            override val outlineVariantLightHighContrast = Color(0xFF454B3B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ED75B)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAAD)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E4)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4D6)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD3D6C8)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC5C8BA)
            override val primaryDark = Color(0xFFA5DF63)
            override val onPrimaryDark = Color(0xFF1E3700)
            override val primaryContainerDark = Color(0xFF8BC34A)
            override val onPrimaryContainerDark = Color(0xFF2D4E00)
            override val secondaryDark = Color(0xFFB0D275)
            override val onSecondaryDark = Color(0xFF233600)
            override val secondaryContainerDark = Color(0xFF7B9B45)
            override val onSecondaryContainerDark = Color(0xFF0D1700)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF28341A)
            override val tertiaryContainerDark = Color(0xFFD9E8C1)
            override val onTertiaryContainerDark = Color(0xFF5C694A)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11150C)
            override val onBackgroundDark = Color(0xFFE1E4D6)
            override val surfaceDark = Color(0xFF11150C)
            override val onSurfaceDark = Color(0xFFE1E4D6)
            override val surfaceVariantDark = Color(0xFF424939)
            override val onSurfaceVariantDark = Color(0xFFC2C9B4)
            override val outlineDark = Color(0xFF8C9380)
            override val outlineVariantDark = Color(0xFF424939)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDark = Color(0xFF2E3228)
            override val inversePrimaryDark = Color(0xFF3E6A00)
            override val surfaceDimDark = Color(0xFF11150C)
            override val surfaceBrightDark = Color(0xFF373A31)
            override val surfaceContainerLowestDark = Color(0xFF0C0F08)
            override val surfaceContainerLowDark = Color(0xFF191D14)
            override val surfaceContainerDark = Color(0xFF1D2118)
            override val surfaceContainerHighDark = Color(0xFF282B22)
            override val surfaceContainerHighestDark = Color(0xFF32362C)
            override val primaryDarkMediumContrast = Color(0xFFB3EE6F)
            override val onPrimaryDarkMediumContrast = Color(0xFF162B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF8BC34A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF182D00)
            override val secondaryDarkMediumContrast = Color(0xFFC5E988)
            override val onSecondaryDarkMediumContrast = Color(0xFF1A2A00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7B9B45)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF28341A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD9E8C1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3F4C2F)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11150C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4D6)
            override val surfaceDarkMediumContrast = Color(0xFF11150C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DFC9)
            override val outlineDarkMediumContrast = Color(0xFFAEB5A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9380)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF282B22)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F5100)
            override val surfaceDimDarkMediumContrast = Color(0xFF11150C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F16)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252920)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F35)
            override val primaryDarkHighContrast = Color(0xFFCFFF97)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF9AD358)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF050E00)
            override val secondaryDarkHighContrast = Color(0xFFD8FD9A)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFACCE71)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF060D00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD9E8C1)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF222E14)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11150C)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4D6)
            override val surfaceDarkHighContrast = Color(0xFF11150C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF3DD)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC5B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F5100)
            override val surfaceDimDarkHighContrast = Color(0xFF11150C)
            override val surfaceBrightDarkHighContrast = Color(0xFF4E5147)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D2118)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E3228)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44483E)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF3E6A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8BC34A)
            override val onPrimaryContainerLight = Color(0xFF2D4E00)
            override val secondaryLight = Color(0xFF9E2988)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFBD45A2)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF6C1B5D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF883476)
            override val onTertiaryContainerLight = Color(0xFFFFB2E7)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBEC)
            override val onBackgroundLight = Color(0xFF191D14)
            override val surfaceLight = Color(0xFFF8FBEC)
            override val onSurfaceLight = Color(0xFF191D14)
            override val surfaceVariantLight = Color(0xFFDEE5CF)
            override val onSurfaceVariantLight = Color(0xFF424939)
            override val outlineLight = Color(0xFF737A67)
            override val outlineVariantLight = Color(0xFFC2C9B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E3228)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E4)
            override val inversePrimaryLight = Color(0xFF9ED75B)
            override val surfaceDimLight = Color(0xFFD9DBCE)
            override val surfaceBrightLight = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5E7)
            override val surfaceContainerLight = Color(0xFFEDEFE1)
            override val surfaceContainerHighLight = Color(0xFFE7EADC)
            override val surfaceContainerHighestLight = Color(0xFFE1E4D6)
            override val primaryLightMediumContrast = Color(0xFF223D00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF497A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF690059)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFB33C9A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF631155)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF883476)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFF6F8)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightMediumContrast = Color(0xFF191D14)
            override val surfaceLightMediumContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightMediumContrast = Color(0xFF0F120A)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323829)
            override val outlineLightMediumContrast = Color(0xFF4E5544)
            override val outlineVariantLightMediumContrast = Color(0xFF69705E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E4)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ED75B)
            override val surfaceDimLightMediumContrast = Color(0xFFC5C8BA)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFE7EADC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED0)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C5)
            override val primaryLightHighContrast = Color(0xFF1B3200)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF305200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF57004A)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF870E73)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF56024A)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7A286A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightHighContrast = Color(0xFF191D14)
            override val surfaceLightHighContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E20)
            override val outlineVariantLightHighContrast = Color(0xFF454B3B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ED75B)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAAD)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E4)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4D6)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD3D6C8)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC5C8BA)
            override val primaryDark = Color(0xFFA5DF63)
            override val onPrimaryDark = Color(0xFF1E3700)
            override val primaryContainerDark = Color(0xFF8BC34A)
            override val onPrimaryContainerDark = Color(0xFF2D4E00)
            override val secondaryDark = Color(0xFFFFADE4)
            override val onSecondaryDark = Color(0xFF5E0050)
            override val secondaryContainerDark = Color(0xFFDF62C1)
            override val onSecondaryContainerDark = Color(0xFF1F0019)
            override val tertiaryDark = Color(0xFFFFADE6)
            override val onTertiaryDark = Color(0xFF5B084F)
            override val tertiaryContainerDark = Color(0xFF883476)
            override val onTertiaryContainerDark = Color(0xFFFFB2E7)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11150C)
            override val onBackgroundDark = Color(0xFFE1E4D6)
            override val surfaceDark = Color(0xFF11150C)
            override val onSurfaceDark = Color(0xFFE1E4D6)
            override val surfaceVariantDark = Color(0xFF424939)
            override val onSurfaceVariantDark = Color(0xFFC2C9B4)
            override val outlineDark = Color(0xFF8C9380)
            override val outlineVariantDark = Color(0xFF424939)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDark = Color(0xFF2E3228)
            override val inversePrimaryDark = Color(0xFF3E6A00)
            override val surfaceDimDark = Color(0xFF11150C)
            override val surfaceBrightDark = Color(0xFF373A31)
            override val surfaceContainerLowestDark = Color(0xFF0C0F08)
            override val surfaceContainerLowDark = Color(0xFF191D14)
            override val surfaceContainerDark = Color(0xFF1D2118)
            override val surfaceContainerHighDark = Color(0xFF282B22)
            override val surfaceContainerHighestDark = Color(0xFF32362C)
            override val primaryDarkMediumContrast = Color(0xFFB3EE6F)
            override val onPrimaryDarkMediumContrast = Color(0xFF162B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF8BC34A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF182D00)
            override val secondaryDarkMediumContrast = Color(0xFFFFCEEC)
            override val onSecondaryDarkMediumContrast = Color(0xFF4C0040)
            override val secondaryContainerDarkMediumContrast = Color(0xFFDF62C1)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCEED)
            override val onTertiaryDarkMediumContrast = Color(0xFF4C0041)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCE70B6)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11150C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4D6)
            override val surfaceDarkMediumContrast = Color(0xFF11150C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DFC9)
            override val outlineDarkMediumContrast = Color(0xFFAEB5A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9380)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF282B22)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F5100)
            override val surfaceDimDarkMediumContrast = Color(0xFF11150C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F16)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252920)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F35)
            override val primaryDarkHighContrast = Color(0xFFCFFF97)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF9AD358)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF050E00)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF4)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFA6E3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1F0019)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA6E5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1E0018)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11150C)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4D6)
            override val surfaceDarkHighContrast = Color(0xFF11150C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF3DD)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC5B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F5100)
            override val surfaceDimDarkHighContrast = Color(0xFF11150C)
            override val surfaceBrightDarkHighContrast = Color(0xFF4E5147)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D2118)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E3228)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44483E)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF3E6A00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF8BC34A)
            override val onPrimaryContainerLight = Color(0xFF2D4E00)
            override val secondaryLight = Color(0xFF486513)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF607E2B)
            override val onSecondaryContainerLight = Color(0xFFFAFFE8)
            override val tertiaryLight = Color(0xFF5631A9)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF6F4CC3)
            override val onTertiaryContainerLight = Color(0xFFE7DAFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBEC)
            override val onBackgroundLight = Color(0xFF191D14)
            override val surfaceLight = Color(0xFFF8FBEC)
            override val onSurfaceLight = Color(0xFF191D14)
            override val surfaceVariantLight = Color(0xFFDEE5CF)
            override val onSurfaceVariantLight = Color(0xFF424939)
            override val outlineLight = Color(0xFF737A67)
            override val outlineVariantLight = Color(0xFFC2C9B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E3228)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E4)
            override val inversePrimaryLight = Color(0xFF9ED75B)
            override val surfaceDimLight = Color(0xFFD9DBCE)
            override val surfaceBrightLight = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5E7)
            override val surfaceContainerLight = Color(0xFFEDEFE1)
            override val surfaceContainerHighLight = Color(0xFFE7EADC)
            override val surfaceContainerHighestLight = Color(0xFFE1E4D6)
            override val primaryLightMediumContrast = Color(0xFF223D00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF497A00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF273C00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF587624)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF411393)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6F4CC3)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightMediumContrast = Color(0xFF191D14)
            override val surfaceLightMediumContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightMediumContrast = Color(0xFF0F120A)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF323829)
            override val outlineLightMediumContrast = Color(0xFF4E5544)
            override val outlineVariantLightMediumContrast = Color(0xFF69705E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E4)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ED75B)
            override val surfaceDimLightMediumContrast = Color(0xFFC5C8BA)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFE7EADC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED0)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C5)
            override val primaryLightHighContrast = Color(0xFF1B3200)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF305200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF203100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF365100)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF360087)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF542EA7)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBEC)
            override val onBackgroundLightHighContrast = Color(0xFF191D14)
            override val surfaceLightHighContrast = Color(0xFFF8FBEC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE5CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E20)
            override val outlineVariantLightHighContrast = Color(0xFF454B3B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E3228)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ED75B)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAAD)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBEC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E4)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4D6)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD3D6C8)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC5C8BA)
            override val primaryDark = Color(0xFFA5DF63)
            override val onPrimaryDark = Color(0xFF1E3700)
            override val primaryContainerDark = Color(0xFF8BC34A)
            override val onPrimaryContainerDark = Color(0xFF2D4E00)
            override val secondaryDark = Color(0xFFB0D275)
            override val onSecondaryDark = Color(0xFF233600)
            override val secondaryContainerDark = Color(0xFF7B9B45)
            override val onSecondaryContainerDark = Color(0xFF0D1700)
            override val tertiaryDark = Color(0xFFD0BCFF)
            override val onTertiaryDark = Color(0xFF3B068E)
            override val tertiaryContainerDark = Color(0xFF6F4CC3)
            override val onTertiaryContainerDark = Color(0xFFE7DAFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11150C)
            override val onBackgroundDark = Color(0xFFE1E4D6)
            override val surfaceDark = Color(0xFF11150C)
            override val onSurfaceDark = Color(0xFFE1E4D6)
            override val surfaceVariantDark = Color(0xFF424939)
            override val onSurfaceVariantDark = Color(0xFFC2C9B4)
            override val outlineDark = Color(0xFF8C9380)
            override val outlineVariantDark = Color(0xFF424939)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDark = Color(0xFF2E3228)
            override val inversePrimaryDark = Color(0xFF3E6A00)
            override val surfaceDimDark = Color(0xFF11150C)
            override val surfaceBrightDark = Color(0xFF373A31)
            override val surfaceContainerLowestDark = Color(0xFF0C0F08)
            override val surfaceContainerLowDark = Color(0xFF191D14)
            override val surfaceContainerDark = Color(0xFF1D2118)
            override val surfaceContainerHighDark = Color(0xFF282B22)
            override val surfaceContainerHighestDark = Color(0xFF32362C)
            override val primaryDarkMediumContrast = Color(0xFFB3EE6F)
            override val onPrimaryDarkMediumContrast = Color(0xFF162B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF8BC34A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF182D00)
            override val secondaryDarkMediumContrast = Color(0xFFC5E988)
            override val onSecondaryDarkMediumContrast = Color(0xFF1A2A00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7B9B45)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2E0076)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9E7BF5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11150C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4D6)
            override val surfaceDarkMediumContrast = Color(0xFF11150C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DFC9)
            override val outlineDarkMediumContrast = Color(0xFFAEB5A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9380)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF282B22)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F5100)
            override val surfaceDimDarkMediumContrast = Color(0xFF11150C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F16)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252920)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F35)
            override val primaryDarkHighContrast = Color(0xFFCFFF97)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF9AD358)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF050E00)
            override val secondaryDarkHighContrast = Color(0xFFD8FD9A)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFACCE71)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF060D00)
            override val tertiaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCCB8FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0F0032)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11150C)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4D6)
            override val surfaceDarkHighContrast = Color(0xFF11150C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF424939)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF3DD)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC5B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4D6)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F5100)
            override val surfaceDimDarkHighContrast = Color(0xFF11150C)
            override val surfaceBrightDarkHighContrast = Color(0xFF4E5147)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D2118)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E3228)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF44483E)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("light_green", "Light Green")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}