package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Purple : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("purple", "Purple")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF7E0092)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF9C27B0)
            override val onPrimaryContainerLight = Color(0xFFFFCAFF)
            override val secondaryLight = Color(0xFF34005E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D1B7B)
            override val onSecondaryContainerLight = Color(0xFFBD8AEE)
            override val tertiaryLight = Color(0xFF900084)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB027A0)
            override val onTertiaryContainerLight = Color(0xFFFFDAF2)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FA)
            override val onBackgroundLight = Color(0xFF211921)
            override val surfaceLight = Color(0xFFFFF7FA)
            override val onSurfaceLight = Color(0xFF211921)
            override val surfaceVariantLight = Color(0xFFF2DCEE)
            override val onSurfaceVariantLight = Color(0xFF514250)
            override val outlineLight = Color(0xFF837281)
            override val outlineVariantLight = Color(0xFFD5C1D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372D36)
            override val inverseOnSurfaceLight = Color(0xFFFCECF8)
            override val inversePrimaryLight = Color(0xFFF9ABFF)
            override val surfaceDimLight = Color(0xFFE5D6E1)
            override val surfaceBrightLight = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFEFFB)
            override val surfaceContainerLight = Color(0xFFF9E9F5)
            override val surfaceContainerHighLight = Color(0xFFF3E4EF)
            override val surfaceContainerHighestLight = Color(0xFFEEDEEA)
            override val primaryLightMediumContrast = Color(0xFF600071)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9C27B0)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF34005E)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D1B7B)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFDEB9FF)
            override val tertiaryLightMediumContrast = Color(0xFF67005E)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFB027A0)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightMediumContrast = Color(0xFF211921)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightMediumContrast = Color(0xFF160F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F323F)
            override val outlineLightMediumContrast = Color(0xFF5D4E5C)
            override val outlineVariantLightMediumContrast = Color(0xFF786877)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFCECF8)
            override val inversePrimaryLightMediumContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C2CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFEFFB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E4EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8D8E4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCCDD9)
            override val primaryLightHighContrast = Color(0xFF50005E)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF7F0094)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF34005E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4D1B7B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFEF4FF)
            override val tertiaryLightHighContrast = Color(0xFF56004E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF88007C)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightHighContrast = Color(0xFF211921)
            override val surfaceLightHighContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF352835)
            override val outlineVariantLightHighContrast = Color(0xFF534553)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightHighContrast = Color(0xFFC3B5C0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFCECF8)
            override val surfaceContainerLightHighContrast = Color(0xFFEEDEEA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDFD0DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C2CE)
            override val primaryDark = Color(0xFFF9ABFF)
            override val onPrimaryDark = Color(0xFF570066)
            override val primaryContainerDark = Color(0xFF9C27B0)
            override val onPrimaryContainerDark = Color(0xFFFFCAFF)
            override val secondaryDark = Color(0xFFDDB8FF)
            override val onSecondaryDark = Color(0xFF461274)
            override val secondaryContainerDark = Color(0xFF4D1B7B)
            override val onSecondaryContainerDark = Color(0xFFBD8AEE)
            override val tertiaryDark = Color(0xFFFFACEA)
            override val onTertiaryDark = Color(0xFF5D0055)
            override val tertiaryContainerDark = Color(0xFFB027A0)
            override val onTertiaryContainerDark = Color(0xFFFFDAF2)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191119)
            override val onBackgroundDark = Color(0xFFEEDEEA)
            override val surfaceDark = Color(0xFF191119)
            override val onSurfaceDark = Color(0xFFEEDEEA)
            override val surfaceVariantDark = Color(0xFF514250)
            override val onSurfaceVariantDark = Color(0xFFD5C1D2)
            override val outlineDark = Color(0xFF9D8B9B)
            override val outlineVariantDark = Color(0xFF514250)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDark = Color(0xFF372D36)
            override val inversePrimaryDark = Color(0xFF9A25AE)
            override val surfaceDimDark = Color(0xFF191119)
            override val surfaceBrightDark = Color(0xFF40363F)
            override val surfaceContainerLowestDark = Color(0xFF130C13)
            override val surfaceContainerLowDark = Color(0xFF211921)
            override val surfaceContainerDark = Color(0xFF251D25)
            override val surfaceContainerHighDark = Color(0xFF302730)
            override val surfaceContainerHighestDark = Color(0xFF3B323B)
            override val primaryDarkMediumContrast = Color(0xFFFFCCFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF460052)
            override val primaryContainerDarkMediumContrast = Color(0xFFD560E6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A0068)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAC7BDD)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCEEF)
            override val onTertiaryDarkMediumContrast = Color(0xFF4B0044)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE458CF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191119)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEDEEA)
            override val surfaceDarkMediumContrast = Color(0xFF191119)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD6E8)
            override val outlineDarkMediumContrast = Color(0xFFC0ACBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8B9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302730)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7D0092)
            override val surfaceDimDarkMediumContrast = Color(0xFF191119)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B414B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C050C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231B23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E252E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF393038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B44)
            override val primaryDarkHighContrast = Color(0xFFFFEAFB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF8A5FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0021)
            override val secondaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDAB3FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF15002B)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAF6)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA5E9)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1D001A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191119)
            override val onBackgroundDarkHighContrast = Color(0xFFEEDEEA)
            override val surfaceDarkHighContrast = Color(0xFF191119)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEAFB)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BDCE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7D0092)
            override val surfaceDimDarkHighContrast = Color(0xFF191119)
            override val surfaceBrightDarkHighContrast = Color(0xFF574D56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251D25)
            override val surfaceContainerDarkHighContrast = Color(0xFF372D36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423841)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E444D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF7E0092)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF9C27B0)
            override val onPrimaryContainerLight = Color(0xFFFFCAFF)
            override val secondaryLight = Color(0xFF34005E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D1B7B)
            override val onSecondaryContainerLight = Color(0xFFBD8AEE)
            override val tertiaryLight = Color(0xFF6A5680)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE7CDFF)
            override val onTertiaryContainerLight = Color(0xFF69547F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FA)
            override val onBackgroundLight = Color(0xFF211921)
            override val surfaceLight = Color(0xFFFFF7FA)
            override val onSurfaceLight = Color(0xFF211921)
            override val surfaceVariantLight = Color(0xFFF2DCEE)
            override val onSurfaceVariantLight = Color(0xFF514250)
            override val outlineLight = Color(0xFF837281)
            override val outlineVariantLight = Color(0xFFD5C1D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372D36)
            override val inverseOnSurfaceLight = Color(0xFFFCECF8)
            override val inversePrimaryLight = Color(0xFFF9ABFF)
            override val surfaceDimLight = Color(0xFFE5D6E1)
            override val surfaceBrightLight = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFEFFB)
            override val surfaceContainerLight = Color(0xFFF9E9F5)
            override val surfaceContainerHighLight = Color(0xFFF3E4EF)
            override val surfaceContainerHighestLight = Color(0xFFEEDEEA)
            override val primaryLightMediumContrast = Color(0xFF600071)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9C27B0)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF34005E)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D1B7B)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFDEB9FF)
            override val tertiaryLightMediumContrast = Color(0xFF412E55)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7A6490)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightMediumContrast = Color(0xFF211921)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightMediumContrast = Color(0xFF160F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F323F)
            override val outlineLightMediumContrast = Color(0xFF5D4E5C)
            override val outlineVariantLightMediumContrast = Color(0xFF786877)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFCECF8)
            override val inversePrimaryLightMediumContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C2CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFEFFB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E4EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8D8E4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCCDD9)
            override val primaryLightHighContrast = Color(0xFF50005E)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF7F0094)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF34005E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4D1B7B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFEF4FF)
            override val tertiaryLightHighContrast = Color(0xFF36234B)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF54416A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightHighContrast = Color(0xFF211921)
            override val surfaceLightHighContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF352835)
            override val outlineVariantLightHighContrast = Color(0xFF534553)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightHighContrast = Color(0xFFC3B5C0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFCECF8)
            override val surfaceContainerLightHighContrast = Color(0xFFEEDEEA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDFD0DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C2CE)
            override val primaryDark = Color(0xFFF9ABFF)
            override val onPrimaryDark = Color(0xFF570066)
            override val primaryContainerDark = Color(0xFF9C27B0)
            override val onPrimaryContainerDark = Color(0xFFFFCAFF)
            override val secondaryDark = Color(0xFFDDB8FF)
            override val onSecondaryDark = Color(0xFF461274)
            override val secondaryContainerDark = Color(0xFF4D1B7B)
            override val onSecondaryContainerDark = Color(0xFFBD8AEE)
            override val tertiaryDark = Color(0xFFFBF0FF)
            override val onTertiaryDark = Color(0xFF3B284F)
            override val tertiaryContainerDark = Color(0xFFE7CDFF)
            override val onTertiaryContainerDark = Color(0xFF69547F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191119)
            override val onBackgroundDark = Color(0xFFEEDEEA)
            override val surfaceDark = Color(0xFF191119)
            override val onSurfaceDark = Color(0xFFEEDEEA)
            override val surfaceVariantDark = Color(0xFF514250)
            override val onSurfaceVariantDark = Color(0xFFD5C1D2)
            override val outlineDark = Color(0xFF9D8B9B)
            override val outlineVariantDark = Color(0xFF514250)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDark = Color(0xFF372D36)
            override val inversePrimaryDark = Color(0xFF9A25AE)
            override val surfaceDimDark = Color(0xFF191119)
            override val surfaceBrightDark = Color(0xFF40363F)
            override val surfaceContainerLowestDark = Color(0xFF130C13)
            override val surfaceContainerLowDark = Color(0xFF211921)
            override val surfaceContainerDark = Color(0xFF251D25)
            override val surfaceContainerHighDark = Color(0xFF302730)
            override val surfaceContainerHighestDark = Color(0xFF3B323B)
            override val primaryDarkMediumContrast = Color(0xFFFFCCFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF460052)
            override val primaryContainerDarkMediumContrast = Color(0xFFD560E6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A0068)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAC7BDD)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFBF0FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF3B284F)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE7CDFF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF4C3861)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191119)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEDEEA)
            override val surfaceDarkMediumContrast = Color(0xFF191119)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD6E8)
            override val outlineDarkMediumContrast = Color(0xFFC0ACBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8B9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302730)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7D0092)
            override val surfaceDimDarkMediumContrast = Color(0xFF191119)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B414B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C050C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231B23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E252E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF393038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B44)
            override val primaryDarkHighContrast = Color(0xFFFFEAFB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF8A5FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0021)
            override val secondaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDAB3FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF15002B)
            override val tertiaryDarkHighContrast = Color(0xFFFBF0FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE7CDFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2B193F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191119)
            override val onBackgroundDarkHighContrast = Color(0xFFEEDEEA)
            override val surfaceDarkHighContrast = Color(0xFF191119)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEAFB)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BDCE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7D0092)
            override val surfaceDimDarkHighContrast = Color(0xFF191119)
            override val surfaceBrightDarkHighContrast = Color(0xFF574D56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251D25)
            override val surfaceContainerDarkHighContrast = Color(0xFF372D36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423841)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E444D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF7E0092)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF9C27B0)
            override val onPrimaryContainerLight = Color(0xFFFFCAFF)
            override val secondaryLight = Color(0xFF666000)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB0A727)
            override val onSecondaryContainerLight = Color(0xFF3F3B00)
            override val tertiaryLight = Color(0xFF625C00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF7B751B)
            override val onTertiaryContainerLight = Color(0xFFFFFAE2)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FA)
            override val onBackgroundLight = Color(0xFF211921)
            override val surfaceLight = Color(0xFFFFF7FA)
            override val onSurfaceLight = Color(0xFF211921)
            override val surfaceVariantLight = Color(0xFFF2DCEE)
            override val onSurfaceVariantLight = Color(0xFF514250)
            override val outlineLight = Color(0xFF837281)
            override val outlineVariantLight = Color(0xFFD5C1D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372D36)
            override val inverseOnSurfaceLight = Color(0xFFFCECF8)
            override val inversePrimaryLight = Color(0xFFF9ABFF)
            override val surfaceDimLight = Color(0xFFE5D6E1)
            override val surfaceBrightLight = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFEFFB)
            override val surfaceContainerLight = Color(0xFFF9E9F5)
            override val surfaceContainerHighLight = Color(0xFFF3E4EF)
            override val surfaceContainerHighestLight = Color(0xFFEEDEEA)
            override val primaryLightMediumContrast = Color(0xFF600071)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9C27B0)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF766F00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3B3700)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF756F15)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightMediumContrast = Color(0xFF211921)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightMediumContrast = Color(0xFF160F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F323F)
            override val outlineLightMediumContrast = Color(0xFF5D4E5C)
            override val outlineVariantLightMediumContrast = Color(0xFF786877)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFCECF8)
            override val inversePrimaryLightMediumContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C2CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFEFFB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E4EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8D8E4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCCDD9)
            override val primaryLightHighContrast = Color(0xFF50005E)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF7F0094)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF302D00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightHighContrast = Color(0xFF211921)
            override val surfaceLightHighContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF352835)
            override val outlineVariantLightHighContrast = Color(0xFF534553)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightHighContrast = Color(0xFFC3B5C0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFCECF8)
            override val surfaceContainerLightHighContrast = Color(0xFFEEDEEA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDFD0DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C2CE)
            override val primaryDark = Color(0xFFF9ABFF)
            override val onPrimaryDark = Color(0xFF570066)
            override val primaryContainerDark = Color(0xFF9C27B0)
            override val onPrimaryContainerDark = Color(0xFFFFCAFF)
            override val secondaryDark = Color(0xFFD4CA49)
            override val onSecondaryDark = Color(0xFF353100)
            override val secondaryContainerDark = Color(0xFFB0A727)
            override val onSecondaryContainerDark = Color(0xFF3F3B00)
            override val tertiaryDark = Color(0xFFD1CA67)
            override val onTertiaryDark = Color(0xFF353200)
            override val tertiaryContainerDark = Color(0xFF7B751B)
            override val onTertiaryContainerDark = Color(0xFFFFFAE2)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191119)
            override val onBackgroundDark = Color(0xFFEEDEEA)
            override val surfaceDark = Color(0xFF191119)
            override val onSurfaceDark = Color(0xFFEEDEEA)
            override val surfaceVariantDark = Color(0xFF514250)
            override val onSurfaceVariantDark = Color(0xFFD5C1D2)
            override val outlineDark = Color(0xFF9D8B9B)
            override val outlineVariantDark = Color(0xFF514250)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDark = Color(0xFF372D36)
            override val inversePrimaryDark = Color(0xFF9A25AE)
            override val surfaceDimDark = Color(0xFF191119)
            override val surfaceBrightDark = Color(0xFF40363F)
            override val surfaceContainerLowestDark = Color(0xFF130C13)
            override val surfaceContainerLowDark = Color(0xFF211921)
            override val surfaceContainerDark = Color(0xFF251D25)
            override val surfaceContainerHighDark = Color(0xFF302730)
            override val surfaceContainerHighestDark = Color(0xFF3B323B)
            override val primaryDarkMediumContrast = Color(0xFFFFCCFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF460052)
            override val primaryContainerDarkMediumContrast = Color(0xFFD560E6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFEAE05C)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB0A727)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF1C1900)
            override val tertiaryDarkMediumContrast = Color(0xFFE8E07B)
            override val onTertiaryDarkMediumContrast = Color(0xFF292700)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9A9338)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191119)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEDEEA)
            override val surfaceDarkMediumContrast = Color(0xFF191119)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD6E8)
            override val outlineDarkMediumContrast = Color(0xFFC0ACBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8B9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302730)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7D0092)
            override val surfaceDimDarkMediumContrast = Color(0xFF191119)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B414B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C050C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231B23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E252E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF393038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B44)
            override val primaryDarkHighContrast = Color(0xFFFFEAFB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF8A5FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0021)
            override val secondaryDarkHighContrast = Color(0xFFFFF46E)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD0C645)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFFCF48C)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCDC664)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191119)
            override val onBackgroundDarkHighContrast = Color(0xFFEEDEEA)
            override val surfaceDarkHighContrast = Color(0xFF191119)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEAFB)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BDCE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7D0092)
            override val surfaceDimDarkHighContrast = Color(0xFF191119)
            override val surfaceBrightDarkHighContrast = Color(0xFF574D56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251D25)
            override val surfaceContainerDarkHighContrast = Color(0xFF372D36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423841)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E444D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF7E0092)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF9C27B0)
            override val onPrimaryContainerLight = Color(0xFFFFCAFF)
            override val secondaryLight = Color(0xFF34005E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D1B7B)
            override val onSecondaryContainerLight = Color(0xFFBD8AEE)
            override val tertiaryLight = Color(0xFF864F01)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFA4671D)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FA)
            override val onBackgroundLight = Color(0xFF211921)
            override val surfaceLight = Color(0xFFFFF7FA)
            override val onSurfaceLight = Color(0xFF211921)
            override val surfaceVariantLight = Color(0xFFF2DCEE)
            override val onSurfaceVariantLight = Color(0xFF514250)
            override val outlineLight = Color(0xFF837281)
            override val outlineVariantLight = Color(0xFFD5C1D2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372D36)
            override val inverseOnSurfaceLight = Color(0xFFFCECF8)
            override val inversePrimaryLight = Color(0xFFF9ABFF)
            override val surfaceDimLight = Color(0xFFE5D6E1)
            override val surfaceBrightLight = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFEFFB)
            override val surfaceContainerLight = Color(0xFFF9E9F5)
            override val surfaceContainerHighLight = Color(0xFFF3E4EF)
            override val surfaceContainerHighestLight = Color(0xFFEEDEEA)
            override val primaryLightMediumContrast = Color(0xFF600071)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9C27B0)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF34005E)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D1B7B)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFDEB9FF)
            override val tertiaryLightMediumContrast = Color(0xFF512E00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9B5F15)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightMediumContrast = Color(0xFF211921)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightMediumContrast = Color(0xFF160F16)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F323F)
            override val outlineLightMediumContrast = Color(0xFF5D4E5C)
            override val outlineVariantLightMediumContrast = Color(0xFF786877)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFCECF8)
            override val inversePrimaryLightMediumContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C2CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFEFFB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E4EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8D8E4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCCDD9)
            override val primaryLightHighContrast = Color(0xFF50005E)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF7F0094)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF34005E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4D1B7B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFEF4FF)
            override val tertiaryLightHighContrast = Color(0xFF432500)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6C3E00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FA)
            override val onBackgroundLightHighContrast = Color(0xFF211921)
            override val surfaceLightHighContrast = Color(0xFFFFF7FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DCEE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF352835)
            override val outlineVariantLightHighContrast = Color(0xFF534553)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372D36)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF9ABFF)
            override val surfaceDimLightHighContrast = Color(0xFFC3B5C0)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFCECF8)
            override val surfaceContainerLightHighContrast = Color(0xFFEEDEEA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDFD0DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C2CE)
            override val primaryDark = Color(0xFFF9ABFF)
            override val onPrimaryDark = Color(0xFF570066)
            override val primaryContainerDark = Color(0xFF9C27B0)
            override val onPrimaryContainerDark = Color(0xFFFFCAFF)
            override val secondaryDark = Color(0xFFDDB8FF)
            override val onSecondaryDark = Color(0xFF461274)
            override val secondaryContainerDark = Color(0xFF4D1B7B)
            override val onSecondaryContainerDark = Color(0xFFBD8AEE)
            override val tertiaryDark = Color(0xFFFFB86E)
            override val onTertiaryDark = Color(0xFF492900)
            override val tertiaryContainerDark = Color(0xFFC58237)
            override val onTertiaryContainerDark = Color(0xFF241100)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191119)
            override val onBackgroundDark = Color(0xFFEEDEEA)
            override val surfaceDark = Color(0xFF191119)
            override val onSurfaceDark = Color(0xFFEEDEEA)
            override val surfaceVariantDark = Color(0xFF514250)
            override val onSurfaceVariantDark = Color(0xFFD5C1D2)
            override val outlineDark = Color(0xFF9D8B9B)
            override val outlineVariantDark = Color(0xFF514250)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDark = Color(0xFF372D36)
            override val inversePrimaryDark = Color(0xFF9A25AE)
            override val surfaceDimDark = Color(0xFF191119)
            override val surfaceBrightDark = Color(0xFF40363F)
            override val surfaceContainerLowestDark = Color(0xFF130C13)
            override val surfaceContainerLowDark = Color(0xFF211921)
            override val surfaceContainerDark = Color(0xFF251D25)
            override val surfaceContainerHighDark = Color(0xFF302730)
            override val surfaceContainerHighestDark = Color(0xFF3B323B)
            override val primaryDarkMediumContrast = Color(0xFFFFCCFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF460052)
            override val primaryContainerDarkMediumContrast = Color(0xFFD560E6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A0068)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAC7BDD)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD5AD)
            override val onTertiaryDarkMediumContrast = Color(0xFF3A1F00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC58237)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191119)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEDEEA)
            override val surfaceDarkMediumContrast = Color(0xFF191119)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD6E8)
            override val outlineDarkMediumContrast = Color(0xFFC0ACBD)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8B9B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302730)
            override val inversePrimaryDarkMediumContrast = Color(0xFF7D0092)
            override val surfaceDimDarkMediumContrast = Color(0xFF191119)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B414B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C050C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231B23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E252E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF393038)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B44)
            override val primaryDarkHighContrast = Color(0xFFFFEAFB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF8A5FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0021)
            override val secondaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDAB3FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF15002B)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFEB363)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF150800)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191119)
            override val onBackgroundDarkHighContrast = Color(0xFFEEDEEA)
            override val surfaceDarkHighContrast = Color(0xFF191119)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514250)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEAFB)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BDCE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEDEEA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF7D0092)
            override val surfaceDimDarkHighContrast = Color(0xFF191119)
            override val surfaceBrightDarkHighContrast = Color(0xFF574D56)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251D25)
            override val surfaceContainerDarkHighContrast = Color(0xFF372D36)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423841)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E444D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}