package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500DeepPurple : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF4F1C9E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF673AB7)
            override val onPrimaryContainerLight = Color(0xFFD8C2FF)
            override val secondaryLight = Color(0xFF261569)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF3C2F80)
            override val onSecondaryContainerLight = Color(0xFFA89CF4)
            override val tertiaryLight = Color(0xFF641B9D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF7D3AB7)
            override val onTertiaryContainerLight = Color(0xFFE9CAFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFEF7FF)
            override val onBackgroundLight = Color(0xFF1D1A22)
            override val surfaceLight = Color(0xFFFEF7FF)
            override val onSurfaceLight = Color(0xFF1D1A22)
            override val surfaceVariantLight = Color(0xFFE8DFF1)
            override val onSurfaceVariantLight = Color(0xFF4A4453)
            override val outlineLight = Color(0xFF7B7484)
            override val outlineVariantLight = Color(0xFFCCC3D5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F37)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF9)
            override val inversePrimaryLight = Color(0xFFD3BBFF)
            override val surfaceDimLight = Color(0xFFDFD7E3)
            override val surfaceBrightLight = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1FC)
            override val surfaceContainerLight = Color(0xFFF3EBF7)
            override val surfaceContainerHighLight = Color(0xFFEDE6F1)
            override val surfaceContainerHighestLight = Color(0xFFE7E0EB)
            override val primaryLightMediumContrast = Color(0xFF460A95)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF673AB7)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFF9FD)
            override val secondaryLightMediumContrast = Color(0xFF261569)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF3C2F80)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFD2C9FF)
            override val tertiaryLightMediumContrast = Color(0xFF53008B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7D3AB7)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1A22)
            override val surfaceLightMediumContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF131017)
            override val surfaceVariantLightMediumContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393442)
            override val outlineLightMediumContrast = Color(0xFF56505F)
            override val outlineVariantLightMediumContrast = Color(0xFF716A7A)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF9)
            override val inversePrimaryLightMediumContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC4CF)
            override val surfaceBrightLightMediumContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFEDE6F1)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD6CFDA)
            override val primaryLightHighContrast = Color(0xFF3A0082)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF592AA9)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF261569)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF3C2F80)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF440075)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6822A2)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1A22)
            override val surfaceLightHighContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A37)
            override val outlineVariantLightHighContrast = Color(0xFF4C4755)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightHighContrast = Color(0xFFBDB6C1)
            override val surfaceBrightLightHighContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF9)
            override val surfaceContainerLightHighContrast = Color(0xFFE7E0EB)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD9D2DD)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC4CF)
            override val primaryDark = Color(0xFFD3BBFF)
            override val onPrimaryDark = Color(0xFF3F008D)
            override val primaryContainerDark = Color(0xFF673AB7)
            override val onPrimaryContainerDark = Color(0xFFD8C2FF)
            override val secondaryDark = Color(0xFFC9BFFF)
            override val onSecondaryDark = Color(0xFF302273)
            override val secondaryContainerDark = Color(0xFF3C2F80)
            override val onSecondaryContainerDark = Color(0xFFA89CF4)
            override val tertiaryDark = Color(0xFFDFB7FF)
            override val onTertiaryDark = Color(0xFF4B007E)
            override val tertiaryContainerDark = Color(0xFF7D3AB7)
            override val onTertiaryContainerDark = Color(0xFFE9CAFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15121A)
            override val onBackgroundDark = Color(0xFFE7E0EB)
            override val surfaceDark = Color(0xFF15121A)
            override val onSurfaceDark = Color(0xFFE7E0EB)
            override val surfaceVariantDark = Color(0xFF4A4453)
            override val onSurfaceVariantDark = Color(0xFFCCC3D5)
            override val outlineDark = Color(0xFF958E9E)
            override val outlineVariantDark = Color(0xFF4A4453)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDark = Color(0xFF322F37)
            override val inversePrimaryDark = Color(0xFF6F43C0)
            override val surfaceDimDark = Color(0xFF15121A)
            override val surfaceBrightDark = Color(0xFF3B3840)
            override val surfaceContainerLowestDark = Color(0xFF100D14)
            override val surfaceContainerLowDark = Color(0xFF1D1A22)
            override val surfaceContainerDark = Color(0xFF211E26)
            override val surfaceContainerHighDark = Color(0xFF2C2931)
            override val surfaceContainerHighestDark = Color(0xFF37333C)
            override val primaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF320072)
            override val primaryContainerDarkMediumContrast = Color(0xFFA478F7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFDFD7FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF251468)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9285DC)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEDD3FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF3B0066)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB572F1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15121A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE7E0EB)
            override val surfaceDarkMediumContrast = Color(0xFF15121A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE2D9EB)
            override val outlineDarkMediumContrast = Color(0xFFB7AFC0)
            override val outlineVariantDarkMediumContrast = Color(0xFF958D9E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2931)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5828A8)
            override val surfaceDimDarkMediumContrast = Color(0xFF15121A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47434C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08060D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1C24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A262F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353139)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C45)
            override val primaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD0B6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF110031)
            override val secondaryDarkHighContrast = Color(0xFFF3EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC5BAFF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0A0037)
            override val tertiaryDarkHighContrast = Color(0xFFFAEBFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDCB2FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF16002B)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15121A)
            override val onBackgroundDarkHighContrast = Color(0xFFE7E0EB)
            override val surfaceDarkHighContrast = Color(0xFF15121A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF6ECFF)
            override val outlineVariantDarkHighContrast = Color(0xFFC8BFD1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5828A8)
            override val surfaceDimDarkHighContrast = Color(0xFF15121A)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E57)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211E26)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F37)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49454E)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF4F1C9E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF673AB7)
            override val onPrimaryContainerLight = Color(0xFFD8C2FF)
            override val secondaryLight = Color(0xFF261569)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF3C2F80)
            override val onSecondaryContainerLight = Color(0xFFA89CF4)
            override val tertiaryLight = Color(0xFF5E5A7C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDDD7FF)
            override val onTertiaryContainerLight = Color(0xFF605C7E)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFEF7FF)
            override val onBackgroundLight = Color(0xFF1D1A22)
            override val surfaceLight = Color(0xFFFEF7FF)
            override val onSurfaceLight = Color(0xFF1D1A22)
            override val surfaceVariantLight = Color(0xFFE8DFF1)
            override val onSurfaceVariantLight = Color(0xFF4A4453)
            override val outlineLight = Color(0xFF7B7484)
            override val outlineVariantLight = Color(0xFFCCC3D5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F37)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF9)
            override val inversePrimaryLight = Color(0xFFD3BBFF)
            override val surfaceDimLight = Color(0xFFDFD7E3)
            override val surfaceBrightLight = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1FC)
            override val surfaceContainerLight = Color(0xFFF3EBF7)
            override val surfaceContainerHighLight = Color(0xFFEDE6F1)
            override val surfaceContainerHighestLight = Color(0xFFE7E0EB)
            override val primaryLightMediumContrast = Color(0xFF460A95)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF673AB7)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFF9FD)
            override val secondaryLightMediumContrast = Color(0xFF261569)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF3C2F80)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFD2C9FF)
            override val tertiaryLightMediumContrast = Color(0xFF363252)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6D698C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1A22)
            override val surfaceLightMediumContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF131017)
            override val surfaceVariantLightMediumContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393442)
            override val outlineLightMediumContrast = Color(0xFF56505F)
            override val outlineVariantLightMediumContrast = Color(0xFF716A7A)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF9)
            override val inversePrimaryLightMediumContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC4CF)
            override val surfaceBrightLightMediumContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFEDE6F1)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD6CFDA)
            override val primaryLightHighContrast = Color(0xFF3A0082)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF592AA9)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF261569)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF3C2F80)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2C2847)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF494566)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1A22)
            override val surfaceLightHighContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A37)
            override val outlineVariantLightHighContrast = Color(0xFF4C4755)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightHighContrast = Color(0xFFBDB6C1)
            override val surfaceBrightLightHighContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF9)
            override val surfaceContainerLightHighContrast = Color(0xFFE7E0EB)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD9D2DD)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC4CF)
            override val primaryDark = Color(0xFFD3BBFF)
            override val onPrimaryDark = Color(0xFF3F008D)
            override val primaryContainerDark = Color(0xFF673AB7)
            override val onPrimaryContainerDark = Color(0xFFD8C2FF)
            override val secondaryDark = Color(0xFFC9BFFF)
            override val onSecondaryDark = Color(0xFF302273)
            override val secondaryContainerDark = Color(0xFF3C2F80)
            override val onSecondaryContainerDark = Color(0xFFA89CF4)
            override val tertiaryDark = Color(0xFFFBF6FF)
            override val onTertiaryDark = Color(0xFF302D4C)
            override val tertiaryContainerDark = Color(0xFFDDD7FF)
            override val onTertiaryContainerDark = Color(0xFF605C7E)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15121A)
            override val onBackgroundDark = Color(0xFFE7E0EB)
            override val surfaceDark = Color(0xFF15121A)
            override val onSurfaceDark = Color(0xFFE7E0EB)
            override val surfaceVariantDark = Color(0xFF4A4453)
            override val onSurfaceVariantDark = Color(0xFFCCC3D5)
            override val outlineDark = Color(0xFF958E9E)
            override val outlineVariantDark = Color(0xFF4A4453)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDark = Color(0xFF322F37)
            override val inversePrimaryDark = Color(0xFF6F43C0)
            override val surfaceDimDark = Color(0xFF15121A)
            override val surfaceBrightDark = Color(0xFF3B3840)
            override val surfaceContainerLowestDark = Color(0xFF100D14)
            override val surfaceContainerLowDark = Color(0xFF1D1A22)
            override val surfaceContainerDark = Color(0xFF211E26)
            override val surfaceContainerHighDark = Color(0xFF2C2931)
            override val surfaceContainerHighestDark = Color(0xFF37333C)
            override val primaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF320072)
            override val primaryContainerDarkMediumContrast = Color(0xFFA478F7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFDFD7FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF251468)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9285DC)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFBF6FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF302D4C)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDDD7FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF434060)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15121A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE7E0EB)
            override val surfaceDarkMediumContrast = Color(0xFF15121A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE2D9EB)
            override val outlineDarkMediumContrast = Color(0xFFB7AFC0)
            override val outlineVariantDarkMediumContrast = Color(0xFF958D9E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2931)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5828A8)
            override val surfaceDimDarkMediumContrast = Color(0xFF15121A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47434C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08060D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1C24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A262F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353139)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C45)
            override val primaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD0B6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF110031)
            override val secondaryDarkHighContrast = Color(0xFFF3EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC5BAFF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0A0037)
            override val tertiaryDarkHighContrast = Color(0xFFFBF6FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDDD7FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF242140)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15121A)
            override val onBackgroundDarkHighContrast = Color(0xFFE7E0EB)
            override val surfaceDarkHighContrast = Color(0xFF15121A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF6ECFF)
            override val outlineVariantDarkHighContrast = Color(0xFFC8BFD1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5828A8)
            override val surfaceDimDarkHighContrast = Color(0xFF15121A)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E57)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211E26)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F37)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49454E)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF4F1C9E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF673AB7)
            override val onPrimaryContainerLight = Color(0xFFD8C2FF)
            override val secondaryLight = Color(0xFF755B00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB7973A)
            override val onSecondaryContainerLight = Color(0xFF403000)
            override val tertiaryLight = Color(0xFF665212)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF806A29)
            override val onTertiaryContainerLight = Color(0xFFFFEEC6)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFEF7FF)
            override val onBackgroundLight = Color(0xFF1D1A22)
            override val surfaceLight = Color(0xFFFEF7FF)
            override val onSurfaceLight = Color(0xFF1D1A22)
            override val surfaceVariantLight = Color(0xFFE8DFF1)
            override val onSurfaceVariantLight = Color(0xFF4A4453)
            override val outlineLight = Color(0xFF7B7484)
            override val outlineVariantLight = Color(0xFFCCC3D5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F37)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF9)
            override val inversePrimaryLight = Color(0xFFD3BBFF)
            override val surfaceDimLight = Color(0xFFDFD7E3)
            override val surfaceBrightLight = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1FC)
            override val surfaceContainerLight = Color(0xFFF3EBF7)
            override val surfaceContainerHighLight = Color(0xFFEDE6F1)
            override val surfaceContainerHighestLight = Color(0xFFE7E0EB)
            override val primaryLightMediumContrast = Color(0xFF460A95)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF673AB7)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFF9FD)
            override val secondaryLightMediumContrast = Color(0xFF443400)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF856A0B)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF443400)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF806A29)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1A22)
            override val surfaceLightMediumContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF131017)
            override val surfaceVariantLightMediumContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393442)
            override val outlineLightMediumContrast = Color(0xFF56505F)
            override val outlineVariantLightMediumContrast = Color(0xFF716A7A)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF9)
            override val inversePrimaryLightMediumContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC4CF)
            override val surfaceBrightLightMediumContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFEDE6F1)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD6CFDA)
            override val primaryLightHighContrast = Color(0xFF3A0082)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF592AA9)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF382A00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5B4700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF382A00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5A4706)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1A22)
            override val surfaceLightHighContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A37)
            override val outlineVariantLightHighContrast = Color(0xFF4C4755)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightHighContrast = Color(0xFFBDB6C1)
            override val surfaceBrightLightHighContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF9)
            override val surfaceContainerLightHighContrast = Color(0xFFE7E0EB)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD9D2DD)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC4CF)
            override val primaryDark = Color(0xFFD3BBFF)
            override val onPrimaryDark = Color(0xFF3F008D)
            override val primaryContainerDark = Color(0xFF673AB7)
            override val onPrimaryContainerDark = Color(0xFFD8C2FF)
            override val secondaryDark = Color(0xFFE6C361)
            override val onSecondaryDark = Color(0xFF3D2E00)
            override val secondaryContainerDark = Color(0xFFB7973A)
            override val onSecondaryContainerDark = Color(0xFF403000)
            override val tertiaryDark = Color(0xFFE0C479)
            override val onTertiaryDark = Color(0xFF3D2F00)
            override val tertiaryContainerDark = Color(0xFF806A29)
            override val onTertiaryContainerDark = Color(0xFFFFEEC6)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15121A)
            override val onBackgroundDark = Color(0xFFE7E0EB)
            override val surfaceDark = Color(0xFF15121A)
            override val onSurfaceDark = Color(0xFFE7E0EB)
            override val surfaceVariantDark = Color(0xFF4A4453)
            override val onSurfaceVariantDark = Color(0xFFCCC3D5)
            override val outlineDark = Color(0xFF958E9E)
            override val outlineVariantDark = Color(0xFF4A4453)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDark = Color(0xFF322F37)
            override val inversePrimaryDark = Color(0xFF6F43C0)
            override val surfaceDimDark = Color(0xFF15121A)
            override val surfaceBrightDark = Color(0xFF3B3840)
            override val surfaceContainerLowestDark = Color(0xFF100D14)
            override val surfaceContainerLowDark = Color(0xFF1D1A22)
            override val surfaceContainerDark = Color(0xFF211E26)
            override val surfaceContainerHighDark = Color(0xFF2C2931)
            override val surfaceContainerHighestDark = Color(0xFF37333C)
            override val primaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF320072)
            override val primaryContainerDarkMediumContrast = Color(0xFFA478F7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFED974)
            override val onSecondaryDarkMediumContrast = Color(0xFF302400)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB7973A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF0F0A00)
            override val tertiaryDarkMediumContrast = Color(0xFFF7DA8D)
            override val onTertiaryDarkMediumContrast = Color(0xFF302400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA78E49)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15121A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE7E0EB)
            override val surfaceDarkMediumContrast = Color(0xFF15121A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE2D9EB)
            override val outlineDarkMediumContrast = Color(0xFFB7AFC0)
            override val outlineVariantDarkMediumContrast = Color(0xFF958D9E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2931)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5828A8)
            override val surfaceDimDarkMediumContrast = Color(0xFF15121A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47434C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08060D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1C24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A262F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353139)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C45)
            override val primaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD0B6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF110031)
            override val secondaryDarkHighContrast = Color(0xFFFFEECB)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFE2BF5E)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF100A00)
            override val tertiaryDarkHighContrast = Color(0xFFFFEFCA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDCC076)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF100A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15121A)
            override val onBackgroundDarkHighContrast = Color(0xFFE7E0EB)
            override val surfaceDarkHighContrast = Color(0xFF15121A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF6ECFF)
            override val outlineVariantDarkHighContrast = Color(0xFFC8BFD1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5828A8)
            override val surfaceDimDarkHighContrast = Color(0xFF15121A)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E57)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211E26)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F37)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49454E)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF4F1C9E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF673AB7)
            override val onPrimaryContainerLight = Color(0xFFD8C2FF)
            override val secondaryLight = Color(0xFF261569)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF3C2F80)
            override val onSecondaryContainerLight = Color(0xFFA89CF4)
            override val tertiaryLight = Color(0xFF944522)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB35C37)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFEF7FF)
            override val onBackgroundLight = Color(0xFF1D1A22)
            override val surfaceLight = Color(0xFFFEF7FF)
            override val onSurfaceLight = Color(0xFF1D1A22)
            override val surfaceVariantLight = Color(0xFFE8DFF1)
            override val onSurfaceVariantLight = Color(0xFF4A4453)
            override val outlineLight = Color(0xFF7B7484)
            override val outlineVariantLight = Color(0xFFCCC3D5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F37)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF9)
            override val inversePrimaryLight = Color(0xFFD3BBFF)
            override val surfaceDimLight = Color(0xFFDFD7E3)
            override val surfaceBrightLight = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1FC)
            override val surfaceContainerLight = Color(0xFFF3EBF7)
            override val surfaceContainerHighLight = Color(0xFFEDE6F1)
            override val surfaceContainerHighestLight = Color(0xFFE7E0EB)
            override val primaryLightMediumContrast = Color(0xFF460A95)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF673AB7)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFF9FD)
            override val secondaryLightMediumContrast = Color(0xFF261569)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF3C2F80)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFD2C9FF)
            override val tertiaryLightMediumContrast = Color(0xFF632001)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFAA5531)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1A22)
            override val surfaceLightMediumContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF131017)
            override val surfaceVariantLightMediumContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393442)
            override val outlineLightMediumContrast = Color(0xFF56505F)
            override val outlineVariantLightMediumContrast = Color(0xFF716A7A)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF9)
            override val inversePrimaryLightMediumContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC4CF)
            override val surfaceBrightLightMediumContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFEDE6F1)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD6CFDA)
            override val primaryLightHighContrast = Color(0xFF3A0082)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF592AA9)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF261569)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF3C2F80)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF531900)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7C3311)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFEF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1A22)
            override val surfaceLightHighContrast = Color(0xFFFEF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE8DFF1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A37)
            override val outlineVariantLightHighContrast = Color(0xFF4C4755)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F37)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD3BBFF)
            override val surfaceDimLightHighContrast = Color(0xFFBDB6C1)
            override val surfaceBrightLightHighContrast = Color(0xFFFEF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF9)
            override val surfaceContainerLightHighContrast = Color(0xFFE7E0EB)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD9D2DD)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC4CF)
            override val primaryDark = Color(0xFFD3BBFF)
            override val onPrimaryDark = Color(0xFF3F008D)
            override val primaryContainerDark = Color(0xFF673AB7)
            override val onPrimaryContainerDark = Color(0xFFD8C2FF)
            override val secondaryDark = Color(0xFFC9BFFF)
            override val onSecondaryDark = Color(0xFF302273)
            override val secondaryContainerDark = Color(0xFF3C2F80)
            override val onSecondaryContainerDark = Color(0xFFA89CF4)
            override val tertiaryDark = Color(0xFFFFB599)
            override val onTertiaryDark = Color(0xFF5A1C00)
            override val tertiaryContainerDark = Color(0xFFD67750)
            override val onTertiaryContainerDark = Color(0xFF130200)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15121A)
            override val onBackgroundDark = Color(0xFFE7E0EB)
            override val surfaceDark = Color(0xFF15121A)
            override val onSurfaceDark = Color(0xFFE7E0EB)
            override val surfaceVariantDark = Color(0xFF4A4453)
            override val onSurfaceVariantDark = Color(0xFFCCC3D5)
            override val outlineDark = Color(0xFF958E9E)
            override val outlineVariantDark = Color(0xFF4A4453)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDark = Color(0xFF322F37)
            override val inversePrimaryDark = Color(0xFF6F43C0)
            override val surfaceDimDark = Color(0xFF15121A)
            override val surfaceBrightDark = Color(0xFF3B3840)
            override val surfaceContainerLowestDark = Color(0xFF100D14)
            override val surfaceContainerLowDark = Color(0xFF1D1A22)
            override val surfaceContainerDark = Color(0xFF211E26)
            override val surfaceContainerHighDark = Color(0xFF2C2931)
            override val surfaceContainerHighestDark = Color(0xFF37333C)
            override val primaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF320072)
            override val primaryContainerDarkMediumContrast = Color(0xFFA478F7)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFDFD7FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF251468)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9285DC)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3C3)
            override val onTertiaryDarkMediumContrast = Color(0xFF481500)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD67750)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15121A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE7E0EB)
            override val surfaceDarkMediumContrast = Color(0xFF15121A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE2D9EB)
            override val outlineDarkMediumContrast = Color(0xFFB7AFC0)
            override val outlineVariantDarkMediumContrast = Color(0xFF958D9E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2931)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5828A8)
            override val surfaceDimDarkMediumContrast = Color(0xFF15121A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47434C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08060D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1C24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A262F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353139)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C45)
            override val primaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD0B6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF110031)
            override val secondaryDarkHighContrast = Color(0xFFF3EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC5BAFF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0A0037)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE6)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB091)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF130200)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15121A)
            override val onBackgroundDarkHighContrast = Color(0xFFE7E0EB)
            override val surfaceDarkHighContrast = Color(0xFF15121A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4453)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF6ECFF)
            override val outlineVariantDarkHighContrast = Color(0xFFC8BFD1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE7E0EB)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5828A8)
            override val surfaceDimDarkHighContrast = Color(0xFF15121A)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E57)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211E26)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F37)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49454E)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("deep_purple", "Deep Purple")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}