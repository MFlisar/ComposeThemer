package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Pink : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("pink", "Pink")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFFB80049)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE2165F)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF7E0049)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA31562)
            override val onSecondaryContainerLight = Color(0xFFFFB7D0)
            override val tertiaryLight = Color(0xFFB71700)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDD3016)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF28171A)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF28171A)
            override val surfaceVariantLight = Color(0xFFFFD9DE)
            override val onSurfaceVariantLight = Color(0xFF5B3F43)
            override val outlineLight = Color(0xFF8F6F73)
            override val outlineVariantLight = Color(0xFFE4BDC2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLight = Color(0xFFFFECEE)
            override val inversePrimaryLight = Color(0xFFFFB2BE)
            override val surfaceDimLight = Color(0xFFF1D3D6)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F1)
            override val surfaceContainerLight = Color(0xFFFFE9EA)
            override val surfaceContainerHighLight = Color(0xFFFFE1E4)
            override val surfaceContainerHighestLight = Color(0xFFFADBDE)
            override val primaryLightMediumContrast = Color(0xFF71002A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD70357)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6E003F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA31562)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFF8F8)
            override val tertiaryLightMediumContrast = Color(0xFF700A00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFD2280E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF28171A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF492F33)
            override val outlineLightMediumContrast = Color(0xFF684B4F)
            override val outlineVariantLightMediumContrast = Color(0xFF856569)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFECEE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightMediumContrast = Color(0xFFDDBFC3)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F1)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE1E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D5D9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CACE)
            override val primaryLightHighContrast = Color(0xFF5F0022)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF95003A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF5C0034)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF910055)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF5E0700)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF941100)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF28171A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2529)
            override val outlineVariantLightHighContrast = Color(0xFF5E4246)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightHighContrast = Color(0xFFCEB2B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFECEE)
            override val surfaceContainerLightHighContrast = Color(0xFFFADBDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCDD0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDBFC3)
            override val primaryDark = Color(0xFFFFB2BE)
            override val onPrimaryDark = Color(0xFF660025)
            override val primaryContainerDark = Color(0xFFFF4E7C)
            override val onPrimaryContainerDark = Color(0xFF200007)
            override val secondaryDark = Color(0xFFFFB0CD)
            override val onSecondaryDark = Color(0xFF640039)
            override val secondaryContainerDark = Color(0xFFA31562)
            override val onSecondaryContainerDark = Color(0xFFFFB7D0)
            override val tertiaryDark = Color(0xFFFFB4A6)
            override val onTertiaryDark = Color(0xFF660800)
            override val tertiaryContainerDark = Color(0xFFFF5539)
            override val onTertiaryContainerDark = Color(0xFF2D0200)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1F0F12)
            override val onBackgroundDark = Color(0xFFFADBDE)
            override val surfaceDark = Color(0xFF1F0F12)
            override val onSurfaceDark = Color(0xFFFADBDE)
            override val surfaceVariantDark = Color(0xFF5B3F43)
            override val onSurfaceVariantDark = Color(0xFFE4BDC2)
            override val outlineDark = Color(0xFFAB888C)
            override val outlineVariantDark = Color(0xFF5B3F43)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADBDE)
            override val inverseOnSurfaceDark = Color(0xFF3E2B2E)
            override val inversePrimaryDark = Color(0xFFBC004B)
            override val surfaceDimDark = Color(0xFF1F0F12)
            override val surfaceBrightDark = Color(0xFF483437)
            override val surfaceContainerLowestDark = Color(0xFF190A0C)
            override val surfaceContainerLowDark = Color(0xFF28171A)
            override val surfaceContainerDark = Color(0xFF2C1B1E)
            override val surfaceContainerHighDark = Color(0xFF372528)
            override val surfaceContainerHighestDark = Color(0xFF433032)
            override val primaryDarkMediumContrast = Color(0xFFFFD1D7)
            override val onPrimaryDarkMediumContrast = Color(0xFF52001C)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF4E7C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD0DF)
            override val onSecondaryDarkMediumContrast = Color(0xFF50002D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF0589F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD2CA)
            override val onTertiaryDarkMediumContrast = Color(0xFF520500)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFF5539)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADBDE)
            override val surfaceDarkMediumContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD2D7)
            override val outlineDarkMediumContrast = Color(0xFFCEA9AD)
            override val outlineVariantDarkMediumContrast = Color(0xFFAA878C)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372528)
            override val inversePrimaryDarkMediumContrast = Color(0xFF920039)
            override val surfaceDimDarkMediumContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkMediumContrast = Color(0xFF543F42)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF110406)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A191C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352326)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E30)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D383B)
            override val primaryDarkHighContrast = Color(0xFFFFEBED)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFACB9)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF200007)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAAC9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF20000F)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAE9F)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF210100)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkHighContrast = Color(0xFFFADBDE)
            override val surfaceDarkHighContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBED)
            override val outlineVariantDarkHighContrast = Color(0xFFE0B9BE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF920039)
            override val surfaceDimDarkHighContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkHighContrast = Color(0xFF604A4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B1E)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2B2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3639)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF564144)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFFB80049)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE2165F)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF7E0049)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA31562)
            override val onSecondaryContainerLight = Color(0xFFFFB7D0)
            override val tertiaryLight = Color(0xFF7D516A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFC7E5)
            override val onTertiaryContainerLight = Color(0xFF7B5069)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF28171A)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF28171A)
            override val surfaceVariantLight = Color(0xFFFFD9DE)
            override val onSurfaceVariantLight = Color(0xFF5B3F43)
            override val outlineLight = Color(0xFF8F6F73)
            override val outlineVariantLight = Color(0xFFE4BDC2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLight = Color(0xFFFFECEE)
            override val inversePrimaryLight = Color(0xFFFFB2BE)
            override val surfaceDimLight = Color(0xFFF1D3D6)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F1)
            override val surfaceContainerLight = Color(0xFFFFE9EA)
            override val surfaceContainerHighLight = Color(0xFFFFE1E4)
            override val surfaceContainerHighestLight = Color(0xFFFADBDE)
            override val primaryLightMediumContrast = Color(0xFF71002A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD70357)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6E003F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA31562)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFF8F8)
            override val tertiaryLightMediumContrast = Color(0xFF502A41)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8D5F79)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF28171A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF492F33)
            override val outlineLightMediumContrast = Color(0xFF684B4F)
            override val outlineVariantLightMediumContrast = Color(0xFF856569)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFECEE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightMediumContrast = Color(0xFFDDBFC3)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F1)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE1E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D5D9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CACE)
            override val primaryLightHighContrast = Color(0xFF5F0022)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF95003A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF5C0034)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF910055)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF442037)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF653C55)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF28171A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2529)
            override val outlineVariantLightHighContrast = Color(0xFF5E4246)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightHighContrast = Color(0xFFCEB2B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFECEE)
            override val surfaceContainerLightHighContrast = Color(0xFFFADBDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCDD0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDBFC3)
            override val primaryDark = Color(0xFFFFB2BE)
            override val onPrimaryDark = Color(0xFF660025)
            override val primaryContainerDark = Color(0xFFFF4E7C)
            override val onPrimaryContainerDark = Color(0xFF200007)
            override val secondaryDark = Color(0xFFFFB0CD)
            override val onSecondaryDark = Color(0xFF640039)
            override val secondaryContainerDark = Color(0xFFA31562)
            override val onSecondaryContainerDark = Color(0xFFFFB7D0)
            override val tertiaryDark = Color(0xFFFFEFF5)
            override val onTertiaryDark = Color(0xFF49243B)
            override val tertiaryContainerDark = Color(0xFFFFC7E5)
            override val onTertiaryContainerDark = Color(0xFF7B5069)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1F0F12)
            override val onBackgroundDark = Color(0xFFFADBDE)
            override val surfaceDark = Color(0xFF1F0F12)
            override val onSurfaceDark = Color(0xFFFADBDE)
            override val surfaceVariantDark = Color(0xFF5B3F43)
            override val onSurfaceVariantDark = Color(0xFFE4BDC2)
            override val outlineDark = Color(0xFFAB888C)
            override val outlineVariantDark = Color(0xFF5B3F43)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADBDE)
            override val inverseOnSurfaceDark = Color(0xFF3E2B2E)
            override val inversePrimaryDark = Color(0xFFBC004B)
            override val surfaceDimDark = Color(0xFF1F0F12)
            override val surfaceBrightDark = Color(0xFF483437)
            override val surfaceContainerLowestDark = Color(0xFF190A0C)
            override val surfaceContainerLowDark = Color(0xFF28171A)
            override val surfaceContainerDark = Color(0xFF2C1B1E)
            override val surfaceContainerHighDark = Color(0xFF372528)
            override val surfaceContainerHighestDark = Color(0xFF433032)
            override val primaryDarkMediumContrast = Color(0xFFFFD1D7)
            override val onPrimaryDarkMediumContrast = Color(0xFF52001C)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF4E7C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD0DF)
            override val onSecondaryDarkMediumContrast = Color(0xFF50002D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF0589F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFEFF5)
            override val onTertiaryDarkMediumContrast = Color(0xFF49243B)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFFC7E5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF5C344C)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADBDE)
            override val surfaceDarkMediumContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD2D7)
            override val outlineDarkMediumContrast = Color(0xFFCEA9AD)
            override val outlineVariantDarkMediumContrast = Color(0xFFAA878C)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372528)
            override val inversePrimaryDarkMediumContrast = Color(0xFF920039)
            override val surfaceDimDarkMediumContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkMediumContrast = Color(0xFF543F42)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF110406)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A191C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352326)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E30)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D383B)
            override val primaryDarkHighContrast = Color(0xFFFFEBED)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFACB9)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF200007)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAAC9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF20000F)
            override val tertiaryDarkHighContrast = Color(0xFFFFEFF5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFC7E5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF38152C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkHighContrast = Color(0xFFFADBDE)
            override val surfaceDarkHighContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBED)
            override val outlineVariantDarkHighContrast = Color(0xFFE0B9BE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF920039)
            override val surfaceDimDarkHighContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkHighContrast = Color(0xFF604A4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B1E)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2B2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3639)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF564144)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB80049)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE2165F)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF266D00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF62E91E)
            override val onSecondaryContainerLight = Color(0xFF226400)
            override val tertiaryLight = Color(0xFF256A00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF308600)
            override val onTertiaryContainerLight = Color(0xFFF8FFEE)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF28171A)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF28171A)
            override val surfaceVariantLight = Color(0xFFFFD9DE)
            override val onSurfaceVariantLight = Color(0xFF5B3F43)
            override val outlineLight = Color(0xFF8F6F73)
            override val outlineVariantLight = Color(0xFFE4BDC2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLight = Color(0xFFFFECEE)
            override val inversePrimaryLight = Color(0xFFFFB2BE)
            override val surfaceDimLight = Color(0xFFF1D3D6)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F1)
            override val surfaceContainerLight = Color(0xFFFFE9EA)
            override val surfaceContainerHighLight = Color(0xFFFFE1E4)
            override val surfaceContainerHighestLight = Color(0xFFFADBDE)
            override val primaryLightMediumContrast = Color(0xFF71002A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD70357)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF133F00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF2D7D00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF133F00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF2D7D00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF28171A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF492F33)
            override val outlineLightMediumContrast = Color(0xFF684B4F)
            override val outlineVariantLightMediumContrast = Color(0xFF856569)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFECEE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightMediumContrast = Color(0xFFDDBFC3)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F1)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE1E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D5D9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CACE)
            override val primaryLightHighContrast = Color(0xFF5F0022)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF95003A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0E3400)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF1C5500)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF0E3400)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF1C5500)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF28171A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2529)
            override val outlineVariantLightHighContrast = Color(0xFF5E4246)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightHighContrast = Color(0xFFCEB2B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFECEE)
            override val surfaceContainerLightHighContrast = Color(0xFFFADBDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCDD0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDBFC3)
            override val primaryDark = Color(0xFFFFB2BE)
            override val onPrimaryDark = Color(0xFF660025)
            override val primaryContainerDark = Color(0xFFFF4E7C)
            override val onPrimaryContainerDark = Color(0xFF200007)
            override val secondaryDark = Color(0xFFA9FF80)
            override val onSecondaryDark = Color(0xFF103900)
            override val secondaryContainerDark = Color(0xFF62E91E)
            override val onSecondaryContainerDark = Color(0xFF226400)
            override val tertiaryDark = Color(0xFF7BDD4E)
            override val onTertiaryDark = Color(0xFF103900)
            override val tertiaryContainerDark = Color(0xFF46A517)
            override val onTertiaryContainerDark = Color(0xFF0C2F00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1F0F12)
            override val onBackgroundDark = Color(0xFFFADBDE)
            override val surfaceDark = Color(0xFF1F0F12)
            override val onSurfaceDark = Color(0xFFFADBDE)
            override val surfaceVariantDark = Color(0xFF5B3F43)
            override val onSurfaceVariantDark = Color(0xFFE4BDC2)
            override val outlineDark = Color(0xFFAB888C)
            override val outlineVariantDark = Color(0xFF5B3F43)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADBDE)
            override val inverseOnSurfaceDark = Color(0xFF3E2B2E)
            override val inversePrimaryDark = Color(0xFFBC004B)
            override val surfaceDimDark = Color(0xFF1F0F12)
            override val surfaceBrightDark = Color(0xFF483437)
            override val surfaceContainerLowestDark = Color(0xFF190A0C)
            override val surfaceContainerLowDark = Color(0xFF28171A)
            override val surfaceContainerDark = Color(0xFF2C1B1E)
            override val surfaceContainerHighDark = Color(0xFF372528)
            override val surfaceContainerHighestDark = Color(0xFF433032)
            override val primaryDarkMediumContrast = Color(0xFFFFD1D7)
            override val onPrimaryDarkMediumContrast = Color(0xFF52001C)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF4E7C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFA9FF80)
            override val onSecondaryDarkMediumContrast = Color(0xFF0F3600)
            override val secondaryContainerDarkMediumContrast = Color(0xFF62E91E)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF154400)
            override val tertiaryDarkMediumContrast = Color(0xFF90F462)
            override val onTertiaryDarkMediumContrast = Color(0xFF0B2C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF46A517)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADBDE)
            override val surfaceDarkMediumContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD2D7)
            override val outlineDarkMediumContrast = Color(0xFFCEA9AD)
            override val outlineVariantDarkMediumContrast = Color(0xFFAA878C)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372528)
            override val inversePrimaryDarkMediumContrast = Color(0xFF920039)
            override val surfaceDimDarkMediumContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkMediumContrast = Color(0xFF543F42)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF110406)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A191C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352326)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E30)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D383B)
            override val primaryDarkHighContrast = Color(0xFFFFEBED)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFACB9)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF200007)
            override val secondaryDarkHighContrast = Color(0xFFCAFFAC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF62E91E)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF051E00)
            override val tertiaryDarkHighContrast = Color(0xFFCAFFAC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF77D94B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF020E00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkHighContrast = Color(0xFFFADBDE)
            override val surfaceDarkHighContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBED)
            override val outlineVariantDarkHighContrast = Color(0xFFE0B9BE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF920039)
            override val surfaceDimDarkHighContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkHighContrast = Color(0xFF604A4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B1E)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2B2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3639)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF564144)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFFB80049)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE2165F)
            override val onPrimaryContainerLight = Color(0xFFFFFBFF)
            override val secondaryLight = Color(0xFF7E0049)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA31562)
            override val onSecondaryContainerLight = Color(0xFFFFB7D0)
            override val tertiaryLight = Color(0xFF6C5E00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE9CE1E)
            override val onTertiaryContainerLight = Color(0xFF645700)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF28171A)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF28171A)
            override val surfaceVariantLight = Color(0xFFFFD9DE)
            override val onSurfaceVariantLight = Color(0xFF5B3F43)
            override val outlineLight = Color(0xFF8F6F73)
            override val outlineVariantLight = Color(0xFFE4BDC2)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLight = Color(0xFFFFECEE)
            override val inversePrimaryLight = Color(0xFFFFB2BE)
            override val surfaceDimLight = Color(0xFFF1D3D6)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F1)
            override val surfaceContainerLight = Color(0xFFFFE9EA)
            override val surfaceContainerHighLight = Color(0xFFFFE1E4)
            override val surfaceContainerHighestLight = Color(0xFFFADBDE)
            override val primaryLightMediumContrast = Color(0xFF71002A)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFD70357)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6E003F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA31562)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFF8F8)
            override val tertiaryLightMediumContrast = Color(0xFF3F3600)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7D6D00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF28171A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF1C0D0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF492F33)
            override val outlineLightMediumContrast = Color(0xFF684B4F)
            override val outlineVariantLightMediumContrast = Color(0xFF856569)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFECEE)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightMediumContrast = Color(0xFFDDBFC3)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F1)
            override val surfaceContainerLightMediumContrast = Color(0xFFFFE1E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFF4D5D9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFE8CACE)
            override val primaryLightHighContrast = Color(0xFF5F0022)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF95003A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF5C0034)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF910055)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF332C00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF544900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF28171A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFFFD9DE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF3E2529)
            override val outlineVariantLightHighContrast = Color(0xFF5E4246)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF3E2B2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB2BE)
            override val surfaceDimLightHighContrast = Color(0xFFCEB2B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFECEE)
            override val surfaceContainerLightHighContrast = Color(0xFFFADBDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFEBCDD0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFDDBFC3)
            override val primaryDark = Color(0xFFFFB2BE)
            override val onPrimaryDark = Color(0xFF660025)
            override val primaryContainerDark = Color(0xFFFF4E7C)
            override val onPrimaryContainerDark = Color(0xFF200007)
            override val secondaryDark = Color(0xFFFFB0CD)
            override val onSecondaryDark = Color(0xFF640039)
            override val secondaryContainerDark = Color(0xFFA31562)
            override val onSecondaryContainerDark = Color(0xFFFFB7D0)
            override val tertiaryDark = Color(0xFFFFEB83)
            override val onTertiaryDark = Color(0xFF383000)
            override val tertiaryContainerDark = Color(0xFFE9CE1E)
            override val onTertiaryContainerDark = Color(0xFF645700)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1F0F12)
            override val onBackgroundDark = Color(0xFFFADBDE)
            override val surfaceDark = Color(0xFF1F0F12)
            override val onSurfaceDark = Color(0xFFFADBDE)
            override val surfaceVariantDark = Color(0xFF5B3F43)
            override val onSurfaceVariantDark = Color(0xFFE4BDC2)
            override val outlineDark = Color(0xFFAB888C)
            override val outlineVariantDark = Color(0xFF5B3F43)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFFADBDE)
            override val inverseOnSurfaceDark = Color(0xFF3E2B2E)
            override val inversePrimaryDark = Color(0xFFBC004B)
            override val surfaceDimDark = Color(0xFF1F0F12)
            override val surfaceBrightDark = Color(0xFF483437)
            override val surfaceContainerLowestDark = Color(0xFF190A0C)
            override val surfaceContainerLowDark = Color(0xFF28171A)
            override val surfaceContainerDark = Color(0xFF2C1B1E)
            override val surfaceContainerHighDark = Color(0xFF372528)
            override val surfaceContainerHighestDark = Color(0xFF433032)
            override val primaryDarkMediumContrast = Color(0xFFFFD1D7)
            override val onPrimaryDarkMediumContrast = Color(0xFF52001C)
            override val primaryContainerDarkMediumContrast = Color(0xFFFF4E7C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD0DF)
            override val onSecondaryDarkMediumContrast = Color(0xFF50002D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF0589F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFEB83)
            override val onTertiaryDarkMediumContrast = Color(0xFF372F00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE9CE1E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF443B00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkMediumContrast = Color(0xFFFADBDE)
            override val surfaceDarkMediumContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFFBD2D7)
            override val outlineDarkMediumContrast = Color(0xFFCEA9AD)
            override val outlineVariantDarkMediumContrast = Color(0xFFAA878C)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF372528)
            override val inversePrimaryDarkMediumContrast = Color(0xFF920039)
            override val surfaceDimDarkMediumContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkMediumContrast = Color(0xFF543F42)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF110406)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF2A191C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF352326)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF412E30)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF4D383B)
            override val primaryDarkHighContrast = Color(0xFFFFEBED)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFACB9)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF200007)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAAC9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF20000F)
            override val tertiaryDarkHighContrast = Color(0xFFFFF1AF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE9CE1E)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F1A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1F0F12)
            override val onBackgroundDarkHighContrast = Color(0xFFFADBDE)
            override val surfaceDarkHighContrast = Color(0xFF1F0F12)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF5B3F43)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBED)
            override val outlineVariantDarkHighContrast = Color(0xFFE0B9BE)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFFADBDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF920039)
            override val surfaceDimDarkHighContrast = Color(0xFF1F0F12)
            override val surfaceBrightDarkHighContrast = Color(0xFF604A4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF2C1B1E)
            override val surfaceContainerDarkHighContrast = Color(0xFF3E2B2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF4A3639)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF564144)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}