package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Blue : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("blue", "Blue")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF0061A4)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2196F3)
            override val onPrimaryContainerLight = Color(0xFF002C4F)
            override val secondaryLight = Color(0xFF006384)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF0A7EA5)
            override val onSecondaryContainerLight = Color(0xFFFBFCFF)
            override val tertiaryLight = Color(0xFF0426DD)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF3248F3)
            override val onTertiaryContainerLight = Color(0xFFD7D9FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8F9FF)
            override val onBackgroundLight = Color(0xFF181C22)
            override val surfaceLight = Color(0xFFF8F9FF)
            override val onSurfaceLight = Color(0xFF181C22)
            override val surfaceVariantLight = Color(0xFFDBE3F0)
            override val onSurfaceVariantLight = Color(0xFF404752)
            override val outlineLight = Color(0xFF707883)
            override val outlineVariantLight = Color(0xFFBFC7D4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3137)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F9)
            override val inversePrimaryLight = Color(0xFF9ECAFF)
            override val surfaceDimLight = Color(0xFFD7DAE2)
            override val surfaceBrightLight = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F3FC)
            override val surfaceContainerLight = Color(0xFFEBEEF6)
            override val surfaceContainerHighLight = Color(0xFFE5E8F0)
            override val surfaceContainerHighestLight = Color(0xFFDFE2EA)
            override val primaryLightMediumContrast = Color(0xFF003862)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0070BC)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003B50)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF00769C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF0019AC)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF3248F3)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C22)
            override val surfaceLightMediumContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1117)
            override val surfaceVariantLightMediumContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F3741)
            override val outlineLightMediumContrast = Color(0xFF4B535E)
            override val outlineVariantLightMediumContrast = Color(0xFF666E79)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F9)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC3C6CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F3FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5E8F0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED2D9)
            override val primaryLightHighContrast = Color(0xFF002E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004B81)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003042)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF004F6A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF001491)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF0526DD)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C22)
            override val surfaceLightHighContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D37)
            override val outlineVariantLightHighContrast = Color(0xFF424A55)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightHighContrast = Color(0xFFB5B9C0)
            override val surfaceBrightLightHighContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F9)
            override val surfaceContainerLightHighContrast = Color(0xFFDFE2EA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD1D4DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC3C6CE)
            override val primaryDark = Color(0xFF9ECAFF)
            override val onPrimaryDark = Color(0xFF003258)
            override val primaryContainerDark = Color(0xFF2196F3)
            override val onPrimaryContainerDark = Color(0xFF002C4F)
            override val secondaryDark = Color(0xFF7AD1FC)
            override val onSecondaryDark = Color(0xFF003548)
            override val secondaryContainerDark = Color(0xFF3D9AC3)
            override val onSecondaryContainerDark = Color(0xFF000C13)
            override val tertiaryDark = Color(0xFFBCC2FF)
            override val onTertiaryDark = Color(0xFF00169C)
            override val tertiaryContainerDark = Color(0xFF3248F3)
            override val onTertiaryContainerDark = Color(0xFFD7D9FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1419)
            override val onBackgroundDark = Color(0xFFDFE2EA)
            override val surfaceDark = Color(0xFF0F1419)
            override val onSurfaceDark = Color(0xFFDFE2EA)
            override val surfaceVariantDark = Color(0xFF404752)
            override val onSurfaceVariantDark = Color(0xFFBFC7D4)
            override val outlineDark = Color(0xFF89919D)
            override val outlineVariantDark = Color(0xFF404752)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDark = Color(0xFF2D3137)
            override val inversePrimaryDark = Color(0xFF0061A4)
            override val surfaceDimDark = Color(0xFF0F1419)
            override val surfaceBrightDark = Color(0xFF353940)
            override val surfaceContainerLowestDark = Color(0xFF0A0E14)
            override val surfaceContainerLowDark = Color(0xFF181C22)
            override val surfaceContainerDark = Color(0xFF1C2026)
            override val surfaceContainerHighDark = Color(0xFF262A30)
            override val surfaceContainerHighestDark = Color(0xFF31353B)
            override val primaryDarkMediumContrast = Color(0xFFC6DEFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002746)
            override val primaryContainerDarkMediumContrast = Color(0xFF2196F3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFB2E3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002939)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3D9AC3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD8DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00107F)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7786FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1419)
            override val onBackgroundDarkMediumContrast = Color(0xFFDFE2EA)
            override val surfaceDarkMediumContrast = Color(0xFF0F1419)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD5DDEA)
            override val outlineDarkMediumContrast = Color(0xFFABB2BF)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262A30)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004A7F)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41454B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3339)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E44)
            override val primaryDarkHighContrast = Color(0xFFE8F0FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF97C6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C1B)
            override val secondaryDarkHighContrast = Color(0xFFE0F3FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF76CDF8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C13)
            override val tertiaryDarkHighContrast = Color(0xFFF0EEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB7BEFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000337)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1419)
            override val onBackgroundDarkHighContrast = Color(0xFFDFE2EA)
            override val surfaceDarkHighContrast = Color(0xFF0F1419)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F0FE)
            override val outlineVariantDarkHighContrast = Color(0xFFBBC3D0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004A7F)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5057)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2026)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3137)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF0061A4)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2196F3)
            override val onPrimaryContainerLight = Color(0xFF002C4F)
            override val secondaryLight = Color(0xFF006384)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF0A7EA5)
            override val onSecondaryContainerLight = Color(0xFFFBFCFF)
            override val tertiaryLight = Color(0xFF3E6470)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC8F0FF)
            override val onTertiaryContainerLight = Color(0xFF486E7B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8F9FF)
            override val onBackgroundLight = Color(0xFF181C22)
            override val surfaceLight = Color(0xFFF8F9FF)
            override val onSurfaceLight = Color(0xFF181C22)
            override val surfaceVariantLight = Color(0xFFDBE3F0)
            override val onSurfaceVariantLight = Color(0xFF404752)
            override val outlineLight = Color(0xFF707883)
            override val outlineVariantLight = Color(0xFFBFC7D4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3137)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F9)
            override val inversePrimaryLight = Color(0xFF9ECAFF)
            override val surfaceDimLight = Color(0xFFD7DAE2)
            override val surfaceBrightLight = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F3FC)
            override val surfaceContainerLight = Color(0xFFEBEEF6)
            override val surfaceContainerHighLight = Color(0xFFE5E8F0)
            override val surfaceContainerHighestLight = Color(0xFFDFE2EA)
            override val primaryLightMediumContrast = Color(0xFF003862)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0070BC)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003B50)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF00769C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF113B47)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF4D737F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C22)
            override val surfaceLightMediumContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1117)
            override val surfaceVariantLightMediumContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F3741)
            override val outlineLightMediumContrast = Color(0xFF4B535E)
            override val outlineVariantLightMediumContrast = Color(0xFF666E79)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F9)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC3C6CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F3FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5E8F0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED2D9)
            override val primaryLightHighContrast = Color(0xFF002E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004B81)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003042)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF004F6A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF02313C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF274E5A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C22)
            override val surfaceLightHighContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D37)
            override val outlineVariantLightHighContrast = Color(0xFF424A55)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightHighContrast = Color(0xFFB5B9C0)
            override val surfaceBrightLightHighContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F9)
            override val surfaceContainerLightHighContrast = Color(0xFFDFE2EA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD1D4DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC3C6CE)
            override val primaryDark = Color(0xFF9ECAFF)
            override val onPrimaryDark = Color(0xFF003258)
            override val primaryContainerDark = Color(0xFF2196F3)
            override val onPrimaryContainerDark = Color(0xFF002C4F)
            override val secondaryDark = Color(0xFF7AD1FC)
            override val onSecondaryDark = Color(0xFF003548)
            override val secondaryContainerDark = Color(0xFF3D9AC3)
            override val onSecondaryContainerDark = Color(0xFF000C13)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF083541)
            override val tertiaryContainerDark = Color(0xFFC1E9F8)
            override val onTertiaryContainerDark = Color(0xFF446A77)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1419)
            override val onBackgroundDark = Color(0xFFDFE2EA)
            override val surfaceDark = Color(0xFF0F1419)
            override val onSurfaceDark = Color(0xFFDFE2EA)
            override val surfaceVariantDark = Color(0xFF404752)
            override val onSurfaceVariantDark = Color(0xFFBFC7D4)
            override val outlineDark = Color(0xFF89919D)
            override val outlineVariantDark = Color(0xFF404752)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDark = Color(0xFF2D3137)
            override val inversePrimaryDark = Color(0xFF0061A4)
            override val surfaceDimDark = Color(0xFF0F1419)
            override val surfaceBrightDark = Color(0xFF353940)
            override val surfaceContainerLowestDark = Color(0xFF0A0E14)
            override val surfaceContainerLowDark = Color(0xFF181C22)
            override val surfaceContainerDark = Color(0xFF1C2026)
            override val surfaceContainerHighDark = Color(0xFF262A30)
            override val surfaceContainerHighestDark = Color(0xFF31353B)
            override val primaryDarkMediumContrast = Color(0xFFC6DEFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002746)
            override val primaryContainerDarkMediumContrast = Color(0xFF2196F3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFB2E3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002939)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3D9AC3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF083541)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC1E9F8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF264D59)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1419)
            override val onBackgroundDarkMediumContrast = Color(0xFFDFE2EA)
            override val surfaceDarkMediumContrast = Color(0xFF0F1419)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD5DDEA)
            override val outlineDarkMediumContrast = Color(0xFFABB2BF)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262A30)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004A7F)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41454B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3339)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E44)
            override val primaryDarkHighContrast = Color(0xFFE8F0FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF97C6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C1B)
            override val secondaryDarkHighContrast = Color(0xFFE0F3FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF76CDF8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C13)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC1E9F8)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF002F3A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1419)
            override val onBackgroundDarkHighContrast = Color(0xFFDFE2EA)
            override val surfaceDarkHighContrast = Color(0xFF0F1419)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F0FE)
            override val outlineVariantDarkHighContrast = Color(0xFFBBC3D0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004A7F)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5057)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2026)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3137)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF0061A4)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2196F3)
            override val onPrimaryContainerLight = Color(0xFF002C4F)
            override val secondaryLight = Color(0xFF954A00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFF38221)
            override val onSecondaryContainerLight = Color(0xFF5A2A00)
            override val tertiaryLight = Color(0xFF8A4400)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFAA5B17)
            override val onTertiaryContainerLight = Color(0xFFFFF2EC)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8F9FF)
            override val onBackgroundLight = Color(0xFF181C22)
            override val surfaceLight = Color(0xFFF8F9FF)
            override val onSurfaceLight = Color(0xFF181C22)
            override val surfaceVariantLight = Color(0xFFDBE3F0)
            override val onSurfaceVariantLight = Color(0xFF404752)
            override val outlineLight = Color(0xFF707883)
            override val outlineVariantLight = Color(0xFFBFC7D4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3137)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F9)
            override val inversePrimaryLight = Color(0xFF9ECAFF)
            override val surfaceDimLight = Color(0xFFD7DAE2)
            override val surfaceBrightLight = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F3FC)
            override val surfaceContainerLight = Color(0xFFEBEEF6)
            override val surfaceContainerHighLight = Color(0xFFE5E8F0)
            override val surfaceContainerHighestLight = Color(0xFFDFE2EA)
            override val primaryLightMediumContrast = Color(0xFF003862)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0070BC)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF592900)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFAB5500)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF582900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA75814)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C22)
            override val surfaceLightMediumContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1117)
            override val surfaceVariantLightMediumContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F3741)
            override val outlineLightMediumContrast = Color(0xFF4B535E)
            override val outlineVariantLightMediumContrast = Color(0xFF666E79)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F9)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC3C6CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F3FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5E8F0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED2D9)
            override val primaryLightHighContrast = Color(0xFF002E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004B81)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF492100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF753800)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF492100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF753900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C22)
            override val surfaceLightHighContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D37)
            override val outlineVariantLightHighContrast = Color(0xFF424A55)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightHighContrast = Color(0xFFB5B9C0)
            override val surfaceBrightLightHighContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F9)
            override val surfaceContainerLightHighContrast = Color(0xFFDFE2EA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD1D4DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC3C6CE)
            override val primaryDark = Color(0xFF9ECAFF)
            override val onPrimaryDark = Color(0xFF003258)
            override val primaryContainerDark = Color(0xFF2196F3)
            override val onPrimaryContainerDark = Color(0xFF002C4F)
            override val secondaryDark = Color(0xFFFFB786)
            override val onSecondaryDark = Color(0xFF502400)
            override val secondaryContainerDark = Color(0xFFF38221)
            override val onSecondaryContainerDark = Color(0xFF5A2A00)
            override val tertiaryDark = Color(0xFFFFB785)
            override val onTertiaryDark = Color(0xFF502500)
            override val tertiaryContainerDark = Color(0xFFAA5B17)
            override val onTertiaryContainerDark = Color(0xFFFFF2EC)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1419)
            override val onBackgroundDark = Color(0xFFDFE2EA)
            override val surfaceDark = Color(0xFF0F1419)
            override val onSurfaceDark = Color(0xFFDFE2EA)
            override val surfaceVariantDark = Color(0xFF404752)
            override val onSurfaceVariantDark = Color(0xFFBFC7D4)
            override val outlineDark = Color(0xFF89919D)
            override val outlineVariantDark = Color(0xFF404752)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDark = Color(0xFF2D3137)
            override val inversePrimaryDark = Color(0xFF0061A4)
            override val surfaceDimDark = Color(0xFF0F1419)
            override val surfaceBrightDark = Color(0xFF353940)
            override val surfaceContainerLowestDark = Color(0xFF0A0E14)
            override val surfaceContainerLowDark = Color(0xFF181C22)
            override val surfaceContainerDark = Color(0xFF1C2026)
            override val surfaceContainerHighDark = Color(0xFF262A30)
            override val surfaceContainerHighestDark = Color(0xFF31353B)
            override val primaryDarkMediumContrast = Color(0xFFC6DEFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002746)
            override val primaryContainerDarkMediumContrast = Color(0xFF2196F3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onSecondaryDarkMediumContrast = Color(0xFF401C00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFF38221)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF250D00)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onTertiaryDarkMediumContrast = Color(0xFF3F1C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD27B36)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1419)
            override val onBackgroundDarkMediumContrast = Color(0xFFDFE2EA)
            override val surfaceDarkMediumContrast = Color(0xFF0F1419)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD5DDEA)
            override val outlineDarkMediumContrast = Color(0xFFABB2BF)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262A30)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004A7F)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41454B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3339)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E44)
            override val primaryDarkHighContrast = Color(0xFFE8F0FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF97C6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C1B)
            override val secondaryDarkHighContrast = Color(0xFFFFECE2)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB17C)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF180700)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1419)
            override val onBackgroundDarkHighContrast = Color(0xFFDFE2EA)
            override val surfaceDarkHighContrast = Color(0xFF0F1419)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F0FE)
            override val outlineVariantDarkHighContrast = Color(0xFFBBC3D0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004A7F)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5057)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2026)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3137)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF0061A4)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF2196F3)
            override val onPrimaryContainerLight = Color(0xFF002C4F)
            override val secondaryLight = Color(0xFF006384)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF0A7EA5)
            override val onSecondaryContainerLight = Color(0xFFFBFCFF)
            override val tertiaryLight = Color(0xFFB3006B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE00088)
            override val onTertiaryContainerLight = Color(0xFFFFFBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8F9FF)
            override val onBackgroundLight = Color(0xFF181C22)
            override val surfaceLight = Color(0xFFF8F9FF)
            override val onSurfaceLight = Color(0xFF181C22)
            override val surfaceVariantLight = Color(0xFFDBE3F0)
            override val onSurfaceVariantLight = Color(0xFF404752)
            override val outlineLight = Color(0xFF707883)
            override val outlineVariantLight = Color(0xFFBFC7D4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3137)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F9)
            override val inversePrimaryLight = Color(0xFF9ECAFF)
            override val surfaceDimLight = Color(0xFFD7DAE2)
            override val surfaceBrightLight = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F3FC)
            override val surfaceContainerLight = Color(0xFFEBEEF6)
            override val surfaceContainerHighLight = Color(0xFFE5E8F0)
            override val surfaceContainerHighestLight = Color(0xFFDFE2EA)
            override val primaryLightMediumContrast = Color(0xFF003862)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF0070BC)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003B50)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF00769C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF6E0040)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFD2007F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C22)
            override val surfaceLightMediumContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1117)
            override val surfaceVariantLightMediumContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2F3741)
            override val outlineLightMediumContrast = Color(0xFF4B535E)
            override val outlineVariantLightMediumContrast = Color(0xFF666E79)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F9)
            override val inversePrimaryLightMediumContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightMediumContrast = Color(0xFFC3C6CE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F3FC)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5E8F0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE5)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCED2D9)
            override val primaryLightHighContrast = Color(0xFF002E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF004B81)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003042)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF004F6A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF5C0035)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF910056)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C22)
            override val surfaceLightHighContrast = Color(0xFFF8F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDBE3F0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF252D37)
            override val outlineVariantLightHighContrast = Color(0xFF424A55)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3137)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF9ECAFF)
            override val surfaceDimLightHighContrast = Color(0xFFB5B9C0)
            override val surfaceBrightLightHighContrast = Color(0xFFF8F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F9)
            override val surfaceContainerLightHighContrast = Color(0xFFDFE2EA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD1D4DC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC3C6CE)
            override val primaryDark = Color(0xFF9ECAFF)
            override val onPrimaryDark = Color(0xFF003258)
            override val primaryContainerDark = Color(0xFF2196F3)
            override val onPrimaryContainerDark = Color(0xFF002C4F)
            override val secondaryDark = Color(0xFF7AD1FC)
            override val onSecondaryDark = Color(0xFF003548)
            override val secondaryContainerDark = Color(0xFF3D9AC3)
            override val onSecondaryContainerDark = Color(0xFF000C13)
            override val tertiaryDark = Color(0xFFFFB0CD)
            override val onTertiaryDark = Color(0xFF640039)
            override val tertiaryContainerDark = Color(0xFFFF45A3)
            override val onTertiaryContainerDark = Color(0xFF3B0020)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1419)
            override val onBackgroundDark = Color(0xFFDFE2EA)
            override val surfaceDark = Color(0xFF0F1419)
            override val onSurfaceDark = Color(0xFFDFE2EA)
            override val surfaceVariantDark = Color(0xFF404752)
            override val onSurfaceVariantDark = Color(0xFFBFC7D4)
            override val outlineDark = Color(0xFF89919D)
            override val outlineVariantDark = Color(0xFF404752)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDark = Color(0xFF2D3137)
            override val inversePrimaryDark = Color(0xFF0061A4)
            override val surfaceDimDark = Color(0xFF0F1419)
            override val surfaceBrightDark = Color(0xFF353940)
            override val surfaceContainerLowestDark = Color(0xFF0A0E14)
            override val surfaceContainerLowDark = Color(0xFF181C22)
            override val surfaceContainerDark = Color(0xFF1C2026)
            override val surfaceContainerHighDark = Color(0xFF262A30)
            override val surfaceContainerHighestDark = Color(0xFF31353B)
            override val primaryDarkMediumContrast = Color(0xFFC6DEFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002746)
            override val primaryContainerDarkMediumContrast = Color(0xFF2196F3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFB2E3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002939)
            override val secondaryContainerDarkMediumContrast = Color(0xFF3D9AC3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD0DF)
            override val onTertiaryDarkMediumContrast = Color(0xFF50002D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFF45A3)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1419)
            override val onBackgroundDarkMediumContrast = Color(0xFFDFE2EA)
            override val surfaceDarkMediumContrast = Color(0xFF0F1419)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD5DDEA)
            override val outlineDarkMediumContrast = Color(0xFFABB2BF)
            override val outlineVariantDarkMediumContrast = Color(0xFF89919D)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF262A30)
            override val inversePrimaryDarkMediumContrast = Color(0xFF004A7F)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41454B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF04080D)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E24)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282E)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3339)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E44)
            override val primaryDarkHighContrast = Color(0xFFE8F0FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF97C6FF)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C1B)
            override val secondaryDarkHighContrast = Color(0xFFE0F3FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF76CDF8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C13)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAACA)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF20000F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1419)
            override val onBackgroundDarkHighContrast = Color(0xFFDFE2EA)
            override val surfaceDarkHighContrast = Color(0xFF0F1419)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF404752)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE9F0FE)
            override val outlineVariantDarkHighContrast = Color(0xFFBBC3D0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDFE2EA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF004A7F)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1419)
            override val surfaceBrightDarkHighContrast = Color(0xFF4C5057)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2026)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3137)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C42)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}