package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Cyan : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("cyan", "Cyan")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF006876)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF00BCD4)
            override val onPrimaryContainerLight = Color(0xFF004650)
            override val secondaryLight = Color(0xFF00666D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF00818A)
            override val onSecondaryContainerLight = Color(0xFFF5FEFF)
            override val tertiaryLight = Color(0xFF00229C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF0333D4)
            override val onTertiaryContainerLight = Color(0xFFADB8FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF4FAFC)
            override val onBackgroundLight = Color(0xFF161D1E)
            override val surfaceLight = Color(0xFFF4FAFC)
            override val onSurfaceLight = Color(0xFF161D1E)
            override val surfaceVariantLight = Color(0xFFD7E5E8)
            override val onSurfaceVariantLight = Color(0xFF3C494C)
            override val outlineLight = Color(0xFF6C797C)
            override val outlineVariantLight = Color(0xFFBBC9CC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B3133)
            override val inverseOnSurfaceLight = Color(0xFFECF2F3)
            override val inversePrimaryLight = Color(0xFF44D8F1)
            override val surfaceDimLight = Color(0xFFD5DBDD)
            override val surfaceBrightLight = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F6)
            override val surfaceContainerLight = Color(0xFFE9EFF0)
            override val surfaceContainerHighLight = Color(0xFFE3E9EB)
            override val surfaceContainerHighestLight = Color(0xFFDDE3E5)
            override val primaryLightMediumContrast = Color(0xFF003C45)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007888)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D41)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007981)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF00229C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF0333D4)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFE6E7FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightMediumContrast = Color(0xFF161D1E)
            override val surfaceLightMediumContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightMediumContrast = Color(0xFF0C1214)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C383B)
            override val outlineLightMediumContrast = Color(0xFF485558)
            override val outlineVariantLightMediumContrast = Color(0xFF626F72)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFECF2F3)
            override val inversePrimaryLightMediumContrast = Color(0xFF44D8F1)
            override val surfaceDimLightMediumContrast = Color(0xFFC1C8C9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F6)
            override val surfaceContainerLightMediumContrast = Color(0xFFE3E9EB)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD8DEDF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCCD3D4)
            override val primaryLightHighContrast = Color(0xFF003139)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00515C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003235)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005257)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF001C85)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF0031CF)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightHighContrast = Color(0xFF161D1E)
            override val surfaceLightHighContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222E31)
            override val outlineVariantLightHighContrast = Color(0xFF3F4B4E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF44D8F1)
            override val surfaceDimLightHighContrast = Color(0xFFB3BABB)
            override val surfaceBrightLightHighContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFECF2F3)
            override val surfaceContainerLightHighContrast = Color(0xFFDDE3E5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCFD5D7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC1C8C9)
            override val primaryDark = Color(0xFF44D8F1)
            override val onPrimaryDark = Color(0xFF00363E)
            override val primaryContainerDark = Color(0xFF00BCD4)
            override val onPrimaryContainerDark = Color(0xFF004650)
            override val secondaryDark = Color(0xFF6FD6DF)
            override val onSecondaryDark = Color(0xFF00363A)
            override val secondaryContainerDark = Color(0xFF2E9FA8)
            override val onSecondaryContainerDark = Color(0xFF001618)
            override val tertiaryDark = Color(0xFFBAC3FF)
            override val onTertiaryDark = Color(0xFF001F90)
            override val tertiaryContainerDark = Color(0xFF0333D4)
            override val onTertiaryContainerDark = Color(0xFFADB8FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E1416)
            override val onBackgroundDark = Color(0xFFDDE3E5)
            override val surfaceDark = Color(0xFF0E1416)
            override val onSurfaceDark = Color(0xFFDDE3E5)
            override val surfaceVariantDark = Color(0xFF3C494C)
            override val onSurfaceVariantDark = Color(0xFFBBC9CC)
            override val outlineDark = Color(0xFF869396)
            override val outlineVariantDark = Color(0xFF3C494C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDark = Color(0xFF2B3133)
            override val inversePrimaryDark = Color(0xFF006876)
            override val surfaceDimDark = Color(0xFF0E1416)
            override val surfaceBrightDark = Color(0xFF343A3C)
            override val surfaceContainerLowestDark = Color(0xFF090F11)
            override val surfaceContainerLowDark = Color(0xFF161D1E)
            override val surfaceContainerDark = Color(0xFF1A2122)
            override val surfaceContainerHighDark = Color(0xFF252B2C)
            override val surfaceContainerHighestDark = Color(0xFF2F3637)
            override val primaryDarkMediumContrast = Color(0xFF86EBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002A31)
            override val primaryContainerDarkMediumContrast = Color(0xFF00BCD4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF00252B)
            override val secondaryDarkMediumContrast = Color(0xFF86ECF6)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B2E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2E9FA8)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD6DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF001775)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7287FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E1416)
            override val onBackgroundDarkMediumContrast = Color(0xFFDDE3E5)
            override val surfaceDarkMediumContrast = Color(0xFF0E1416)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1DFE2)
            override val outlineDarkMediumContrast = Color(0xFFA7B4B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF859396)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2D)
            override val inversePrimaryDarkMediumContrast = Color(0xFF00505B)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3F4647)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040809)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F20)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23292A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D3435)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF383F40)
            override val primaryDarkHighContrast = Color(0xFFD1F6FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF3ED4ED)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D11)
            override val secondaryDarkHighContrast = Color(0xFFC3FAFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF6BD2DB)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0F)
            override val tertiaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB5BFFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000532)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E1416)
            override val onBackgroundDarkHighContrast = Color(0xFFDDE3E5)
            override val surfaceDarkHighContrast = Color(0xFF0E1416)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F2F6)
            override val outlineVariantDarkHighContrast = Color(0xFFB7C5C8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF00505B)
            override val surfaceDimDarkHighContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5153)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A2122)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B3133)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF363C3E)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414849)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF006876)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF00BCD4)
            override val onPrimaryContainerLight = Color(0xFF004650)
            override val secondaryLight = Color(0xFF00666D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF00818A)
            override val onSecondaryContainerLight = Color(0xFFF5FEFF)
            override val tertiaryLight = Color(0xFF2B676B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFBFFBFF)
            override val onTertiaryContainerLight = Color(0xFF3B767A)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF4FAFC)
            override val onBackgroundLight = Color(0xFF161D1E)
            override val surfaceLight = Color(0xFFF4FAFC)
            override val onSurfaceLight = Color(0xFF161D1E)
            override val surfaceVariantLight = Color(0xFFD7E5E8)
            override val onSurfaceVariantLight = Color(0xFF3C494C)
            override val outlineLight = Color(0xFF6C797C)
            override val outlineVariantLight = Color(0xFFBBC9CC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B3133)
            override val inverseOnSurfaceLight = Color(0xFFECF2F3)
            override val inversePrimaryLight = Color(0xFF44D8F1)
            override val surfaceDimLight = Color(0xFFD5DBDD)
            override val surfaceBrightLight = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F6)
            override val surfaceContainerLight = Color(0xFFE9EFF0)
            override val surfaceContainerHighLight = Color(0xFFE3E9EB)
            override val surfaceContainerHighestLight = Color(0xFFDDE3E5)
            override val primaryLightMediumContrast = Color(0xFF003C45)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007888)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D41)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007981)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003D40)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF3B767A)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightMediumContrast = Color(0xFF161D1E)
            override val surfaceLightMediumContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightMediumContrast = Color(0xFF0C1214)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C383B)
            override val outlineLightMediumContrast = Color(0xFF485558)
            override val outlineVariantLightMediumContrast = Color(0xFF626F72)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFECF2F3)
            override val inversePrimaryLightMediumContrast = Color(0xFF44D8F1)
            override val surfaceDimLightMediumContrast = Color(0xFFC1C8C9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F6)
            override val surfaceContainerLightMediumContrast = Color(0xFFE3E9EB)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD8DEDF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCCD3D4)
            override val primaryLightHighContrast = Color(0xFF003139)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00515C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003235)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005257)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003235)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF0D5155)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightHighContrast = Color(0xFF161D1E)
            override val surfaceLightHighContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222E31)
            override val outlineVariantLightHighContrast = Color(0xFF3F4B4E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF44D8F1)
            override val surfaceDimLightHighContrast = Color(0xFFB3BABB)
            override val surfaceBrightLightHighContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFECF2F3)
            override val surfaceContainerLightHighContrast = Color(0xFFDDE3E5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCFD5D7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC1C8C9)
            override val primaryDark = Color(0xFF44D8F1)
            override val onPrimaryDark = Color(0xFF00363E)
            override val primaryContainerDark = Color(0xFF00BCD4)
            override val onPrimaryContainerDark = Color(0xFF004650)
            override val secondaryDark = Color(0xFF6FD6DF)
            override val onSecondaryDark = Color(0xFF00363A)
            override val secondaryContainerDark = Color(0xFF2E9FA8)
            override val onSecondaryContainerDark = Color(0xFF001618)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF003739)
            override val tertiaryContainerDark = Color(0xFFB1EDF1)
            override val onTertiaryContainerDark = Color(0xFF316D71)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E1416)
            override val onBackgroundDark = Color(0xFFDDE3E5)
            override val surfaceDark = Color(0xFF0E1416)
            override val onSurfaceDark = Color(0xFFDDE3E5)
            override val surfaceVariantDark = Color(0xFF3C494C)
            override val onSurfaceVariantDark = Color(0xFFBBC9CC)
            override val outlineDark = Color(0xFF869396)
            override val outlineVariantDark = Color(0xFF3C494C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDark = Color(0xFF2B3133)
            override val inversePrimaryDark = Color(0xFF006876)
            override val surfaceDimDark = Color(0xFF0E1416)
            override val surfaceBrightDark = Color(0xFF343A3C)
            override val surfaceContainerLowestDark = Color(0xFF090F11)
            override val surfaceContainerLowDark = Color(0xFF161D1E)
            override val surfaceContainerDark = Color(0xFF1A2122)
            override val surfaceContainerHighDark = Color(0xFF252B2C)
            override val surfaceContainerHighestDark = Color(0xFF2F3637)
            override val primaryDarkMediumContrast = Color(0xFF86EBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002A31)
            override val primaryContainerDarkMediumContrast = Color(0xFF00BCD4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF00252B)
            override val secondaryDarkMediumContrast = Color(0xFF86ECF6)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B2E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2E9FA8)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF003739)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB1EDF1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF0A5054)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E1416)
            override val onBackgroundDarkMediumContrast = Color(0xFFDDE3E5)
            override val surfaceDarkMediumContrast = Color(0xFF0E1416)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1DFE2)
            override val outlineDarkMediumContrast = Color(0xFFA7B4B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF859396)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2D)
            override val inversePrimaryDarkMediumContrast = Color(0xFF00505B)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3F4647)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040809)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F20)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23292A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D3435)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF383F40)
            override val primaryDarkHighContrast = Color(0xFFD1F6FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF3ED4ED)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D11)
            override val secondaryDarkHighContrast = Color(0xFFC3FAFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF6BD2DB)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0F)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB1EDF1)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF003032)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E1416)
            override val onBackgroundDarkHighContrast = Color(0xFFDDE3E5)
            override val surfaceDarkHighContrast = Color(0xFF0E1416)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F2F6)
            override val outlineVariantDarkHighContrast = Color(0xFFB7C5C8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF00505B)
            override val surfaceDimDarkHighContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5153)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A2122)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B3133)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF363C3E)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414849)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006876)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF00BCD4)
            override val onPrimaryContainerLight = Color(0xFF004650)
            override val secondaryLight = Color(0xFF9D3F00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFC55000)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF6F2C00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF943D00)
            override val onTertiaryContainerLight = Color(0xFFFFC0A2)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF4FAFC)
            override val onBackgroundLight = Color(0xFF161D1E)
            override val surfaceLight = Color(0xFFF4FAFC)
            override val onSurfaceLight = Color(0xFF161D1E)
            override val surfaceVariantLight = Color(0xFFD7E5E8)
            override val onSurfaceVariantLight = Color(0xFF3C494C)
            override val outlineLight = Color(0xFF6C797C)
            override val outlineVariantLight = Color(0xFFBBC9CC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B3133)
            override val inverseOnSurfaceLight = Color(0xFFECF2F3)
            override val inversePrimaryLight = Color(0xFF44D8F1)
            override val surfaceDimLight = Color(0xFFD5DBDD)
            override val surfaceBrightLight = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F6)
            override val surfaceContainerLight = Color(0xFFE9EFF0)
            override val surfaceContainerHighLight = Color(0xFFE3E9EB)
            override val surfaceContainerHighestLight = Color(0xFFDDE3E5)
            override val primaryLightMediumContrast = Color(0xFF003C45)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007888)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF602300)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFB94B00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5F2400)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF943D00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFDFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightMediumContrast = Color(0xFF161D1E)
            override val surfaceLightMediumContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightMediumContrast = Color(0xFF0C1214)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C383B)
            override val outlineLightMediumContrast = Color(0xFF485558)
            override val outlineVariantLightMediumContrast = Color(0xFF626F72)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFECF2F3)
            override val inversePrimaryLightMediumContrast = Color(0xFF44D8F1)
            override val surfaceDimLightMediumContrast = Color(0xFFC1C8C9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F6)
            override val surfaceContainerLightMediumContrast = Color(0xFFE3E9EB)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD8DEDF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCCD3D4)
            override val primaryLightHighContrast = Color(0xFF003139)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00515C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF501C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF7F3100)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4F1D00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7D3200)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightHighContrast = Color(0xFF161D1E)
            override val surfaceLightHighContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222E31)
            override val outlineVariantLightHighContrast = Color(0xFF3F4B4E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF44D8F1)
            override val surfaceDimLightHighContrast = Color(0xFFB3BABB)
            override val surfaceBrightLightHighContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFECF2F3)
            override val surfaceContainerLightHighContrast = Color(0xFFDDE3E5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCFD5D7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC1C8C9)
            override val primaryDark = Color(0xFF44D8F1)
            override val onPrimaryDark = Color(0xFF00363E)
            override val primaryContainerDark = Color(0xFF00BCD4)
            override val onPrimaryContainerDark = Color(0xFF004650)
            override val secondaryDark = Color(0xFFFFB694)
            override val onSecondaryDark = Color(0xFF571F00)
            override val secondaryContainerDark = Color(0xFFED691A)
            override val onSecondaryContainerDark = Color(0xFF290B00)
            override val tertiaryDark = Color(0xFFFFB692)
            override val onTertiaryDark = Color(0xFF552000)
            override val tertiaryContainerDark = Color(0xFF943D00)
            override val onTertiaryContainerDark = Color(0xFFFFC0A2)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E1416)
            override val onBackgroundDark = Color(0xFFDDE3E5)
            override val surfaceDark = Color(0xFF0E1416)
            override val onSurfaceDark = Color(0xFFDDE3E5)
            override val surfaceVariantDark = Color(0xFF3C494C)
            override val onSurfaceVariantDark = Color(0xFFBBC9CC)
            override val outlineDark = Color(0xFF869396)
            override val outlineVariantDark = Color(0xFF3C494C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDark = Color(0xFF2B3133)
            override val inversePrimaryDark = Color(0xFF006876)
            override val surfaceDimDark = Color(0xFF0E1416)
            override val surfaceBrightDark = Color(0xFF343A3C)
            override val surfaceContainerLowestDark = Color(0xFF090F11)
            override val surfaceContainerLowDark = Color(0xFF161D1E)
            override val surfaceContainerDark = Color(0xFF1A2122)
            override val surfaceContainerHighDark = Color(0xFF252B2C)
            override val surfaceContainerHighestDark = Color(0xFF2F3637)
            override val primaryDarkMediumContrast = Color(0xFF86EBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002A31)
            override val primaryContainerDarkMediumContrast = Color(0xFF00BCD4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF00252B)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3C0)
            override val onSecondaryDarkMediumContrast = Color(0xFF451700)
            override val secondaryContainerDarkMediumContrast = Color(0xFFED691A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3BF)
            override val onTertiaryDarkMediumContrast = Color(0xFF441800)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDD7439)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E1416)
            override val onBackgroundDarkMediumContrast = Color(0xFFDDE3E5)
            override val surfaceDarkMediumContrast = Color(0xFF0E1416)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1DFE2)
            override val outlineDarkMediumContrast = Color(0xFFA7B4B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF859396)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2D)
            override val inversePrimaryDarkMediumContrast = Color(0xFF00505B)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3F4647)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040809)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F20)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23292A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D3435)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF383F40)
            override val primaryDarkHighContrast = Color(0xFFD1F6FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF3ED4ED)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D11)
            override val secondaryDarkHighContrast = Color(0xFFFFECE5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB08B)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB089)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1A0500)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E1416)
            override val onBackgroundDarkHighContrast = Color(0xFFDDE3E5)
            override val surfaceDarkHighContrast = Color(0xFF0E1416)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F2F6)
            override val outlineVariantDarkHighContrast = Color(0xFFB7C5C8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF00505B)
            override val surfaceDimDarkHighContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5153)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A2122)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B3133)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF363C3E)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414849)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF006876)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF00BCD4)
            override val onPrimaryContainerLight = Color(0xFF004650)
            override val secondaryLight = Color(0xFF00666D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF00818A)
            override val onSecondaryContainerLight = Color(0xFFF5FEFF)
            override val tertiaryLight = Color(0xFFA80076)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFD40096)
            override val onTertiaryContainerLight = Color(0xFFFFF2F5)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF4FAFC)
            override val onBackgroundLight = Color(0xFF161D1E)
            override val surfaceLight = Color(0xFFF4FAFC)
            override val onSurfaceLight = Color(0xFF161D1E)
            override val surfaceVariantLight = Color(0xFFD7E5E8)
            override val onSurfaceVariantLight = Color(0xFF3C494C)
            override val outlineLight = Color(0xFF6C797C)
            override val outlineVariantLight = Color(0xFFBBC9CC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2B3133)
            override val inverseOnSurfaceLight = Color(0xFFECF2F3)
            override val inversePrimaryLight = Color(0xFF44D8F1)
            override val surfaceDimLight = Color(0xFFD5DBDD)
            override val surfaceBrightLight = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F6)
            override val surfaceContainerLight = Color(0xFFE9EFF0)
            override val surfaceContainerHighLight = Color(0xFFE3E9EB)
            override val surfaceContainerHighestLight = Color(0xFFDDE3E5)
            override val primaryLightMediumContrast = Color(0xFF003C45)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007888)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D41)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF007981)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF6C004B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFCE0092)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightMediumContrast = Color(0xFF161D1E)
            override val surfaceLightMediumContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightMediumContrast = Color(0xFF0C1214)
            override val surfaceVariantLightMediumContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2C383B)
            override val outlineLightMediumContrast = Color(0xFF485558)
            override val outlineVariantLightMediumContrast = Color(0xFF626F72)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFECF2F3)
            override val inversePrimaryLightMediumContrast = Color(0xFF44D8F1)
            override val surfaceDimLightMediumContrast = Color(0xFFC1C8C9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F6)
            override val surfaceContainerLightMediumContrast = Color(0xFFE3E9EB)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD8DEDF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCCD3D4)
            override val primaryLightHighContrast = Color(0xFF003139)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00515C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003235)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005257)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF5A003E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF8E0063)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF4FAFC)
            override val onBackgroundLightHighContrast = Color(0xFF161D1E)
            override val surfaceLightHighContrast = Color(0xFFF4FAFC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD7E5E8)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF222E31)
            override val outlineVariantLightHighContrast = Color(0xFF3F4B4E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2B3133)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF44D8F1)
            override val surfaceDimLightHighContrast = Color(0xFFB3BABB)
            override val surfaceBrightLightHighContrast = Color(0xFFF4FAFC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFECF2F3)
            override val surfaceContainerLightHighContrast = Color(0xFFDDE3E5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFCFD5D7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC1C8C9)
            override val primaryDark = Color(0xFF44D8F1)
            override val onPrimaryDark = Color(0xFF00363E)
            override val primaryContainerDark = Color(0xFF00BCD4)
            override val onPrimaryContainerDark = Color(0xFF004650)
            override val secondaryDark = Color(0xFF6FD6DF)
            override val onSecondaryDark = Color(0xFF00363A)
            override val secondaryContainerDark = Color(0xFF2E9FA8)
            override val onSecondaryContainerDark = Color(0xFF001618)
            override val tertiaryDark = Color(0xFFFFAFD6)
            override val onTertiaryDark = Color(0xFF620043)
            override val tertiaryContainerDark = Color(0xFFD40096)
            override val onTertiaryContainerDark = Color(0xFFFFF2F5)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0E1416)
            override val onBackgroundDark = Color(0xFFDDE3E5)
            override val surfaceDark = Color(0xFF0E1416)
            override val onSurfaceDark = Color(0xFFDDE3E5)
            override val surfaceVariantDark = Color(0xFF3C494C)
            override val onSurfaceVariantDark = Color(0xFFBBC9CC)
            override val outlineDark = Color(0xFF869396)
            override val outlineVariantDark = Color(0xFF3C494C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDark = Color(0xFF2B3133)
            override val inversePrimaryDark = Color(0xFF006876)
            override val surfaceDimDark = Color(0xFF0E1416)
            override val surfaceBrightDark = Color(0xFF343A3C)
            override val surfaceContainerLowestDark = Color(0xFF090F11)
            override val surfaceContainerLowDark = Color(0xFF161D1E)
            override val surfaceContainerDark = Color(0xFF1A2122)
            override val surfaceContainerHighDark = Color(0xFF252B2C)
            override val surfaceContainerHighestDark = Color(0xFF2F3637)
            override val primaryDarkMediumContrast = Color(0xFF86EBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002A31)
            override val primaryContainerDarkMediumContrast = Color(0xFF00BCD4)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF00252B)
            override val secondaryDarkMediumContrast = Color(0xFF86ECF6)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B2E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF2E9FA8)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFE4)
            override val onTertiaryDarkMediumContrast = Color(0xFF4E0035)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFFF3DB9)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0E1416)
            override val onBackgroundDarkMediumContrast = Color(0xFFDDE3E5)
            override val surfaceDarkMediumContrast = Color(0xFF0E1416)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD1DFE2)
            override val outlineDarkMediumContrast = Color(0xFFA7B4B8)
            override val outlineVariantDarkMediumContrast = Color(0xFF859396)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2D)
            override val inversePrimaryDarkMediumContrast = Color(0xFF00505B)
            override val surfaceDimDarkMediumContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkMediumContrast = Color(0xFF3F4647)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040809)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF181F20)
            override val surfaceContainerDarkMediumContrast = Color(0xFF23292A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2D3435)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF383F40)
            override val primaryDarkHighContrast = Color(0xFFD1F6FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF3ED4ED)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000D11)
            override val secondaryDarkHighContrast = Color(0xFFC3FAFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF6BD2DB)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0F)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA9D4)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F0013)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0E1416)
            override val onBackgroundDarkHighContrast = Color(0xFFDDE3E5)
            override val surfaceDarkHighContrast = Color(0xFF0E1416)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3C494C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F2F6)
            override val outlineVariantDarkHighContrast = Color(0xFFB7C5C8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDDE3E5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF00505B)
            override val surfaceDimDarkHighContrast = Color(0xFF0E1416)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5153)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1A2122)
            override val surfaceContainerDarkHighContrast = Color(0xFF2B3133)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF363C3E)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF414849)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}