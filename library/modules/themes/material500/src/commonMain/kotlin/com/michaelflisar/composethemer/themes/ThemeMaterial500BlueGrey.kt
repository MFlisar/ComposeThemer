package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500BlueGrey : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("blue_grey", "Blue Grey")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF43606D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF5C7987)
            override val onPrimaryContainerLight = Color(0xFFFBFDFF)
            override val secondaryLight = Color(0xFF2C4449)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF435C61)
            override val onSecondaryContainerLight = Color(0xFFB8D3D9)
            override val tertiaryLight = Color(0xFF4A5171)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF62698B)
            override val onTertiaryContainerLight = Color(0xFFEAEBFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF9FA)
            override val onBackgroundLight = Color(0xFF1A1C1D)
            override val surfaceLight = Color(0xFFFAF9FA)
            override val onSurfaceLight = Color(0xFF1A1C1D)
            override val surfaceVariantLight = Color(0xFFDEE3E7)
            override val onSurfaceVariantLight = Color(0xFF42484B)
            override val outlineLight = Color(0xFF72787B)
            override val outlineVariantLight = Color(0xFFC2C7CB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3031)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F1)
            override val inversePrimaryLight = Color(0xFFADCBDA)
            override val surfaceDimLight = Color(0xFFDADADB)
            override val surfaceBrightLight = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3F4)
            override val surfaceContainerLight = Color(0xFFEEEDEE)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E3)
            override val primaryLightMediumContrast = Color(0xFF1C3A46)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF54717F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF213A3F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF435C61)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFCFEFF)
            override val tertiaryLightMediumContrast = Color(0xFF2D3453)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF62698B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373A)
            override val outlineLightMediumContrast = Color(0xFF4D5357)
            override val outlineVariantLightMediumContrast = Color(0xFF686E71)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F1)
            override val inversePrimaryLightMediumContrast = Color(0xFFADCBDA)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCDD)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D2)
            override val primaryLightHighContrast = Color(0xFF11303C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF304D5A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF163034)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF344D52)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF232A49)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF404868)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1A1C1D)
            override val surfaceLightHighContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D30)
            override val outlineVariantLightHighContrast = Color(0xFF444A4D)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFADCBDA)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8B9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F1)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFADCBDA)
            override val onPrimaryDark = Color(0xFF163440)
            override val primaryContainerDark = Color(0xFF7895A3)
            override val onPrimaryContainerDark = Color(0xFF000B12)
            override val secondaryDark = Color(0xFFB0CBD1)
            override val onSecondaryDark = Color(0xFF1B3439)
            override val secondaryContainerDark = Color(0xFF435C61)
            override val onSecondaryContainerDark = Color(0xFFB8D3D9)
            override val tertiaryDark = Color(0xFFBEC5EB)
            override val onTertiaryDark = Color(0xFF282F4D)
            override val tertiaryContainerDark = Color(0xFF62698B)
            override val onTertiaryContainerDark = Color(0xFFEAEBFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121414)
            override val onBackgroundDark = Color(0xFFE3E2E3)
            override val surfaceDark = Color(0xFF121414)
            override val onSurfaceDark = Color(0xFFE3E2E3)
            override val surfaceVariantDark = Color(0xFF42484B)
            override val onSurfaceVariantDark = Color(0xFFC2C7CB)
            override val outlineDark = Color(0xFF8C9195)
            override val outlineVariantDark = Color(0xFF42484B)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDark = Color(0xFF2F3031)
            override val inversePrimaryDark = Color(0xFF466270)
            override val surfaceDimDark = Color(0xFF121414)
            override val surfaceBrightDark = Color(0xFF38393A)
            override val surfaceContainerLowestDark = Color(0xFF0D0E0F)
            override val surfaceContainerLowDark = Color(0xFF1A1C1D)
            override val surfaceContainerDark = Color(0xFF1E2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC2E1F1)
            override val onPrimaryDarkMediumContrast = Color(0xFF082935)
            override val primaryContainerDarkMediumContrast = Color(0xFF7895A3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC6E1E7)
            override val onSecondaryDarkMediumContrast = Color(0xFF0F292E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7B959B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD5DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF1D2442)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF888FB3)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121414)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF121414)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDE1)
            override val outlineDarkMediumContrast = Color(0xFFADB3B6)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9195)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkMediumContrast = Color(0xFF121414)
            override val surfaceBrightDarkMediumContrast = Color(0xFF434445)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060808)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF313334)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFDEF3FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA9C7D7)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000B12)
            override val secondaryDarkHighContrast = Color(0xFFD9F5FB)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFADC7CD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D11)
            override val tertiaryDarkHighContrast = Color(0xFFEEEFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBAC1E7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF020826)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121414)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E3)
            override val surfaceDarkHighContrast = Color(0xFF121414)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF1F5)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3C7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkHighContrast = Color(0xFF121414)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3031)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B3C)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF43606D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF5C7987)
            override val onPrimaryContainerLight = Color(0xFFFBFDFF)
            override val secondaryLight = Color(0xFF2C4449)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF435C61)
            override val onSecondaryContainerLight = Color(0xFFB8D3D9)
            override val tertiaryLight = Color(0xFF526164)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFEBFBFF)
            override val onTertiaryContainerLight = Color(0xFF657478)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF9FA)
            override val onBackgroundLight = Color(0xFF1A1C1D)
            override val surfaceLight = Color(0xFFFAF9FA)
            override val onSurfaceLight = Color(0xFF1A1C1D)
            override val surfaceVariantLight = Color(0xFFDEE3E7)
            override val onSurfaceVariantLight = Color(0xFF42484B)
            override val outlineLight = Color(0xFF72787B)
            override val outlineVariantLight = Color(0xFFC2C7CB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3031)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F1)
            override val inversePrimaryLight = Color(0xFFADCBDA)
            override val surfaceDimLight = Color(0xFFDADADB)
            override val surfaceBrightLight = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3F4)
            override val surfaceContainerLight = Color(0xFFEEEDEE)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E3)
            override val primaryLightMediumContrast = Color(0xFF1C3A46)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF54717F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF213A3F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF435C61)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFCFEFF)
            override val tertiaryLightMediumContrast = Color(0xFF2A393C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF617073)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373A)
            override val outlineLightMediumContrast = Color(0xFF4D5357)
            override val outlineVariantLightMediumContrast = Color(0xFF686E71)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F1)
            override val inversePrimaryLightMediumContrast = Color(0xFFADCBDA)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCDD)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D2)
            override val primaryLightHighContrast = Color(0xFF11303C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF304D5A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF163034)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF344D52)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF202E32)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3D4C4F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1A1C1D)
            override val surfaceLightHighContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D30)
            override val outlineVariantLightHighContrast = Color(0xFF444A4D)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFADCBDA)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8B9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F1)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFADCBDA)
            override val onPrimaryDark = Color(0xFF163440)
            override val primaryContainerDark = Color(0xFF7895A3)
            override val onPrimaryContainerDark = Color(0xFF000B12)
            override val secondaryDark = Color(0xFFB0CBD1)
            override val onSecondaryDark = Color(0xFF1B3439)
            override val secondaryContainerDark = Color(0xFF435C61)
            override val onSecondaryContainerDark = Color(0xFFB8D3D9)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF243336)
            override val tertiaryContainerDark = Color(0xFFD5E5E9)
            override val onTertiaryContainerDark = Color(0xFF58676A)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121414)
            override val onBackgroundDark = Color(0xFFE3E2E3)
            override val surfaceDark = Color(0xFF121414)
            override val onSurfaceDark = Color(0xFFE3E2E3)
            override val surfaceVariantDark = Color(0xFF42484B)
            override val onSurfaceVariantDark = Color(0xFFC2C7CB)
            override val outlineDark = Color(0xFF8C9195)
            override val outlineVariantDark = Color(0xFF42484B)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDark = Color(0xFF2F3031)
            override val inversePrimaryDark = Color(0xFF466270)
            override val surfaceDimDark = Color(0xFF121414)
            override val surfaceBrightDark = Color(0xFF38393A)
            override val surfaceContainerLowestDark = Color(0xFF0D0E0F)
            override val surfaceContainerLowDark = Color(0xFF1A1C1D)
            override val surfaceContainerDark = Color(0xFF1E2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC2E1F1)
            override val onPrimaryDarkMediumContrast = Color(0xFF082935)
            override val primaryContainerDarkMediumContrast = Color(0xFF7895A3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC6E1E7)
            override val onSecondaryDarkMediumContrast = Color(0xFF0F292E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7B959B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF243336)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD5E5E9)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3C4A4E)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121414)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF121414)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDE1)
            override val outlineDarkMediumContrast = Color(0xFFADB3B6)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9195)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkMediumContrast = Color(0xFF121414)
            override val surfaceBrightDarkMediumContrast = Color(0xFF434445)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060808)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF313334)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFDEF3FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA9C7D7)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000B12)
            override val secondaryDarkHighContrast = Color(0xFFD9F5FB)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFADC7CD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D11)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD5E5E9)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1E2C2F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121414)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E3)
            override val surfaceDarkHighContrast = Color(0xFF121414)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF1F5)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3C7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkHighContrast = Color(0xFF121414)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3031)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B3C)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF43606D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF5C7987)
            override val onPrimaryContainerLight = Color(0xFFFBFDFF)
            override val secondaryLight = Color(0xFF6E5846)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF88705D)
            override val onSecondaryContainerLight = Color(0xFFFFFBFF)
            override val tertiaryLight = Color(0xFF49392D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF615043)
            override val onTertiaryContainerLight = Color(0xFFDAC3B3)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF9FA)
            override val onBackgroundLight = Color(0xFF1A1C1D)
            override val surfaceLight = Color(0xFFFAF9FA)
            override val onSurfaceLight = Color(0xFF1A1C1D)
            override val surfaceVariantLight = Color(0xFFDEE3E7)
            override val onSurfaceVariantLight = Color(0xFF42484B)
            override val outlineLight = Color(0xFF72787B)
            override val outlineVariantLight = Color(0xFFC2C7CB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3031)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F1)
            override val inversePrimaryLight = Color(0xFFADCBDA)
            override val surfaceDimLight = Color(0xFFDADADB)
            override val surfaceBrightLight = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3F4)
            override val surfaceContainerLight = Color(0xFFEEEDEE)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E3)
            override val primaryLightMediumContrast = Color(0xFF1C3A46)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF54717F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF453223)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF806956)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF423327)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF615043)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFF3ED)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373A)
            override val outlineLightMediumContrast = Color(0xFF4D5357)
            override val outlineVariantLightMediumContrast = Color(0xFF686E71)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F1)
            override val inversePrimaryLightMediumContrast = Color(0xFFADCBDA)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCDD)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D2)
            override val primaryLightHighContrast = Color(0xFF11303C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF304D5A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3A2819)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF594534)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF37291E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF564639)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1A1C1D)
            override val surfaceLightHighContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D30)
            override val outlineVariantLightHighContrast = Color(0xFF444A4D)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFADCBDA)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8B9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F1)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFADCBDA)
            override val onPrimaryDark = Color(0xFF163440)
            override val primaryContainerDark = Color(0xFF7895A3)
            override val onPrimaryContainerDark = Color(0xFF000B12)
            override val secondaryDark = Color(0xFFDEC1AB)
            override val onSecondaryDark = Color(0xFF3F2D1D)
            override val secondaryContainerDark = Color(0xFFA68C78)
            override val onSecondaryContainerDark = Color(0xFF0F0400)
            override val tertiaryDark = Color(0xFFD9C2B2)
            override val onTertiaryDark = Color(0xFF3C2E22)
            override val tertiaryContainerDark = Color(0xFF615043)
            override val onTertiaryContainerDark = Color(0xFFDAC3B3)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121414)
            override val onBackgroundDark = Color(0xFFE3E2E3)
            override val surfaceDark = Color(0xFF121414)
            override val onSurfaceDark = Color(0xFFE3E2E3)
            override val surfaceVariantDark = Color(0xFF42484B)
            override val onSurfaceVariantDark = Color(0xFFC2C7CB)
            override val outlineDark = Color(0xFF8C9195)
            override val outlineVariantDark = Color(0xFF42484B)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDark = Color(0xFF2F3031)
            override val inversePrimaryDark = Color(0xFF466270)
            override val surfaceDimDark = Color(0xFF121414)
            override val surfaceBrightDark = Color(0xFF38393A)
            override val surfaceContainerLowestDark = Color(0xFF0D0E0F)
            override val surfaceContainerLowDark = Color(0xFF1A1C1D)
            override val surfaceContainerDark = Color(0xFF1E2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC2E1F1)
            override val onPrimaryDarkMediumContrast = Color(0xFF082935)
            override val primaryContainerDarkMediumContrast = Color(0xFF7895A3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF5D7C0)
            override val onSecondaryDarkMediumContrast = Color(0xFF332214)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA68C78)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF0D8C7)
            override val onTertiaryDarkMediumContrast = Color(0xFF302318)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA18D7E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121414)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF121414)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDE1)
            override val outlineDarkMediumContrast = Color(0xFFADB3B6)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9195)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkMediumContrast = Color(0xFF121414)
            override val surfaceBrightDarkMediumContrast = Color(0xFF434445)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060808)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF313334)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFDEF3FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA9C7D7)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000B12)
            override val secondaryDarkHighContrast = Color(0xFFFFEDE0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDABDA7)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0F0400)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDE1)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD5BEAE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF130903)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121414)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E3)
            override val surfaceDarkHighContrast = Color(0xFF121414)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF1F5)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3C7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkHighContrast = Color(0xFF121414)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3031)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B3C)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF43606D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF5C7987)
            override val onPrimaryContainerLight = Color(0xFFFBFDFF)
            override val secondaryLight = Color(0xFF2C4449)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF435C61)
            override val onSecondaryContainerLight = Color(0xFFB8D3D9)
            override val tertiaryLight = Color(0xFF704862)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF8B607B)
            override val onTertiaryContainerLight = Color(0xFFFFEBF4)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF9FA)
            override val onBackgroundLight = Color(0xFF1A1C1D)
            override val surfaceLight = Color(0xFFFAF9FA)
            override val onSurfaceLight = Color(0xFF1A1C1D)
            override val surfaceVariantLight = Color(0xFFDEE3E7)
            override val onSurfaceVariantLight = Color(0xFF42484B)
            override val outlineLight = Color(0xFF72787B)
            override val outlineVariantLight = Color(0xFFC2C7CB)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3031)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F1)
            override val inversePrimaryLight = Color(0xFFADCBDA)
            override val surfaceDimLight = Color(0xFFDADADB)
            override val surfaceBrightLight = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3F4)
            override val surfaceContainerLight = Color(0xFFEEEDEE)
            override val surfaceContainerHighLight = Color(0xFFE9E8E9)
            override val surfaceContainerHighestLight = Color(0xFFE3E2E3)
            override val primaryLightMediumContrast = Color(0xFF1C3A46)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF54717F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF213A3F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF435C61)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFCFEFF)
            override val tertiaryLightMediumContrast = Color(0xFF4E2A42)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8B607B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1C1D)
            override val surfaceLightMediumContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightMediumContrast = Color(0xFF101112)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373A)
            override val outlineLightMediumContrast = Color(0xFF4D5357)
            override val outlineVariantLightMediumContrast = Color(0xFF686E71)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F1)
            override val inversePrimaryLightMediumContrast = Color(0xFFADCBDA)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6C7)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3F4)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E8E9)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCDD)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D2)
            override val primaryLightHighContrast = Color(0xFF11303C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF304D5A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF163034)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF344D52)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF432038)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF633D56)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF9FA)
            override val onBackgroundLightHighContrast = Color(0xFF1A1C1D)
            override val surfaceLightHighContrast = Color(0xFFFAF9FA)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3E7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D30)
            override val outlineVariantLightHighContrast = Color(0xFF444A4D)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3031)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFADCBDA)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8B9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF9FA)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F1)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E2E3)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D4D5)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6C7)
            override val primaryDark = Color(0xFFADCBDA)
            override val onPrimaryDark = Color(0xFF163440)
            override val primaryContainerDark = Color(0xFF7895A3)
            override val onPrimaryContainerDark = Color(0xFF000B12)
            override val secondaryDark = Color(0xFFB0CBD1)
            override val onSecondaryDark = Color(0xFF1B3439)
            override val secondaryContainerDark = Color(0xFF435C61)
            override val onSecondaryContainerDark = Color(0xFFB8D3D9)
            override val tertiaryDark = Color(0xFFEBB8D6)
            override val onTertiaryDark = Color(0xFF48243C)
            override val tertiaryContainerDark = Color(0xFF8B607B)
            override val onTertiaryContainerDark = Color(0xFFFFEBF4)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121414)
            override val onBackgroundDark = Color(0xFFE3E2E3)
            override val surfaceDark = Color(0xFF121414)
            override val onSurfaceDark = Color(0xFFE3E2E3)
            override val surfaceVariantDark = Color(0xFF42484B)
            override val onSurfaceVariantDark = Color(0xFFC2C7CB)
            override val outlineDark = Color(0xFF8C9195)
            override val outlineVariantDark = Color(0xFF42484B)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDark = Color(0xFF2F3031)
            override val inversePrimaryDark = Color(0xFF466270)
            override val surfaceDimDark = Color(0xFF121414)
            override val surfaceBrightDark = Color(0xFF38393A)
            override val surfaceContainerLowestDark = Color(0xFF0D0E0F)
            override val surfaceContainerLowDark = Color(0xFF1A1C1D)
            override val surfaceContainerDark = Color(0xFF1E2021)
            override val surfaceContainerHighDark = Color(0xFF292A2B)
            override val surfaceContainerHighestDark = Color(0xFF343536)
            override val primaryDarkMediumContrast = Color(0xFFC2E1F1)
            override val onPrimaryDarkMediumContrast = Color(0xFF082935)
            override val primaryContainerDarkMediumContrast = Color(0xFF7895A3)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC6E1E7)
            override val onSecondaryDarkMediumContrast = Color(0xFF0F292E)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7B959B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFEA)
            override val onTertiaryDarkMediumContrast = Color(0xFF3B1A31)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB2839F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121414)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E2E3)
            override val surfaceDarkMediumContrast = Color(0xFF121414)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD8DDE1)
            override val outlineDarkMediumContrast = Color(0xFFADB3B6)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9195)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2B)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkMediumContrast = Color(0xFF121414)
            override val surfaceBrightDarkMediumContrast = Color(0xFF434445)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060808)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1E1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272829)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF313334)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E3F)
            override val primaryDarkHighContrast = Color(0xFFDEF3FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA9C7D7)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000B12)
            override val secondaryDarkHighContrast = Color(0xFFD9F5FB)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFADC7CD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D11)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF4)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE7B4D2)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1C0215)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121414)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E2E3)
            override val surfaceDarkHighContrast = Color(0xFF121414)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42484B)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF1F5)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3C7)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E3)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2F4C59)
            override val surfaceDimDarkHighContrast = Color(0xFF121414)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5051)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E2021)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3031)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B3C)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF464748)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}