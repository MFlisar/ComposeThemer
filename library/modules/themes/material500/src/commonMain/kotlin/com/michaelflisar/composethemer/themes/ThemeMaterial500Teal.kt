package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Teal : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF00685E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF008377)
            override val onPrimaryContainerLight = Color(0xFFF4FFFB)
            override val secondaryLight = Color(0xFF004F4D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF006966)
            override val onSecondaryContainerLight = Color(0xFF95E5E1)
            override val tertiaryLight = Color(0xFF001763)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF002896)
            override val onTertiaryContainerLight = Color(0xFF8399FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FAF8)
            override val onBackgroundLight = Color(0xFF171D1B)
            override val surfaceLight = Color(0xFFF5FAF8)
            override val onSurfaceLight = Color(0xFF171D1B)
            override val surfaceVariantLight = Color(0xFFD8E5E2)
            override val onSurfaceVariantLight = Color(0xFF3D4947)
            override val outlineLight = Color(0xFF6D7A77)
            override val outlineVariantLight = Color(0xFFBCC9C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3230)
            override val inverseOnSurfaceLight = Color(0xFFEDF2EF)
            override val inversePrimaryLight = Color(0xFF67D9C9)
            override val surfaceDimLight = Color(0xFFD6DBD9)
            override val surfaceBrightLight = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F2)
            override val surfaceContainerLight = Color(0xFFEAEFED)
            override val surfaceContainerHighLight = Color(0xFFE4E9E7)
            override val surfaceContainerHighestLight = Color(0xFFDEE4E1)
            override val primaryLightMediumContrast = Color(0xFF003E37)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007B6F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D3B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF006966)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF001763)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF002896)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFB9C4FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightMediumContrast = Color(0xFF171D1B)
            override val surfaceLightMediumContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1211)
            override val surfaceVariantLightMediumContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2D3936)
            override val outlineLightMediumContrast = Color(0xFF495552)
            override val outlineVariantLightMediumContrast = Color(0xFF63706D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF2EF)
            override val inversePrimaryLightMediumContrast = Color(0xFF67D9C9)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E9E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DEDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD3D0)
            override val primaryLightHighContrast = Color(0xFF00332D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00534B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003231)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005250)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF001763)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF002896)
            override val onTertiaryContainerLightHighContrast = Color(0xFFF6F5FF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightHighContrast = Color(0xFF171D1B)
            override val surfaceLightHighContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF232E2C)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C49)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF67D9C9)
            override val surfaceDimLightHighContrast = Color(0xFFB4BAB8)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF2EF)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8C5)
            override val primaryDark = Color(0xFF67D9C9)
            override val onPrimaryDark = Color(0xFF003731)
            override val primaryContainerDark = Color(0xFF21A293)
            override val onPrimaryContainerDark = Color(0xFF00231F)
            override val secondaryDark = Color(0xFF84D4D0)
            override val onSecondaryDark = Color(0xFF003735)
            override val secondaryContainerDark = Color(0xFF006966)
            override val onSecondaryContainerDark = Color(0xFF95E5E1)
            override val tertiaryDark = Color(0xFFB8C3FF)
            override val onTertiaryDark = Color(0xFF002388)
            override val tertiaryContainerDark = Color(0xFF002896)
            override val onTertiaryContainerDark = Color(0xFF8399FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1413)
            override val onBackgroundDark = Color(0xFFDEE4E1)
            override val surfaceDark = Color(0xFF0F1413)
            override val onSurfaceDark = Color(0xFFDEE4E1)
            override val surfaceVariantDark = Color(0xFF3D4947)
            override val onSurfaceVariantDark = Color(0xFFBCC9C6)
            override val outlineDark = Color(0xFF869390)
            override val outlineVariantDark = Color(0xFF3D4947)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDark = Color(0xFF2C3230)
            override val inversePrimaryDark = Color(0xFF006A60)
            override val surfaceDimDark = Color(0xFF0F1413)
            override val surfaceBrightDark = Color(0xFF353A39)
            override val surfaceContainerLowestDark = Color(0xFF0A0F0E)
            override val surfaceContainerLowDark = Color(0xFF171D1B)
            override val surfaceContainerDark = Color(0xFF1B211F)
            override val surfaceContainerHighDark = Color(0xFF252B2A)
            override val surfaceContainerHighestDark = Color(0xFF303635)
            override val primaryDarkMediumContrast = Color(0xFF7FEFDF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002B26)
            override val primaryContainerDarkMediumContrast = Color(0xFF21A293)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFF9AEAE6)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B2A)
            override val secondaryContainerDarkMediumContrast = Color(0xFF4D9D9A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD5DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF001B6E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7189F6)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1413)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4E1)
            override val surfaceDarkMediumContrast = Color(0xFF0F1413)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD2DFDB)
            override val outlineDarkMediumContrast = Color(0xFFA7B5B1)
            override val outlineVariantDarkMediumContrast = Color(0xFF869390)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005249)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkMediumContrast = Color(0xFF404644)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040807)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF232928)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3432)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F3D)
            override val primaryDarkHighContrast = Color(0xFFAFFFF2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF63D5C5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E0C)
            override val secondaryDarkHighContrast = Color(0xFFAEFEFA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF80D0CC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0D)
            override val tertiaryDarkHighContrast = Color(0xFFEFEFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB3BFFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF00062E)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1413)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4E1)
            override val surfaceDarkHighContrast = Color(0xFF0F1413)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F3EF)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C5C2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005249)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5150)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211F)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3230)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424846)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF00685E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF008377)
            override val onPrimaryContainerLight = Color(0xFFF4FFFB)
            override val secondaryLight = Color(0xFF004F4D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF006966)
            override val onSecondaryContainerLight = Color(0xFF95E5E1)
            override val tertiaryLight = Color(0xFF276867)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFBFFFFD)
            override val onTertiaryContainerLight = Color(0xFF397877)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FAF8)
            override val onBackgroundLight = Color(0xFF171D1B)
            override val surfaceLight = Color(0xFFF5FAF8)
            override val onSurfaceLight = Color(0xFF171D1B)
            override val surfaceVariantLight = Color(0xFFD8E5E2)
            override val onSurfaceVariantLight = Color(0xFF3D4947)
            override val outlineLight = Color(0xFF6D7A77)
            override val outlineVariantLight = Color(0xFFBCC9C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3230)
            override val inverseOnSurfaceLight = Color(0xFFEDF2EF)
            override val inversePrimaryLight = Color(0xFF67D9C9)
            override val surfaceDimLight = Color(0xFFD6DBD9)
            override val surfaceBrightLight = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F2)
            override val surfaceContainerLight = Color(0xFFEAEFED)
            override val surfaceContainerHighLight = Color(0xFFE4E9E7)
            override val surfaceContainerHighestLight = Color(0xFFDEE4E1)
            override val primaryLightMediumContrast = Color(0xFF003E37)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007B6F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D3B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF006966)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003D3D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF387776)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightMediumContrast = Color(0xFF171D1B)
            override val surfaceLightMediumContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1211)
            override val surfaceVariantLightMediumContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2D3936)
            override val outlineLightMediumContrast = Color(0xFF495552)
            override val outlineVariantLightMediumContrast = Color(0xFF63706D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF2EF)
            override val inversePrimaryLightMediumContrast = Color(0xFF67D9C9)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E9E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DEDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD3D0)
            override val primaryLightHighContrast = Color(0xFF00332D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00534B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003231)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005250)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003232)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF055251)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightHighContrast = Color(0xFF171D1B)
            override val surfaceLightHighContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF232E2C)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C49)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF67D9C9)
            override val surfaceDimLightHighContrast = Color(0xFFB4BAB8)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF2EF)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8C5)
            override val primaryDark = Color(0xFF67D9C9)
            override val onPrimaryDark = Color(0xFF003731)
            override val primaryContainerDark = Color(0xFF21A293)
            override val onPrimaryContainerDark = Color(0xFF00231F)
            override val secondaryDark = Color(0xFF84D4D0)
            override val onSecondaryDark = Color(0xFF003735)
            override val secondaryContainerDark = Color(0xFF006966)
            override val onSecondaryContainerDark = Color(0xFF95E5E1)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF003736)
            override val tertiaryContainerDark = Color(0xFFAFEEEC)
            override val onTertiaryContainerDark = Color(0xFF2E6E6D)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1413)
            override val onBackgroundDark = Color(0xFFDEE4E1)
            override val surfaceDark = Color(0xFF0F1413)
            override val onSurfaceDark = Color(0xFFDEE4E1)
            override val surfaceVariantDark = Color(0xFF3D4947)
            override val onSurfaceVariantDark = Color(0xFFBCC9C6)
            override val outlineDark = Color(0xFF869390)
            override val outlineVariantDark = Color(0xFF3D4947)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDark = Color(0xFF2C3230)
            override val inversePrimaryDark = Color(0xFF006A60)
            override val surfaceDimDark = Color(0xFF0F1413)
            override val surfaceBrightDark = Color(0xFF353A39)
            override val surfaceContainerLowestDark = Color(0xFF0A0F0E)
            override val surfaceContainerLowDark = Color(0xFF171D1B)
            override val surfaceContainerDark = Color(0xFF1B211F)
            override val surfaceContainerHighDark = Color(0xFF252B2A)
            override val surfaceContainerHighestDark = Color(0xFF303635)
            override val primaryDarkMediumContrast = Color(0xFF7FEFDF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002B26)
            override val primaryContainerDarkMediumContrast = Color(0xFF21A293)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFF9AEAE6)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B2A)
            override val secondaryContainerDarkMediumContrast = Color(0xFF4D9D9A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF003736)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFAFEEEC)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF025150)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1413)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4E1)
            override val surfaceDarkMediumContrast = Color(0xFF0F1413)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD2DFDB)
            override val outlineDarkMediumContrast = Color(0xFFA7B5B1)
            override val outlineVariantDarkMediumContrast = Color(0xFF869390)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005249)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkMediumContrast = Color(0xFF404644)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040807)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF232928)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3432)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F3D)
            override val primaryDarkHighContrast = Color(0xFFAFFFF2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF63D5C5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E0C)
            override val secondaryDarkHighContrast = Color(0xFFAEFEFA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF80D0CC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0D)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFAFEEEC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF00302F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1413)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4E1)
            override val surfaceDarkHighContrast = Color(0xFF0F1413)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F3EF)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C5C2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005249)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5150)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211F)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3230)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424846)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF00685E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF008377)
            override val onPrimaryContainerLight = Color(0xFFF4FFFB)
            override val secondaryLight = Color(0xFF702900)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF963A00)
            override val onSecondaryContainerLight = Color(0xFFFFBFA3)
            override val tertiaryLight = Color(0xFF461900)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF692900)
            override val onTertiaryContainerLight = Color(0xFFED905F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FAF8)
            override val onBackgroundLight = Color(0xFF171D1B)
            override val surfaceLight = Color(0xFFF5FAF8)
            override val onSurfaceLight = Color(0xFF171D1B)
            override val surfaceVariantLight = Color(0xFFD8E5E2)
            override val onSurfaceVariantLight = Color(0xFF3D4947)
            override val outlineLight = Color(0xFF6D7A77)
            override val outlineVariantLight = Color(0xFFBCC9C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3230)
            override val inverseOnSurfaceLight = Color(0xFFEDF2EF)
            override val inversePrimaryLight = Color(0xFF67D9C9)
            override val surfaceDimLight = Color(0xFFD6DBD9)
            override val surfaceBrightLight = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F2)
            override val surfaceContainerLight = Color(0xFFEAEFED)
            override val surfaceContainerHighLight = Color(0xFFE4E9E7)
            override val surfaceContainerHighestLight = Color(0xFFDEE4E1)
            override val primaryLightMediumContrast = Color(0xFF003E37)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007B6F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF612300)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF963A00)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFBFF)
            override val tertiaryLightMediumContrast = Color(0xFF461900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF692900)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFC3A6)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightMediumContrast = Color(0xFF171D1B)
            override val surfaceLightMediumContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1211)
            override val surfaceVariantLightMediumContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2D3936)
            override val outlineLightMediumContrast = Color(0xFF495552)
            override val outlineVariantLightMediumContrast = Color(0xFF63706D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF2EF)
            override val inversePrimaryLightMediumContrast = Color(0xFF67D9C9)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E9E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DEDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD3D0)
            override val primaryLightHighContrast = Color(0xFF00332D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00534B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF501B00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF7F3000)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF461900)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF692900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightHighContrast = Color(0xFF171D1B)
            override val surfaceLightHighContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF232E2C)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C49)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF67D9C9)
            override val surfaceDimLightHighContrast = Color(0xFFB4BAB8)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF2EF)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8C5)
            override val primaryDark = Color(0xFF67D9C9)
            override val onPrimaryDark = Color(0xFF003731)
            override val primaryContainerDark = Color(0xFF21A293)
            override val onPrimaryContainerDark = Color(0xFF00231F)
            override val secondaryDark = Color(0xFFFFB695)
            override val onSecondaryDark = Color(0xFF571F00)
            override val secondaryContainerDark = Color(0xFF963A00)
            override val onSecondaryContainerDark = Color(0xFFFFBFA3)
            override val tertiaryDark = Color(0xFFFFB692)
            override val onTertiaryDark = Color(0xFF562000)
            override val tertiaryContainerDark = Color(0xFF692900)
            override val onTertiaryContainerDark = Color(0xFFED905F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1413)
            override val onBackgroundDark = Color(0xFFDEE4E1)
            override val surfaceDark = Color(0xFF0F1413)
            override val onSurfaceDark = Color(0xFFDEE4E1)
            override val surfaceVariantDark = Color(0xFF3D4947)
            override val onSurfaceVariantDark = Color(0xFFBCC9C6)
            override val outlineDark = Color(0xFF869390)
            override val outlineVariantDark = Color(0xFF3D4947)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDark = Color(0xFF2C3230)
            override val inversePrimaryDark = Color(0xFF006A60)
            override val surfaceDimDark = Color(0xFF0F1413)
            override val surfaceBrightDark = Color(0xFF353A39)
            override val surfaceContainerLowestDark = Color(0xFF0A0F0E)
            override val surfaceContainerLowDark = Color(0xFF171D1B)
            override val surfaceContainerDark = Color(0xFF1B211F)
            override val surfaceContainerHighDark = Color(0xFF252B2A)
            override val surfaceContainerHighestDark = Color(0xFF303635)
            override val primaryDarkMediumContrast = Color(0xFF7FEFDF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002B26)
            override val primaryContainerDarkMediumContrast = Color(0xFF21A293)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onSecondaryDarkMediumContrast = Color(0xFF461700)
            override val secondaryContainerDarkMediumContrast = Color(0xFFE17139)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3BF)
            override val onTertiaryDarkMediumContrast = Color(0xFF441800)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD27A4B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1413)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4E1)
            override val surfaceDarkMediumContrast = Color(0xFF0F1413)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD2DFDB)
            override val outlineDarkMediumContrast = Color(0xFFA7B5B1)
            override val outlineVariantDarkMediumContrast = Color(0xFF869390)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005249)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkMediumContrast = Color(0xFF404644)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040807)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF232928)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3432)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F3D)
            override val primaryDarkHighContrast = Color(0xFFAFFFF2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF63D5C5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E0C)
            override val secondaryDarkHighContrast = Color(0xFFFFECE5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB08D)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB089)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1A0500)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1413)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4E1)
            override val surfaceDarkHighContrast = Color(0xFF0F1413)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F3EF)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C5C2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005249)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5150)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211F)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3230)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424846)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF00685E)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF008377)
            override val onPrimaryContainerLight = Color(0xFFF4FFFB)
            override val secondaryLight = Color(0xFF004F4D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF006966)
            override val onSecondaryContainerLight = Color(0xFF95E5E1)
            override val tertiaryLight = Color(0xFF6E0052)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF960072)
            override val onTertiaryContainerLight = Color(0xFFFFA4D8)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF5FAF8)
            override val onBackgroundLight = Color(0xFF171D1B)
            override val surfaceLight = Color(0xFFF5FAF8)
            override val onSurfaceLight = Color(0xFF171D1B)
            override val surfaceVariantLight = Color(0xFFD8E5E2)
            override val onSurfaceVariantLight = Color(0xFF3D4947)
            override val outlineLight = Color(0xFF6D7A77)
            override val outlineVariantLight = Color(0xFFBCC9C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2C3230)
            override val inverseOnSurfaceLight = Color(0xFFEDF2EF)
            override val inversePrimaryLight = Color(0xFF67D9C9)
            override val surfaceDimLight = Color(0xFFD6DBD9)
            override val surfaceBrightLight = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFEFF5F2)
            override val surfaceContainerLight = Color(0xFFEAEFED)
            override val surfaceContainerHighLight = Color(0xFFE4E9E7)
            override val surfaceContainerHighestLight = Color(0xFFDEE4E1)
            override val primaryLightMediumContrast = Color(0xFF003E37)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF007B6F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D3B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF006966)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF6B0050)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF960072)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFE7F1)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightMediumContrast = Color(0xFF171D1B)
            override val surfaceLightMediumContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightMediumContrast = Color(0xFF0D1211)
            override val surfaceVariantLightMediumContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF2D3936)
            override val outlineLightMediumContrast = Color(0xFF495552)
            override val outlineVariantLightMediumContrast = Color(0xFF63706D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEDF2EF)
            override val inversePrimaryLightMediumContrast = Color(0xFF67D9C9)
            override val surfaceDimLightMediumContrast = Color(0xFFC2C8C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFEFF5F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE4E9E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFD9DEDC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCDD3D0)
            override val primaryLightHighContrast = Color(0xFF00332D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF00534B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003231)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005250)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF590042)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF8C006B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF5FAF8)
            override val onBackgroundLightHighContrast = Color(0xFF171D1B)
            override val surfaceLightHighContrast = Color(0xFFF5FAF8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFD8E5E2)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF232E2C)
            override val outlineVariantLightHighContrast = Color(0xFF3F4C49)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2C3230)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF67D9C9)
            override val surfaceDimLightHighContrast = Color(0xFFB4BAB8)
            override val surfaceBrightLightHighContrast = Color(0xFFF5FAF8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEDF2EF)
            override val surfaceContainerLightHighContrast = Color(0xFFDEE4E1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD0D6D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC2C8C5)
            override val primaryDark = Color(0xFF67D9C9)
            override val onPrimaryDark = Color(0xFF003731)
            override val primaryContainerDark = Color(0xFF21A293)
            override val onPrimaryContainerDark = Color(0xFF00231F)
            override val secondaryDark = Color(0xFF84D4D0)
            override val onSecondaryDark = Color(0xFF003735)
            override val secondaryContainerDark = Color(0xFF006966)
            override val onSecondaryContainerDark = Color(0xFF95E5E1)
            override val tertiaryDark = Color(0xFFFFAEDB)
            override val onTertiaryDark = Color(0xFF610048)
            override val tertiaryContainerDark = Color(0xFF960072)
            override val onTertiaryContainerDark = Color(0xFFFFA4D8)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF0F1413)
            override val onBackgroundDark = Color(0xFFDEE4E1)
            override val surfaceDark = Color(0xFF0F1413)
            override val onSurfaceDark = Color(0xFFDEE4E1)
            override val surfaceVariantDark = Color(0xFF3D4947)
            override val onSurfaceVariantDark = Color(0xFFBCC9C6)
            override val outlineDark = Color(0xFF869390)
            override val outlineVariantDark = Color(0xFF3D4947)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDark = Color(0xFF2C3230)
            override val inversePrimaryDark = Color(0xFF006A60)
            override val surfaceDimDark = Color(0xFF0F1413)
            override val surfaceBrightDark = Color(0xFF353A39)
            override val surfaceContainerLowestDark = Color(0xFF0A0F0E)
            override val surfaceContainerLowDark = Color(0xFF171D1B)
            override val surfaceContainerDark = Color(0xFF1B211F)
            override val surfaceContainerHighDark = Color(0xFF252B2A)
            override val surfaceContainerHighestDark = Color(0xFF303635)
            override val primaryDarkMediumContrast = Color(0xFF7FEFDF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002B26)
            override val primaryContainerDarkMediumContrast = Color(0xFF21A293)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFF9AEAE6)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B2A)
            override val secondaryContainerDarkMediumContrast = Color(0xFF4D9D9A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFE7)
            override val onTertiaryDarkMediumContrast = Color(0xFF4D0039)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFEA58B9)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF0F1413)
            override val onBackgroundDarkMediumContrast = Color(0xFFDEE4E1)
            override val surfaceDarkMediumContrast = Color(0xFF0F1413)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD2DFDB)
            override val outlineDarkMediumContrast = Color(0xFFA7B5B1)
            override val outlineVariantDarkMediumContrast = Color(0xFF869390)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF252B2A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF005249)
            override val surfaceDimDarkMediumContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkMediumContrast = Color(0xFF404644)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF040807)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF191F1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF232928)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2E3432)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF393F3D)
            override val primaryDarkHighContrast = Color(0xFFAFFFF2)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF63D5C5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000E0C)
            override val secondaryDarkHighContrast = Color(0xFFAEFEFA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF80D0CC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0D)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF3)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA8D9)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F0015)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF0F1413)
            override val onBackgroundDarkHighContrast = Color(0xFFDEE4E1)
            override val surfaceDarkHighContrast = Color(0xFF0F1413)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF3D4947)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFE5F3EF)
            override val outlineVariantDarkHighContrast = Color(0xFFB8C5C2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFDEE4E1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF005249)
            override val surfaceDimDarkHighContrast = Color(0xFF0F1413)
            override val surfaceBrightDarkHighContrast = Color(0xFF4B5150)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1B211F)
            override val surfaceContainerDarkHighContrast = Color(0xFF2C3230)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF373D3B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF424846)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("teal", "Teal")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}