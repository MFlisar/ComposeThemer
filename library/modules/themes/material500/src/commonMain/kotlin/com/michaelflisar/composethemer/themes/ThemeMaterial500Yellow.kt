package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Yellow : ComposeTheme.Group {

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("yellow", "Yellow")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF695F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFEB3B)
            override val onPrimaryContainerLight = Color(0xFF746900)
            override val secondaryLight = Color(0xFF656100)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB2AB29)
            override val onSecondaryContainerLight = Color(0xFF413E00)
            override val tertiaryLight = Color(0xFF4A6700)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC2FE3B)
            override val onTertiaryContainerLight = Color(0xFF537300)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9E8)
            override val onBackgroundLight = Color(0xFF1D1C11)
            override val surfaceLight = Color(0xFFFFF9E8)
            override val onSurfaceLight = Color(0xFF1D1C11)
            override val surfaceVariantLight = Color(0xFFE9E3C7)
            override val onSurfaceVariantLight = Color(0xFF4A4733)
            override val outlineLight = Color(0xFF7C7760)
            override val outlineVariantLight = Color(0xFFCDC7AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333125)
            override val inverseOnSurfaceLight = Color(0xFFF6F1DE)
            override val inversePrimaryLight = Color(0xFFDBC90A)
            override val surfaceDimLight = Color(0xFFDFDAC8)
            override val surfaceBrightLight = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E1)
            override val surfaceContainerLight = Color(0xFFF3EEDC)
            override val surfaceContainerHighLight = Color(0xFFEEE8D6)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D1)
            override val primaryLightMediumContrast = Color(0xFF3D3700)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF796E00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3A3800)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF757000)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2A3C00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF567700)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1C11)
            override val surfaceLightMediumContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightMediumContrast = Color(0xFF131107)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393723)
            override val outlineLightMediumContrast = Color(0xFF56533E)
            override val outlineVariantLightMediumContrast = Color(0xFF726D57)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F1DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBC90A)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DDCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D2C0)
            override val primaryLightHighContrast = Color(0xFF322D00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF524A00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF213100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF395000)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightHighContrast = Color(0xFF1D1C11)
            override val surfaceLightHighContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C1A)
            override val outlineVariantLightHighContrast = Color(0xFF4D4A35)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBC90A)
            override val surfaceDimLightHighContrast = Color(0xFFBDB9A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F1DE)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B5)
            override val primaryDark = Color(0xFFFFFFFF)
            override val onPrimaryDark = Color(0xFF363100)
            override val primaryContainerDark = Color(0xFFF9E534)
            override val onPrimaryContainerDark = Color(0xFF706500)
            override val secondaryDark = Color(0xFFD2CB47)
            override val onSecondaryDark = Color(0xFF343200)
            override val secondaryContainerDark = Color(0xFFB2AB29)
            override val onSecondaryContainerDark = Color(0xFF413E00)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF253600)
            override val tertiaryContainerDark = Color(0xFFBAF632)
            override val onTertiaryContainerDark = Color(0xFF4F6E00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151409)
            override val onBackgroundDark = Color(0xFFE8E2D1)
            override val surfaceDark = Color(0xFF151409)
            override val onSurfaceDark = Color(0xFFE8E2D1)
            override val surfaceVariantDark = Color(0xFF4A4733)
            override val onSurfaceVariantDark = Color(0xFFCDC7AC)
            override val outlineDark = Color(0xFF969179)
            override val outlineVariantDark = Color(0xFF4A4733)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDark = Color(0xFF333125)
            override val inversePrimaryDark = Color(0xFF695F00)
            override val surfaceDimDark = Color(0xFF151409)
            override val surfaceBrightDark = Color(0xFF3C392D)
            override val surfaceContainerLowestDark = Color(0xFF100E05)
            override val surfaceContainerLowDark = Color(0xFF1D1C11)
            override val surfaceContainerDark = Color(0xFF222015)
            override val surfaceContainerHighDark = Color(0xFF2C2A1F)
            override val surfaceContainerHighestDark = Color(0xFF373529)
            override val primaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF363100)
            override val primaryContainerDarkMediumContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF504900)
            override val secondaryDarkMediumContrast = Color(0xFFE9E15B)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB2AB29)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF1F1D00)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF253600)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBAF632)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF384F00)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151409)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D1)
            override val surfaceDarkMediumContrast = Color(0xFF151409)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DDC1)
            override val outlineDarkMediumContrast = Color(0xFFB8B299)
            override val outlineVariantDarkMediumContrast = Color(0xFF959179)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF504900)
            override val surfaceDimDarkMediumContrast = Color(0xFF151409)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474538)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353327)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E31)
            override val primaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF2F2B00)
            override val secondaryDarkHighContrast = Color(0xFFFDF56C)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEC744)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBAF632)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF202F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151409)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D1)
            override val surfaceDarkHighContrast = Color(0xFF151409)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0D4)
            override val outlineVariantDarkHighContrast = Color(0xFFC9C3A9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF504900)
            override val surfaceDimDarkHighContrast = Color(0xFF151409)
            override val surfaceBrightDarkHighContrast = Color(0xFF535043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222015)
            override val surfaceContainerDarkHighContrast = Color(0xFF333125)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3C2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49473A)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF695F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFEB3B)
            override val onPrimaryContainerLight = Color(0xFF746900)
            override val secondaryLight = Color(0xFF656100)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB2AB29)
            override val onSecondaryContainerLight = Color(0xFF413E00)
            override val tertiaryLight = Color(0xFF60603C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFFDCE)
            override val onTertiaryContainerLight = Color(0xFF75754F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9E8)
            override val onBackgroundLight = Color(0xFF1D1C11)
            override val surfaceLight = Color(0xFFFFF9E8)
            override val onSurfaceLight = Color(0xFF1D1C11)
            override val surfaceVariantLight = Color(0xFFE9E3C7)
            override val onSurfaceVariantLight = Color(0xFF4A4733)
            override val outlineLight = Color(0xFF7C7760)
            override val outlineVariantLight = Color(0xFFCDC7AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333125)
            override val inverseOnSurfaceLight = Color(0xFFF6F1DE)
            override val inversePrimaryLight = Color(0xFFDBC90A)
            override val surfaceDimLight = Color(0xFFDFDAC8)
            override val surfaceBrightLight = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E1)
            override val surfaceContainerLight = Color(0xFFF3EEDC)
            override val surfaceContainerHighLight = Color(0xFFEEE8D6)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D1)
            override val primaryLightMediumContrast = Color(0xFF3D3700)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF796E00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3A3800)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF757000)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF383818)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6F6F4A)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1C11)
            override val surfaceLightMediumContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightMediumContrast = Color(0xFF131107)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393723)
            override val outlineLightMediumContrast = Color(0xFF56533E)
            override val outlineVariantLightMediumContrast = Color(0xFF726D57)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F1DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBC90A)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DDCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D2C0)
            override val primaryLightHighContrast = Color(0xFF322D00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF524A00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2D2E0F)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4B4B29)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightHighContrast = Color(0xFF1D1C11)
            override val surfaceLightHighContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C1A)
            override val outlineVariantLightHighContrast = Color(0xFF4D4A35)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBC90A)
            override val surfaceDimLightHighContrast = Color(0xFFBDB9A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F1DE)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B5)
            override val primaryDark = Color(0xFFFFFFFF)
            override val onPrimaryDark = Color(0xFF363100)
            override val primaryContainerDark = Color(0xFFF9E534)
            override val onPrimaryContainerDark = Color(0xFF706500)
            override val secondaryDark = Color(0xFFD2CB47)
            override val onSecondaryDark = Color(0xFF343200)
            override val secondaryContainerDark = Color(0xFFB2AB29)
            override val onSecondaryContainerDark = Color(0xFF413E00)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF323212)
            override val tertiaryContainerDark = Color(0xFFE7E5B7)
            override val onTertiaryContainerDark = Color(0xFF676642)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151409)
            override val onBackgroundDark = Color(0xFFE8E2D1)
            override val surfaceDark = Color(0xFF151409)
            override val onSurfaceDark = Color(0xFFE8E2D1)
            override val surfaceVariantDark = Color(0xFF4A4733)
            override val onSurfaceVariantDark = Color(0xFFCDC7AC)
            override val outlineDark = Color(0xFF969179)
            override val outlineVariantDark = Color(0xFF4A4733)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDark = Color(0xFF333125)
            override val inversePrimaryDark = Color(0xFF695F00)
            override val surfaceDimDark = Color(0xFF151409)
            override val surfaceBrightDark = Color(0xFF3C392D)
            override val surfaceContainerLowestDark = Color(0xFF100E05)
            override val surfaceContainerLowDark = Color(0xFF1D1C11)
            override val surfaceContainerDark = Color(0xFF222015)
            override val surfaceContainerHighDark = Color(0xFF2C2A1F)
            override val surfaceContainerHighestDark = Color(0xFF373529)
            override val primaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF363100)
            override val primaryContainerDarkMediumContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF504900)
            override val secondaryDarkMediumContrast = Color(0xFFE9E15B)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB2AB29)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF1F1D00)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF323212)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE7E5B7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF4A4A28)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151409)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D1)
            override val surfaceDarkMediumContrast = Color(0xFF151409)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DDC1)
            override val outlineDarkMediumContrast = Color(0xFFB8B299)
            override val outlineVariantDarkMediumContrast = Color(0xFF959179)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF504900)
            override val surfaceDimDarkMediumContrast = Color(0xFF151409)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474538)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353327)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E31)
            override val primaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF2F2B00)
            override val secondaryDarkHighContrast = Color(0xFFFDF56C)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEC744)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE7E5B7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF2B2B0D)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151409)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D1)
            override val surfaceDarkHighContrast = Color(0xFF151409)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0D4)
            override val outlineVariantDarkHighContrast = Color(0xFFC9C3A9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF504900)
            override val surfaceDimDarkHighContrast = Color(0xFF151409)
            override val surfaceBrightDarkHighContrast = Color(0xFF535043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222015)
            override val surfaceContainerDarkHighContrast = Color(0xFF333125)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3C2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49473A)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF695F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFEB3B)
            override val onPrimaryContainerLight = Color(0xFF746900)
            override val secondaryLight = Color(0xFF8B08E3)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA63BFE)
            override val onSecondaryContainerLight = Color(0xFF0C001B)
            override val tertiaryLight = Color(0xFF5A0097)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF7429B2)
            override val onTertiaryContainerLight = Color(0xFFDFB6FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9E8)
            override val onBackgroundLight = Color(0xFF1D1C11)
            override val surfaceLight = Color(0xFFFFF9E8)
            override val onSurfaceLight = Color(0xFF1D1C11)
            override val surfaceVariantLight = Color(0xFFE9E3C7)
            override val onSurfaceVariantLight = Color(0xFF4A4733)
            override val outlineLight = Color(0xFF7C7760)
            override val outlineVariantLight = Color(0xFFCDC7AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333125)
            override val inverseOnSurfaceLight = Color(0xFFF6F1DE)
            override val inversePrimaryLight = Color(0xFFDBC90A)
            override val surfaceDimLight = Color(0xFFDFDAC8)
            override val surfaceBrightLight = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E1)
            override val surfaceContainerLight = Color(0xFFF3EEDC)
            override val surfaceContainerHighLight = Color(0xFFEEE8D6)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D1)
            override val primaryLightMediumContrast = Color(0xFF3D3700)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF796E00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF53008B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9B2CF3)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF53008B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7429B2)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFCF0FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1C11)
            override val surfaceLightMediumContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightMediumContrast = Color(0xFF131107)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393723)
            override val outlineLightMediumContrast = Color(0xFF56533E)
            override val outlineVariantLightMediumContrast = Color(0xFF726D57)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F1DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBC90A)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DDCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D2C0)
            override val primaryLightHighContrast = Color(0xFF322D00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF524A00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF450075)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6E00B6)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF450075)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6A1BA8)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightHighContrast = Color(0xFF1D1C11)
            override val surfaceLightHighContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C1A)
            override val outlineVariantLightHighContrast = Color(0xFF4D4A35)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBC90A)
            override val surfaceDimLightHighContrast = Color(0xFFBDB9A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F1DE)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B5)
            override val primaryDark = Color(0xFFFFFFFF)
            override val onPrimaryDark = Color(0xFF363100)
            override val primaryContainerDark = Color(0xFFF9E534)
            override val onPrimaryContainerDark = Color(0xFF706500)
            override val secondaryDark = Color(0xFFDFB7FF)
            override val onSecondaryDark = Color(0xFF4B007E)
            override val secondaryContainerDark = Color(0xFFA63BFE)
            override val onSecondaryContainerDark = Color(0xFF0C001B)
            override val tertiaryDark = Color(0xFFDFB7FF)
            override val onTertiaryDark = Color(0xFF4B007E)
            override val tertiaryContainerDark = Color(0xFF7429B2)
            override val onTertiaryContainerDark = Color(0xFFDFB6FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151409)
            override val onBackgroundDark = Color(0xFFE8E2D1)
            override val surfaceDark = Color(0xFF151409)
            override val onSurfaceDark = Color(0xFFE8E2D1)
            override val surfaceVariantDark = Color(0xFF4A4733)
            override val onSurfaceVariantDark = Color(0xFFCDC7AC)
            override val outlineDark = Color(0xFF969179)
            override val outlineVariantDark = Color(0xFF4A4733)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDark = Color(0xFF333125)
            override val inversePrimaryDark = Color(0xFF695F00)
            override val surfaceDimDark = Color(0xFF151409)
            override val surfaceBrightDark = Color(0xFF3C392D)
            override val surfaceContainerLowestDark = Color(0xFF100E05)
            override val surfaceContainerLowDark = Color(0xFF1D1C11)
            override val surfaceContainerDark = Color(0xFF222015)
            override val surfaceContainerHighDark = Color(0xFF2C2A1F)
            override val surfaceContainerHighestDark = Color(0xFF373529)
            override val primaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF363100)
            override val primaryContainerDarkMediumContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF504900)
            override val secondaryDarkMediumContrast = Color(0xFFEDD3FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF3B0066)
            override val secondaryContainerDarkMediumContrast = Color(0xFFBA6BFF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEDD3FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF3B0066)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB76FF7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151409)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D1)
            override val surfaceDarkMediumContrast = Color(0xFF151409)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DDC1)
            override val outlineDarkMediumContrast = Color(0xFFB8B299)
            override val outlineVariantDarkMediumContrast = Color(0xFF959179)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF504900)
            override val surfaceDimDarkMediumContrast = Color(0xFF151409)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474538)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353327)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E31)
            override val primaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF2F2B00)
            override val secondaryDarkHighContrast = Color(0xFFFAEBFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDCB2FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0C001B)
            override val tertiaryDarkHighContrast = Color(0xFFFAEBFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDCB2FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF16002B)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151409)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D1)
            override val surfaceDarkHighContrast = Color(0xFF151409)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0D4)
            override val outlineVariantDarkHighContrast = Color(0xFFC9C3A9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF504900)
            override val surfaceDimDarkHighContrast = Color(0xFF151409)
            override val surfaceBrightDarkHighContrast = Color(0xFF535043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222015)
            override val surfaceContainerDarkHighContrast = Color(0xFF333125)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3C2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49473A)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF695F00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFEB3B)
            override val onPrimaryContainerLight = Color(0xFF746900)
            override val secondaryLight = Color(0xFF656100)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB2AB29)
            override val onSecondaryContainerLight = Color(0xFF413E00)
            override val tertiaryLight = Color(0xFF0058BC)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF1471E7)
            override val onTertiaryContainerLight = Color(0xFFFEFCFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9E8)
            override val onBackgroundLight = Color(0xFF1D1C11)
            override val surfaceLight = Color(0xFFFFF9E8)
            override val onSurfaceLight = Color(0xFF1D1C11)
            override val surfaceVariantLight = Color(0xFFE9E3C7)
            override val onSurfaceVariantLight = Color(0xFF4A4733)
            override val outlineLight = Color(0xFF7C7760)
            override val outlineVariantLight = Color(0xFFCDC7AC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333125)
            override val inverseOnSurfaceLight = Color(0xFFF6F1DE)
            override val inversePrimaryLight = Color(0xFFDBC90A)
            override val surfaceDimLight = Color(0xFFDFDAC8)
            override val surfaceBrightLight = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E1)
            override val surfaceContainerLight = Color(0xFFF3EEDC)
            override val surfaceContainerHighLight = Color(0xFFEEE8D6)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D1)
            override val primaryLightMediumContrast = Color(0xFF3D3700)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF796E00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3A3800)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF757000)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003474)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF0069DD)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1C11)
            override val surfaceLightMediumContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightMediumContrast = Color(0xFF131107)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393723)
            override val outlineLightMediumContrast = Color(0xFF56533E)
            override val outlineVariantLightMediumContrast = Color(0xFF726D57)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F1DE)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBC90A)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E1)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8D6)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DDCB)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D2C0)
            override val primaryLightHighContrast = Color(0xFF322D00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF524A00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002A61)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF004698)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9E8)
            override val onBackgroundLightHighContrast = Color(0xFF1D1C11)
            override val surfaceLightHighContrast = Color(0xFFFFF9E8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E3C7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C1A)
            override val outlineVariantLightHighContrast = Color(0xFF4D4A35)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333125)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBC90A)
            override val surfaceDimLightHighContrast = Color(0xFFBDB9A8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9E8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F1DE)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B5)
            override val primaryDark = Color(0xFFFFFFFF)
            override val onPrimaryDark = Color(0xFF363100)
            override val primaryContainerDark = Color(0xFFF9E534)
            override val onPrimaryContainerDark = Color(0xFF706500)
            override val secondaryDark = Color(0xFFD2CB47)
            override val onSecondaryDark = Color(0xFF343200)
            override val secondaryContainerDark = Color(0xFFB2AB29)
            override val onSecondaryContainerDark = Color(0xFF413E00)
            override val tertiaryDark = Color(0xFFADC6FF)
            override val onTertiaryDark = Color(0xFF002E69)
            override val tertiaryContainerDark = Color(0xFF4B8EFF)
            override val onTertiaryContainerDark = Color(0xFF002250)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151409)
            override val onBackgroundDark = Color(0xFFE8E2D1)
            override val surfaceDark = Color(0xFF151409)
            override val onSurfaceDark = Color(0xFFE8E2D1)
            override val surfaceVariantDark = Color(0xFF4A4733)
            override val onSurfaceVariantDark = Color(0xFFCDC7AC)
            override val outlineDark = Color(0xFF969179)
            override val outlineVariantDark = Color(0xFF4A4733)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDark = Color(0xFF333125)
            override val inversePrimaryDark = Color(0xFF695F00)
            override val surfaceDimDark = Color(0xFF151409)
            override val surfaceBrightDark = Color(0xFF3C392D)
            override val surfaceContainerLowestDark = Color(0xFF100E05)
            override val surfaceContainerLowDark = Color(0xFF1D1C11)
            override val surfaceContainerDark = Color(0xFF222015)
            override val surfaceContainerHighDark = Color(0xFF2C2A1F)
            override val surfaceContainerHighestDark = Color(0xFF373529)
            override val primaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF363100)
            override val primaryContainerDarkMediumContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF504900)
            override val secondaryDarkMediumContrast = Color(0xFFE9E15B)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB2AB29)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF1F1D00)
            override val tertiaryDarkMediumContrast = Color(0xFFCEDCFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF002454)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF4B8EFF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151409)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D1)
            override val surfaceDarkMediumContrast = Color(0xFF151409)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DDC1)
            override val outlineDarkMediumContrast = Color(0xFFB8B299)
            override val outlineVariantDarkMediumContrast = Color(0xFF959179)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF504900)
            override val surfaceDimDarkMediumContrast = Color(0xFF151409)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474538)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090702)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353327)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E31)
            override val primaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF9E534)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF2F2B00)
            override val secondaryDarkHighContrast = Color(0xFFFDF56C)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEC744)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFECEFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFA7C3FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000A22)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151409)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D1)
            override val surfaceDarkHighContrast = Color(0xFF151409)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4733)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0D4)
            override val outlineVariantDarkHighContrast = Color(0xFFC9C3A9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF504900)
            override val surfaceDimDarkHighContrast = Color(0xFF151409)
            override val surfaceBrightDarkHighContrast = Color(0xFF535043)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222015)
            override val surfaceContainerDarkHighContrast = Color(0xFF333125)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3C2F)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF49473A)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}