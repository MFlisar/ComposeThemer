package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMaterial500Brown : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF5F3E32)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF795548)
            override val onPrimaryContainerLight = Color(0xFFFDCDBC)
            override val secondaryLight = Color(0xFF3D261D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF553C32)
            override val onSecondaryContainerLight = Color(0xFFC9A79A)
            override val tertiaryLight = Color(0xFF5F4B32)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF796348)
            override val onTertiaryContainerLight = Color(0xFFFFE1BF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF1E1B1A)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF1E1B1A)
            override val surfaceVariantLight = Color(0xFFF1DFD9)
            override val onSurfaceVariantLight = Color(0xFF504440)
            override val outlineLight = Color(0xFF82746F)
            override val outlineVariantLight = Color(0xFFD4C3BD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF342F2E)
            override val inverseOnSurfaceLight = Color(0xFFF8EFEC)
            override val inversePrimaryLight = Color(0xFFEBBCAC)
            override val surfaceDimLight = Color(0xFFE1D8D6)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFBF2EF)
            override val surfaceContainerLight = Color(0xFFF5ECE9)
            override val surfaceContainerHighLight = Color(0xFFEFE6E4)
            override val surfaceContainerHighestLight = Color(0xFFE9E1DE)
            override val primaryLightMediumContrast = Color(0xFF4D2F23)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF795548)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D261D)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF553C32)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFF6D0C2)
            override val tertiaryLightMediumContrast = Color(0xFF45331C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF796348)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1B1A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF14100F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F3430)
            override val outlineLightMediumContrast = Color(0xFF5C504B)
            override val outlineVariantLightMediumContrast = Color(0xFF786A65)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF8EFEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightMediumContrast = Color(0xFFCDC5C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFBF2EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE6E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE4DBD9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8D0CD)
            override val primaryLightHighContrast = Color(0xFF41251A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF624135)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3D261D)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF553C32)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3A2912)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF59462D)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF1E1B1A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A26)
            override val outlineVariantLightHighContrast = Color(0xFF534642)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightHighContrast = Color(0xFFBFB7B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF8EFEC)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E1DE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDBD3D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCDC5C2)
            override val primaryDark = Color(0xFFEBBCAC)
            override val onPrimaryDark = Color(0xFF46291E)
            override val primaryContainerDark = Color(0xFF795548)
            override val onPrimaryContainerDark = Color(0xFFFDCDBC)
            override val secondaryDark = Color(0xFFE3BFB1)
            override val onSecondaryDark = Color(0xFF422B22)
            override val secondaryContainerDark = Color(0xFF553C32)
            override val onSecondaryContainerDark = Color(0xFFC9A79A)
            override val tertiaryDark = Color(0xFFDEC2A2)
            override val onTertiaryDark = Color(0xFF3E2D16)
            override val tertiaryContainerDark = Color(0xFF796348)
            override val onTertiaryContainerDark = Color(0xFFFFE1BF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161311)
            override val onBackgroundDark = Color(0xFFE9E1DE)
            override val surfaceDark = Color(0xFF161311)
            override val onSurfaceDark = Color(0xFFE9E1DE)
            override val surfaceVariantDark = Color(0xFF504440)
            override val onSurfaceVariantDark = Color(0xFFD4C3BD)
            override val outlineDark = Color(0xFF9D8D88)
            override val outlineVariantDark = Color(0xFF504440)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDark = Color(0xFF342F2E)
            override val inversePrimaryDark = Color(0xFF7A5649)
            override val surfaceDimDark = Color(0xFF161311)
            override val surfaceBrightDark = Color(0xFF3D3837)
            override val surfaceContainerLowestDark = Color(0xFF110D0C)
            override val surfaceContainerLowDark = Color(0xFF1E1B1A)
            override val surfaceContainerDark = Color(0xFF231F1D)
            override val surfaceContainerHighDark = Color(0xFF2D2928)
            override val surfaceContainerHighestDark = Color(0xFF383432)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C4)
            override val onPrimaryDarkMediumContrast = Color(0xFF3A1E14)
            override val primaryContainerDarkMediumContrast = Color(0xFFB18778)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFAD4C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF362018)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAA8A7D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF5D8B6)
            override val onTertiaryDarkMediumContrast = Color(0xFF33230D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA58D6F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161311)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E1DE)
            override val surfaceDarkMediumContrast = Color(0xFF161311)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD8D3)
            override val outlineDarkMediumContrast = Color(0xFFBFAEA9)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8D88)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D2928)
            override val inversePrimaryDarkMediumContrast = Color(0xFF614034)
            override val surfaceDimDarkMediumContrast = Color(0xFF161311)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484342)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090706)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D1C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B2726)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363230)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413D3B)
            override val primaryDarkHighContrast = Color(0xFFFFECE6)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFE7B8A8)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A0501)
            override val secondaryDarkHighContrast = Color(0xFFFFECE6)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDFBBAD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF170702)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDB)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDABE9E)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF140900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161311)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E1DE)
            override val surfaceDarkHighContrast = Color(0xFF161311)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE6)
            override val outlineVariantDarkHighContrast = Color(0xFFD0BFB9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF614034)
            override val surfaceDimDarkHighContrast = Color(0xFF161311)
            override val surfaceBrightDarkHighContrast = Color(0xFF544F4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF342F2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A39)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B4644)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF5F3E32)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF795548)
            override val onPrimaryContainerLight = Color(0xFFFDCDBC)
            override val secondaryLight = Color(0xFF3D261D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF553C32)
            override val onSecondaryContainerLight = Color(0xFFC9A79A)
            override val tertiaryLight = Color(0xFF695C56)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFECE5)
            override val onTertiaryContainerLight = Color(0xFF786A64)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF1E1B1A)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF1E1B1A)
            override val surfaceVariantLight = Color(0xFFF1DFD9)
            override val onSurfaceVariantLight = Color(0xFF504440)
            override val outlineLight = Color(0xFF82746F)
            override val outlineVariantLight = Color(0xFFD4C3BD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF342F2E)
            override val inverseOnSurfaceLight = Color(0xFFF8EFEC)
            override val inversePrimaryLight = Color(0xFFEBBCAC)
            override val surfaceDimLight = Color(0xFFE1D8D6)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFBF2EF)
            override val surfaceContainerLight = Color(0xFFF5ECE9)
            override val surfaceContainerHighLight = Color(0xFFEFE6E4)
            override val surfaceContainerHighestLight = Color(0xFFE9E1DE)
            override val primaryLightMediumContrast = Color(0xFF4D2F23)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF795548)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D261D)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF553C32)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFF6D0C2)
            override val tertiaryLightMediumContrast = Color(0xFF3F342F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF786A65)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1B1A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF14100F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F3430)
            override val outlineLightMediumContrast = Color(0xFF5C504B)
            override val outlineVariantLightMediumContrast = Color(0xFF786A65)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF8EFEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightMediumContrast = Color(0xFFCDC5C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFBF2EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE6E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE4DBD9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8D0CD)
            override val primaryLightHighContrast = Color(0xFF41251A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF624135)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3D261D)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF553C32)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF342A26)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF534742)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF1E1B1A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A26)
            override val outlineVariantLightHighContrast = Color(0xFF534642)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightHighContrast = Color(0xFFBFB7B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF8EFEC)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E1DE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDBD3D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCDC5C2)
            override val primaryDark = Color(0xFFEBBCAC)
            override val onPrimaryDark = Color(0xFF46291E)
            override val primaryContainerDark = Color(0xFF795548)
            override val onPrimaryContainerDark = Color(0xFFFDCDBC)
            override val secondaryDark = Color(0xFFE3BFB1)
            override val onSecondaryDark = Color(0xFF422B22)
            override val secondaryContainerDark = Color(0xFF553C32)
            override val onSecondaryContainerDark = Color(0xFFC9A79A)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF392E2A)
            override val tertiaryContainerDark = Color(0xFFF1DFD8)
            override val onTertiaryContainerDark = Color(0xFF6F625C)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161311)
            override val onBackgroundDark = Color(0xFFE9E1DE)
            override val surfaceDark = Color(0xFF161311)
            override val onSurfaceDark = Color(0xFFE9E1DE)
            override val surfaceVariantDark = Color(0xFF504440)
            override val onSurfaceVariantDark = Color(0xFFD4C3BD)
            override val outlineDark = Color(0xFF9D8D88)
            override val outlineVariantDark = Color(0xFF504440)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDark = Color(0xFF342F2E)
            override val inversePrimaryDark = Color(0xFF7A5649)
            override val surfaceDimDark = Color(0xFF161311)
            override val surfaceBrightDark = Color(0xFF3D3837)
            override val surfaceContainerLowestDark = Color(0xFF110D0C)
            override val surfaceContainerLowDark = Color(0xFF1E1B1A)
            override val surfaceContainerDark = Color(0xFF231F1D)
            override val surfaceContainerHighDark = Color(0xFF2D2928)
            override val surfaceContainerHighestDark = Color(0xFF383432)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C4)
            override val onPrimaryDarkMediumContrast = Color(0xFF3A1E14)
            override val primaryContainerDarkMediumContrast = Color(0xFFB18778)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFAD4C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF362018)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAA8A7D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF392E2A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFF1DFD8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF514541)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161311)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E1DE)
            override val surfaceDarkMediumContrast = Color(0xFF161311)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD8D3)
            override val outlineDarkMediumContrast = Color(0xFFBFAEA9)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8D88)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D2928)
            override val inversePrimaryDarkMediumContrast = Color(0xFF614034)
            override val surfaceDimDarkMediumContrast = Color(0xFF161311)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484342)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090706)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D1C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B2726)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363230)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413D3B)
            override val primaryDarkHighContrast = Color(0xFFFFECE6)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFE7B8A8)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A0501)
            override val secondaryDarkHighContrast = Color(0xFFFFECE6)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDFBBAD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF170702)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF1DFD8)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF322823)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161311)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E1DE)
            override val surfaceDarkHighContrast = Color(0xFF161311)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE6)
            override val outlineVariantDarkHighContrast = Color(0xFFD0BFB9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF614034)
            override val surfaceDimDarkHighContrast = Color(0xFF161311)
            override val surfaceBrightDarkHighContrast = Color(0xFF544F4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF342F2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A39)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B4644)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF5F3E32)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF795548)
            override val onPrimaryContainerLight = Color(0xFFFDCDBC)
            override val secondaryLight = Color(0xFF2F6054)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF48796C)
            override val onSecondaryContainerLight = Color(0xFFCFFFF0)
            override val tertiaryLight = Color(0xFF1A3E35)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF32554B)
            override val onTertiaryContainerLight = Color(0xFFA2C8BB)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF1E1B1A)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF1E1B1A)
            override val surfaceVariantLight = Color(0xFFF1DFD9)
            override val onSurfaceVariantLight = Color(0xFF504440)
            override val outlineLight = Color(0xFF82746F)
            override val outlineVariantLight = Color(0xFFD4C3BD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF342F2E)
            override val inverseOnSurfaceLight = Color(0xFFF8EFEC)
            override val inversePrimaryLight = Color(0xFFEBBCAC)
            override val surfaceDimLight = Color(0xFFE1D8D6)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFBF2EF)
            override val surfaceContainerLight = Color(0xFFF5ECE9)
            override val surfaceContainerHighLight = Color(0xFFEFE6E4)
            override val surfaceContainerHighestLight = Color(0xFFE9E1DE)
            override val primaryLightMediumContrast = Color(0xFF4D2F23)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF795548)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF053E33)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF457669)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF193C33)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF32554B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFCFF6E8)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1B1A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF14100F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F3430)
            override val outlineLightMediumContrast = Color(0xFF5C504B)
            override val outlineVariantLightMediumContrast = Color(0xFF786A65)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF8EFEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightMediumContrast = Color(0xFFCDC5C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFBF2EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE6E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE4DBD9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8D0CD)
            override val primaryLightHighContrast = Color(0xFF41251A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF624135)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003329)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF1F5146)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF0D3229)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF2D5046)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF1E1B1A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A26)
            override val outlineVariantLightHighContrast = Color(0xFF534642)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightHighContrast = Color(0xFFBFB7B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF8EFEC)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E1DE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDBD3D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCDC5C2)
            override val primaryDark = Color(0xFFEBBCAC)
            override val onPrimaryDark = Color(0xFF46291E)
            override val primaryContainerDark = Color(0xFF795548)
            override val onPrimaryContainerDark = Color(0xFFFDCDBC)
            override val secondaryDark = Color(0xFF9ED1C2)
            override val onSecondaryDark = Color(0xFF00382D)
            override val secondaryContainerDark = Color(0xFF48796C)
            override val onSecondaryContainerDark = Color(0xFFCFFFF0)
            override val tertiaryDark = Color(0xFFA9CFC2)
            override val onTertiaryDark = Color(0xFF12362D)
            override val tertiaryContainerDark = Color(0xFF32554B)
            override val onTertiaryContainerDark = Color(0xFFA2C8BB)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161311)
            override val onBackgroundDark = Color(0xFFE9E1DE)
            override val surfaceDark = Color(0xFF161311)
            override val onSurfaceDark = Color(0xFFE9E1DE)
            override val surfaceVariantDark = Color(0xFF504440)
            override val onSurfaceVariantDark = Color(0xFFD4C3BD)
            override val outlineDark = Color(0xFF9D8D88)
            override val outlineVariantDark = Color(0xFF504440)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDark = Color(0xFF342F2E)
            override val inversePrimaryDark = Color(0xFF7A5649)
            override val surfaceDimDark = Color(0xFF161311)
            override val surfaceBrightDark = Color(0xFF3D3837)
            override val surfaceContainerLowestDark = Color(0xFF110D0C)
            override val surfaceContainerLowDark = Color(0xFF1E1B1A)
            override val surfaceContainerDark = Color(0xFF231F1D)
            override val surfaceContainerHighDark = Color(0xFF2D2928)
            override val surfaceContainerHighestDark = Color(0xFF383432)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C4)
            override val onPrimaryDarkMediumContrast = Color(0xFF3A1E14)
            override val primaryContainerDarkMediumContrast = Color(0xFFB18778)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFB3E7D7)
            override val onSecondaryDarkMediumContrast = Color(0xFF002C23)
            override val secondaryContainerDarkMediumContrast = Color(0xFF699A8C)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFBEE5D7)
            override val onTertiaryDarkMediumContrast = Color(0xFF052B23)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF74988C)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161311)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E1DE)
            override val surfaceDarkMediumContrast = Color(0xFF161311)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD8D3)
            override val outlineDarkMediumContrast = Color(0xFFBFAEA9)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8D88)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D2928)
            override val inversePrimaryDarkMediumContrast = Color(0xFF614034)
            override val surfaceDimDarkMediumContrast = Color(0xFF161311)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484342)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090706)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D1C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B2726)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363230)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413D3B)
            override val primaryDarkHighContrast = Color(0xFFFFECE6)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFE7B8A8)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A0501)
            override val secondaryDarkHighContrast = Color(0xFFC6FBEB)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF9ACDBE)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0A)
            override val tertiaryDarkHighContrast = Color(0xFFD1F8EB)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFA5CBBE)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000E0A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161311)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E1DE)
            override val surfaceDarkHighContrast = Color(0xFF161311)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE6)
            override val outlineVariantDarkHighContrast = Color(0xFFD0BFB9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF614034)
            override val surfaceDimDarkHighContrast = Color(0xFF161311)
            override val surfaceBrightDarkHighContrast = Color(0xFF544F4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF342F2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A39)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B4644)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF5F3E32)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF795548)
            override val onPrimaryContainerLight = Color(0xFFFDCDBC)
            override val secondaryLight = Color(0xFF3D261D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF553C32)
            override val onSecondaryContainerLight = Color(0xFFC9A79A)
            override val tertiaryLight = Color(0xFF536032)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF6B7948)
            override val onTertiaryContainerLight = Color(0xFFF7FFD9)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF1E1B1A)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF1E1B1A)
            override val surfaceVariantLight = Color(0xFFF1DFD9)
            override val onSurfaceVariantLight = Color(0xFF504440)
            override val outlineLight = Color(0xFF82746F)
            override val outlineVariantLight = Color(0xFFD4C3BD)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF342F2E)
            override val inverseOnSurfaceLight = Color(0xFFF8EFEC)
            override val inversePrimaryLight = Color(0xFFEBBCAC)
            override val surfaceDimLight = Color(0xFFE1D8D6)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFBF2EF)
            override val surfaceContainerLight = Color(0xFFF5ECE9)
            override val surfaceContainerHighLight = Color(0xFFEFE6E4)
            override val surfaceContainerHighestLight = Color(0xFFE9E1DE)
            override val primaryLightMediumContrast = Color(0xFF4D2F23)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF795548)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3D261D)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF553C32)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFF6D0C2)
            override val tertiaryLightMediumContrast = Color(0xFF2E3A10)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF657242)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1B1A)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF14100F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F3430)
            override val outlineLightMediumContrast = Color(0xFF5C504B)
            override val outlineVariantLightMediumContrast = Color(0xFF786A65)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF8EFEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightMediumContrast = Color(0xFFCDC5C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFBF2EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE6E4)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE4DBD9)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8D0CD)
            override val primaryLightHighContrast = Color(0xFF41251A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF624135)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3D261D)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF553C32)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF253007)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF414E22)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF1E1B1A)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD9)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A26)
            override val outlineVariantLightHighContrast = Color(0xFF534642)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF342F2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFEBBCAC)
            override val surfaceDimLightHighContrast = Color(0xFFBFB7B5)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF8EFEC)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E1DE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDBD3D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCDC5C2)
            override val primaryDark = Color(0xFFEBBCAC)
            override val onPrimaryDark = Color(0xFF46291E)
            override val primaryContainerDark = Color(0xFF795548)
            override val onPrimaryContainerDark = Color(0xFFFDCDBC)
            override val secondaryDark = Color(0xFFE3BFB1)
            override val onSecondaryDark = Color(0xFF422B22)
            override val secondaryContainerDark = Color(0xFF553C32)
            override val onSecondaryContainerDark = Color(0xFFC9A79A)
            override val tertiaryDark = Color(0xFFBDCD94)
            override val onTertiaryDark = Color(0xFF29340B)
            override val tertiaryContainerDark = Color(0xFF6B7948)
            override val onTertiaryContainerDark = Color(0xFFF7FFD9)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161311)
            override val onBackgroundDark = Color(0xFFE9E1DE)
            override val surfaceDark = Color(0xFF161311)
            override val onSurfaceDark = Color(0xFFE9E1DE)
            override val surfaceVariantDark = Color(0xFF504440)
            override val onSurfaceVariantDark = Color(0xFFD4C3BD)
            override val outlineDark = Color(0xFF9D8D88)
            override val outlineVariantDark = Color(0xFF504440)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDark = Color(0xFF342F2E)
            override val inversePrimaryDark = Color(0xFF7A5649)
            override val surfaceDimDark = Color(0xFF161311)
            override val surfaceBrightDark = Color(0xFF3D3837)
            override val surfaceContainerLowestDark = Color(0xFF110D0C)
            override val surfaceContainerLowDark = Color(0xFF1E1B1A)
            override val surfaceContainerDark = Color(0xFF231F1D)
            override val surfaceContainerHighDark = Color(0xFF2D2928)
            override val surfaceContainerHighestDark = Color(0xFF383432)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C4)
            override val onPrimaryDarkMediumContrast = Color(0xFF3A1E14)
            override val primaryContainerDarkMediumContrast = Color(0xFFB18778)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFAD4C6)
            override val onSecondaryDarkMediumContrast = Color(0xFF362018)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAA8A7D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD3E3A9)
            override val onTertiaryDarkMediumContrast = Color(0xFF1E2902)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF889763)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161311)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E1DE)
            override val surfaceDarkMediumContrast = Color(0xFF161311)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD8D3)
            override val outlineDarkMediumContrast = Color(0xFFBFAEA9)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8D88)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D2928)
            override val inversePrimaryDarkMediumContrast = Color(0xFF614034)
            override val surfaceDimDarkMediumContrast = Color(0xFF161311)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484342)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090706)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF211D1C)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B2726)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363230)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413D3B)
            override val primaryDarkHighContrast = Color(0xFFFFECE6)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFE7B8A8)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1A0501)
            override val secondaryDarkHighContrast = Color(0xFFFFECE6)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDFBBAD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF170702)
            override val tertiaryDarkHighContrast = Color(0xFFE7F7BB)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBAC991)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF080D00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161311)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E1DE)
            override val surfaceDarkHighContrast = Color(0xFF161311)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF504440)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE6)
            override val outlineVariantDarkHighContrast = Color(0xFFD0BFB9)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E1DE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF614034)
            override val surfaceDimDarkHighContrast = Color(0xFF161311)
            override val surfaceBrightDarkHighContrast = Color(0xFF544F4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF231F1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF342F2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A39)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4B4644)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = Material500Themes
    override val groupKey = ComposeTheme.Key("brown", "Brown")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}