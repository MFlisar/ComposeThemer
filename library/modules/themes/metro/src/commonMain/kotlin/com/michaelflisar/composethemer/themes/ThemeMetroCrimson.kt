package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroCrimson : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF8F4A4B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDAD9)
            override val onPrimaryContainerLight = Color(0xFF733335)
            override val secondaryLight = Color(0xFF8D495A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD9DF)
            override val onSecondaryContainerLight = Color(0xFF713342)
            override val tertiaryLight = Color(0xFF904B3A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDAD2)
            override val onTertiaryContainerLight = Color(0xFF723425)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF221919)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF221919)
            override val surfaceVariantLight = Color(0xFFF4DDDC)
            override val onSurfaceVariantLight = Color(0xFF524343)
            override val outlineLight = Color(0xFF857372)
            override val outlineVariantLight = Color(0xFFD7C1C1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2E)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEC)
            override val inversePrimaryLight = Color(0xFFFFB3B3)
            override val surfaceDimLight = Color(0xFFE8D6D5)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EF)
            override val surfaceContainerLight = Color(0xFFFCEAE9)
            override val surfaceContainerHighLight = Color(0xFFF6E4E3)
            override val surfaceContainerHighestLight = Color(0xFFF0DEDE)
            override val primaryLightMediumContrast = Color(0xFF5E2325)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA15859)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5D2232)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9F5868)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5D2417)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA15948)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF221919)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413332)
            override val outlineLightMediumContrast = Color(0xFF5F4F4E)
            override val outlineVariantLightMediumContrast = Color(0xFF7A6968)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4E3)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D8)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCECD)
            override val primaryLightHighContrast = Color(0xFF51191C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF763537)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF501828)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF743545)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF501B0E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF753727)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF221919)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362929)
            override val outlineVariantLightHighContrast = Color(0xFF554545)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightHighContrast = Color(0xFFC5B5B4)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEC)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DEDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D0D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3C2)
            override val primaryDark = Color(0xFFFFB3B3)
            override val onPrimaryDark = Color(0xFF561D20)
            override val primaryContainerDark = Color(0xFF733335)
            override val onPrimaryContainerDark = Color(0xFFFFDAD9)
            override val secondaryDark = Color(0xFFFFB1C1)
            override val onSecondaryDark = Color(0xFF551D2C)
            override val secondaryContainerDark = Color(0xFF713342)
            override val onSecondaryContainerDark = Color(0xFFFFD9DF)
            override val tertiaryDark = Color(0xFFFFB4A2)
            override val onTertiaryDark = Color(0xFF561F11)
            override val tertiaryContainerDark = Color(0xFF723425)
            override val onTertiaryContainerDark = Color(0xFFFFDAD2)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A1111)
            override val onBackgroundDark = Color(0xFFF0DEDE)
            override val surfaceDark = Color(0xFF1A1111)
            override val onSurfaceDark = Color(0xFFF0DEDE)
            override val surfaceVariantDark = Color(0xFF524343)
            override val onSurfaceVariantDark = Color(0xFFD7C1C1)
            override val outlineDark = Color(0xFFA08C8C)
            override val outlineVariantDark = Color(0xFF524343)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDark = Color(0xFF382E2E)
            override val inversePrimaryDark = Color(0xFF8F4A4B)
            override val surfaceDimDark = Color(0xFF1A1111)
            override val surfaceBrightDark = Color(0xFF423736)
            override val surfaceContainerLowestDark = Color(0xFF140C0C)
            override val surfaceContainerLowDark = Color(0xFF221919)
            override val surfaceContainerDark = Color(0xFF271D1D)
            override val surfaceContainerHighDark = Color(0xFF322827)
            override val surfaceContainerHighestDark = Color(0xFF3D3232)
            override val primaryDarkMediumContrast = Color(0xFFFFD2D1)
            override val onPrimaryDarkMediumContrast = Color(0xFF481216)
            override val primaryContainerDarkMediumContrast = Color(0xFFCB7A7B)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD1D8)
            override val onSecondaryDarkMediumContrast = Color(0xFF481222)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC87A8B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD2C8)
            override val onTertiaryDarkMediumContrast = Color(0xFF481408)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCB7C68)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A1111)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DEDE)
            override val surfaceDarkMediumContrast = Color(0xFF1A1111)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED7D6)
            override val outlineDarkMediumContrast = Color(0xFFC2ADAC)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C8B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322827)
            override val inversePrimaryDarkMediumContrast = Color(0xFF743436)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4241)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0606)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251B1B)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2525)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3030)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B3B)
            override val primaryDarkHighContrast = Color(0xFFFFECEB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFADAD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220003)
            override val secondaryDarkHighContrast = Color(0xFFFFEBED)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFABBD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF210009)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAF9B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F0200)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A1111)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DEDE)
            override val surfaceDarkHighContrast = Color(0xFF1A1111)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECEB)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEBD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF743436)
            override val surfaceDimDarkHighContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkHighContrast = Color(0xFF594D4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271D1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443938)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504444)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF8F4A4B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDAD9)
            override val onPrimaryContainerLight = Color(0xFF733335)
            override val secondaryLight = Color(0xFF8D495A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD9DF)
            override val onSecondaryContainerLight = Color(0xFF713342)
            override val tertiaryLight = Color(0xFF894A68)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD8E6)
            override val onTertiaryContainerLight = Color(0xFF6D3350)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF221919)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF221919)
            override val surfaceVariantLight = Color(0xFFF4DDDC)
            override val onSurfaceVariantLight = Color(0xFF524343)
            override val outlineLight = Color(0xFF857372)
            override val outlineVariantLight = Color(0xFFD7C1C1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2E)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEC)
            override val inversePrimaryLight = Color(0xFFFFB3B3)
            override val surfaceDimLight = Color(0xFFE8D6D5)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EF)
            override val surfaceContainerLight = Color(0xFFFCEAE9)
            override val surfaceContainerHighLight = Color(0xFFF6E4E3)
            override val surfaceContainerHighestLight = Color(0xFFF0DEDE)
            override val primaryLightMediumContrast = Color(0xFF5E2325)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA15859)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5D2232)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9F5868)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5A233F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9A5977)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF221919)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413332)
            override val outlineLightMediumContrast = Color(0xFF5F4F4E)
            override val outlineVariantLightMediumContrast = Color(0xFF7A6968)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4E3)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D8)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCECD)
            override val primaryLightHighContrast = Color(0xFF51191C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF763537)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF501828)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF743545)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4D1934)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF703652)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF221919)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362929)
            override val outlineVariantLightHighContrast = Color(0xFF554545)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightHighContrast = Color(0xFFC5B5B4)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEC)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DEDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D0D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3C2)
            override val primaryDark = Color(0xFFFFB3B3)
            override val onPrimaryDark = Color(0xFF561D20)
            override val primaryContainerDark = Color(0xFF733335)
            override val onPrimaryContainerDark = Color(0xFFFFDAD9)
            override val secondaryDark = Color(0xFFFFB1C1)
            override val onSecondaryDark = Color(0xFF551D2C)
            override val secondaryContainerDark = Color(0xFF713342)
            override val onSecondaryContainerDark = Color(0xFFFFD9DF)
            override val tertiaryDark = Color(0xFFFEB0D1)
            override val onTertiaryDark = Color(0xFF531D39)
            override val tertiaryContainerDark = Color(0xFF6D3350)
            override val onTertiaryContainerDark = Color(0xFFFFD8E6)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A1111)
            override val onBackgroundDark = Color(0xFFF0DEDE)
            override val surfaceDark = Color(0xFF1A1111)
            override val onSurfaceDark = Color(0xFFF0DEDE)
            override val surfaceVariantDark = Color(0xFF524343)
            override val onSurfaceVariantDark = Color(0xFFD7C1C1)
            override val outlineDark = Color(0xFFA08C8C)
            override val outlineVariantDark = Color(0xFF524343)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDark = Color(0xFF382E2E)
            override val inversePrimaryDark = Color(0xFF8F4A4B)
            override val surfaceDimDark = Color(0xFF1A1111)
            override val surfaceBrightDark = Color(0xFF423736)
            override val surfaceContainerLowestDark = Color(0xFF140C0C)
            override val surfaceContainerLowDark = Color(0xFF221919)
            override val surfaceContainerDark = Color(0xFF271D1D)
            override val surfaceContainerHighDark = Color(0xFF322827)
            override val surfaceContainerHighestDark = Color(0xFF3D3232)
            override val primaryDarkMediumContrast = Color(0xFFFFD2D1)
            override val onPrimaryDarkMediumContrast = Color(0xFF481216)
            override val primaryContainerDarkMediumContrast = Color(0xFFCB7A7B)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD1D8)
            override val onSecondaryDarkMediumContrast = Color(0xFF481222)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC87A8B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD0E2)
            override val onTertiaryDarkMediumContrast = Color(0xFF45122E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC27B9B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A1111)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DEDE)
            override val surfaceDarkMediumContrast = Color(0xFF1A1111)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED7D6)
            override val outlineDarkMediumContrast = Color(0xFFC2ADAC)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C8B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322827)
            override val inversePrimaryDarkMediumContrast = Color(0xFF743436)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4241)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0606)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251B1B)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2525)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3030)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B3B)
            override val primaryDarkHighContrast = Color(0xFFFFECEB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFADAD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220003)
            override val secondaryDarkHighContrast = Color(0xFFFFEBED)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFABBD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF210009)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF1)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFAACCD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF200011)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A1111)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DEDE)
            override val surfaceDarkHighContrast = Color(0xFF1A1111)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECEB)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEBD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF743436)
            override val surfaceDimDarkHighContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkHighContrast = Color(0xFF594D4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271D1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443938)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504444)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8F4A4B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDAD9)
            override val onPrimaryContainerLight = Color(0xFF733335)
            override val secondaryLight = Color(0xFF416835)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFC1EFAE)
            override val onSecondaryContainerLight = Color(0xFF2A4F1F)
            override val tertiaryLight = Color(0xFF416834)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC2EFAE)
            override val onTertiaryContainerLight = Color(0xFF2A4F1F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF221919)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF221919)
            override val surfaceVariantLight = Color(0xFFF4DDDC)
            override val onSurfaceVariantLight = Color(0xFF524343)
            override val outlineLight = Color(0xFF857372)
            override val outlineVariantLight = Color(0xFFD7C1C1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2E)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEC)
            override val inversePrimaryLight = Color(0xFFFFB3B3)
            override val surfaceDimLight = Color(0xFFE8D6D5)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EF)
            override val surfaceContainerLight = Color(0xFFFCEAE9)
            override val surfaceContainerHighLight = Color(0xFFF6E4E3)
            override val surfaceContainerHighestLight = Color(0xFFF0DEDE)
            override val primaryLightMediumContrast = Color(0xFF5E2325)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA15859)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF193E10)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4F7742)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF193E10)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF4F7742)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF221919)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413332)
            override val outlineLightMediumContrast = Color(0xFF5F4F4E)
            override val outlineVariantLightMediumContrast = Color(0xFF7A6968)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4E3)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D8)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCECD)
            override val primaryLightHighContrast = Color(0xFF51191C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF763537)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0E3406)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF2C5221)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF0F3306)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF2C5221)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF221919)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362929)
            override val outlineVariantLightHighContrast = Color(0xFF554545)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightHighContrast = Color(0xFFC5B5B4)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEC)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DEDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D0D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3C2)
            override val primaryDark = Color(0xFFFFB3B3)
            override val onPrimaryDark = Color(0xFF561D20)
            override val primaryContainerDark = Color(0xFF733335)
            override val onPrimaryContainerDark = Color(0xFFFFDAD9)
            override val secondaryDark = Color(0xFFA6D394)
            override val onSecondaryDark = Color(0xFF13380A)
            override val secondaryContainerDark = Color(0xFF2A4F1F)
            override val onSecondaryContainerDark = Color(0xFFC1EFAE)
            override val tertiaryDark = Color(0xFFA6D394)
            override val onTertiaryDark = Color(0xFF13380A)
            override val tertiaryContainerDark = Color(0xFF2A4F1F)
            override val onTertiaryContainerDark = Color(0xFFC2EFAE)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A1111)
            override val onBackgroundDark = Color(0xFFF0DEDE)
            override val surfaceDark = Color(0xFF1A1111)
            override val onSurfaceDark = Color(0xFFF0DEDE)
            override val surfaceVariantDark = Color(0xFF524343)
            override val onSurfaceVariantDark = Color(0xFFD7C1C1)
            override val outlineDark = Color(0xFFA08C8C)
            override val outlineVariantDark = Color(0xFF524343)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDark = Color(0xFF382E2E)
            override val inversePrimaryDark = Color(0xFF8F4A4B)
            override val surfaceDimDark = Color(0xFF1A1111)
            override val surfaceBrightDark = Color(0xFF423736)
            override val surfaceContainerLowestDark = Color(0xFF140C0C)
            override val surfaceContainerLowDark = Color(0xFF221919)
            override val surfaceContainerDark = Color(0xFF271D1D)
            override val surfaceContainerHighDark = Color(0xFF322827)
            override val surfaceContainerHighestDark = Color(0xFF3D3232)
            override val primaryDarkMediumContrast = Color(0xFFFFD2D1)
            override val onPrimaryDarkMediumContrast = Color(0xFF481216)
            override val primaryContainerDarkMediumContrast = Color(0xFFCB7A7B)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFBBE9A9)
            override val onSecondaryDarkMediumContrast = Color(0xFF072D02)
            override val secondaryContainerDarkMediumContrast = Color(0xFF729C63)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFBCE9A8)
            override val onTertiaryDarkMediumContrast = Color(0xFF072D02)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF729C62)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A1111)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DEDE)
            override val surfaceDarkMediumContrast = Color(0xFF1A1111)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED7D6)
            override val outlineDarkMediumContrast = Color(0xFFC2ADAC)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C8B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322827)
            override val inversePrimaryDarkMediumContrast = Color(0xFF743436)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4241)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0606)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251B1B)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2525)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3030)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B3B)
            override val primaryDarkHighContrast = Color(0xFFFFECEB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFADAD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220003)
            override val secondaryDarkHighContrast = Color(0xFFCFFDBB)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA2CF91)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF010F00)
            override val tertiaryDarkHighContrast = Color(0xFFCFFDBB)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFA3CF90)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF010F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A1111)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DEDE)
            override val surfaceDarkHighContrast = Color(0xFF1A1111)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECEB)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEBD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF743436)
            override val surfaceDimDarkHighContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkHighContrast = Color(0xFF594D4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271D1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443938)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504444)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8F4A4B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDAD9)
            override val onPrimaryContainerLight = Color(0xFF733335)
            override val secondaryLight = Color(0xFF8D495A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD9DF)
            override val onSecondaryContainerLight = Color(0xFF713342)
            override val tertiaryLight = Color(0xFF695F12)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF2E48A)
            override val onTertiaryContainerLight = Color(0xFF4F4700)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F7)
            override val onBackgroundLight = Color(0xFF221919)
            override val surfaceLight = Color(0xFFFFF8F7)
            override val onSurfaceLight = Color(0xFF221919)
            override val surfaceVariantLight = Color(0xFFF4DDDC)
            override val onSurfaceVariantLight = Color(0xFF524343)
            override val outlineLight = Color(0xFF857372)
            override val outlineVariantLight = Color(0xFFD7C1C1)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2E)
            override val inverseOnSurfaceLight = Color(0xFFFFEDEC)
            override val inversePrimaryLight = Color(0xFFFFB3B3)
            override val surfaceDimLight = Color(0xFFE8D6D5)
            override val surfaceBrightLight = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0EF)
            override val surfaceContainerLight = Color(0xFFFCEAE9)
            override val surfaceContainerHighLight = Color(0xFFF6E4E3)
            override val surfaceContainerHighestLight = Color(0xFFF0DEDE)
            override val primaryLightMediumContrast = Color(0xFF5E2325)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA15859)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5D2232)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9F5868)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3D3700)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF786E21)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightMediumContrast = Color(0xFF221919)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0F)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF413332)
            override val outlineLightMediumContrast = Color(0xFF5F4F4E)
            override val outlineVariantLightMediumContrast = Color(0xFF7A6968)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEC)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3C2)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EF)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4E3)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D8)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCECD)
            override val primaryLightHighContrast = Color(0xFF51191C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF763537)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF501828)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF743545)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF322D00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF524A00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F7)
            override val onBackgroundLightHighContrast = Color(0xFF221919)
            override val surfaceLightHighContrast = Color(0xFFFFF8F7)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DDDC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362929)
            override val outlineVariantLightHighContrast = Color(0xFF554545)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2E)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB3B3)
            override val surfaceDimLightHighContrast = Color(0xFFC5B5B4)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F7)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDEC)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DEDE)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D0D0)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3C2)
            override val primaryDark = Color(0xFFFFB3B3)
            override val onPrimaryDark = Color(0xFF561D20)
            override val primaryContainerDark = Color(0xFF733335)
            override val onPrimaryContainerDark = Color(0xFFFFDAD9)
            override val secondaryDark = Color(0xFFFFB1C1)
            override val onSecondaryDark = Color(0xFF551D2C)
            override val secondaryContainerDark = Color(0xFF713342)
            override val onSecondaryContainerDark = Color(0xFFFFD9DF)
            override val tertiaryDark = Color(0xFFD5C871)
            override val onTertiaryDark = Color(0xFF373100)
            override val tertiaryContainerDark = Color(0xFF4F4700)
            override val onTertiaryContainerDark = Color(0xFFF2E48A)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A1111)
            override val onBackgroundDark = Color(0xFFF0DEDE)
            override val surfaceDark = Color(0xFF1A1111)
            override val onSurfaceDark = Color(0xFFF0DEDE)
            override val surfaceVariantDark = Color(0xFF524343)
            override val onSurfaceVariantDark = Color(0xFFD7C1C1)
            override val outlineDark = Color(0xFFA08C8C)
            override val outlineVariantDark = Color(0xFF524343)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDark = Color(0xFF382E2E)
            override val inversePrimaryDark = Color(0xFF8F4A4B)
            override val surfaceDimDark = Color(0xFF1A1111)
            override val surfaceBrightDark = Color(0xFF423736)
            override val surfaceContainerLowestDark = Color(0xFF140C0C)
            override val surfaceContainerLowDark = Color(0xFF221919)
            override val surfaceContainerDark = Color(0xFF271D1D)
            override val surfaceContainerHighDark = Color(0xFF322827)
            override val surfaceContainerHighestDark = Color(0xFF3D3232)
            override val primaryDarkMediumContrast = Color(0xFFFFD2D1)
            override val onPrimaryDarkMediumContrast = Color(0xFF481216)
            override val primaryContainerDarkMediumContrast = Color(0xFFCB7A7B)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD1D8)
            override val onSecondaryDarkMediumContrast = Color(0xFF481222)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC87A8B)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEBDE84)
            override val onTertiaryDarkMediumContrast = Color(0xFF2B2600)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9D9241)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A1111)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DEDE)
            override val surfaceDarkMediumContrast = Color(0xFF1A1111)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED7D6)
            override val outlineDarkMediumContrast = Color(0xFFC2ADAC)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C8B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322827)
            override val inversePrimaryDarkMediumContrast = Color(0xFF743436)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D4241)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0606)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251B1B)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2525)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B3030)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B3B)
            override val primaryDarkHighContrast = Color(0xFFFFECEB)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFADAD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF220003)
            override val secondaryDarkHighContrast = Color(0xFFFFEBED)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFABBD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF210009)
            override val tertiaryDarkHighContrast = Color(0xFFFFF29B)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD1C46E)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A1111)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DEDE)
            override val surfaceDarkHighContrast = Color(0xFF1A1111)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF524343)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECEB)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEBD)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DEDE)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF743436)
            override val surfaceDimDarkHighContrast = Color(0xFF1A1111)
            override val surfaceBrightDarkHighContrast = Color(0xFF594D4D)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271D1D)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2E)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443938)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504444)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("crimson", "Crimson")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}