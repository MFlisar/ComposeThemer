package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroMauve : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF6F528A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF0DBFF)
            override val onPrimaryContainerLight = Color(0xFF563B71)
            override val secondaryLight = Color(0xFF67548E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEADDFF)
            override val onSecondaryContainerLight = Color(0xFF4F3D74)
            override val tertiaryLight = Color(0xFF745086)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF6D9FF)
            override val onTertiaryContainerLight = Color(0xFF5B396D)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FE)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FE)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFE9DFEB)
            override val onSurfaceVariantLight = Color(0xFF4A454E)
            override val outlineLight = Color(0xFF7C757E)
            override val outlineVariantLight = Color(0xFFCCC4CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF6)
            override val inversePrimaryLight = Color(0xFFDBB9F9)
            override val surfaceDimLight = Color(0xFFDFD8DF)
            override val surfaceBrightLight = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEEE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE8E0E8)
            override val primaryLightMediumContrast = Color(0xFF442A5F)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7E619A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3E2C62)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF76639E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF49285B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF845F96)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF39343D)
            override val outlineLightMediumContrast = Color(0xFF565059)
            override val outlineVariantLightMediumContrast = Color(0xFF716B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7CFD7)
            override val primaryLightHighContrast = Color(0xFF3A1F54)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF583D73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF332158)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF513F77)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3E1E50)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5E3B6F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A32)
            override val outlineVariantLightHighContrast = Color(0xFF4D4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightHighContrast = Color(0xFFBEB7BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E0E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CC)
            override val primaryDark = Color(0xFFDBB9F9)
            override val onPrimaryDark = Color(0xFF3E2458)
            override val primaryContainerDark = Color(0xFF563B71)
            override val onPrimaryContainerDark = Color(0xFFF0DBFF)
            override val secondaryDark = Color(0xFFD2BCFD)
            override val onSecondaryDark = Color(0xFF38265C)
            override val secondaryContainerDark = Color(0xFF4F3D74)
            override val onSecondaryContainerDark = Color(0xFFEADDFF)
            override val tertiaryDark = Color(0xFFE2B7F4)
            override val onTertiaryDark = Color(0xFF432254)
            override val tertiaryContainerDark = Color(0xFF5B396D)
            override val onTertiaryContainerDark = Color(0xFFF6D9FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151218)
            override val onBackgroundDark = Color(0xFFE8E0E8)
            override val surfaceDark = Color(0xFF151218)
            override val onSurfaceDark = Color(0xFFE8E0E8)
            override val surfaceVariantDark = Color(0xFF4A454E)
            override val onSurfaceVariantDark = Color(0xFFCCC4CE)
            override val outlineDark = Color(0xFF968E98)
            override val outlineVariantDark = Color(0xFF4A454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF6F528A)
            override val surfaceDimDark = Color(0xFF151218)
            override val surfaceBrightDark = Color(0xFF3C383E)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2C292E)
            override val surfaceContainerHighestDark = Color(0xFF373339)
            override val primaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF33184D)
            override val primaryContainerDarkMediumContrast = Color(0xFFA384C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D1A51)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9B87C4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF3D1FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF371749)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFAA82BB)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E0E8)
            override val surfaceDarkMediumContrast = Color(0xFF151218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB7AFBA)
            override val outlineVariantDarkMediumContrast = Color(0xFF958E98)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF573C72)
            override val surfaceDimDarkMediumContrast = Color(0xFF151218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A272C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C42)
            override val primaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD7B5F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF15002B)
            override val secondaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEB8F9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110031)
            override val tertiaryDarkHighContrast = Color(0xFFFCEAFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDEB3F0)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180027)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151218)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E0E8)
            override val surfaceDarkHighContrast = Color(0xFF151218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C0CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF573C72)
            override val surfaceDimDarkHighContrast = Color(0xFF151218)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF6F528A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF0DBFF)
            override val onPrimaryContainerLight = Color(0xFF563B71)
            override val secondaryLight = Color(0xFF67548E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEADDFF)
            override val onSecondaryContainerLight = Color(0xFF4F3D74)
            override val tertiaryLight = Color(0xFF5F5790)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE5DEFF)
            override val onTertiaryContainerLight = Color(0xFF473F77)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FE)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FE)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFE9DFEB)
            override val onSurfaceVariantLight = Color(0xFF4A454E)
            override val outlineLight = Color(0xFF7C757E)
            override val outlineVariantLight = Color(0xFFCCC4CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF6)
            override val inversePrimaryLight = Color(0xFFDBB9F9)
            override val surfaceDimLight = Color(0xFFDFD8DF)
            override val surfaceBrightLight = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEEE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE8E0E8)
            override val primaryLightMediumContrast = Color(0xFF442A5F)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7E619A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3E2C62)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF76639E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF372E65)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6E65A0)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF39343D)
            override val outlineLightMediumContrast = Color(0xFF565059)
            override val outlineVariantLightMediumContrast = Color(0xFF716B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7CFD7)
            override val primaryLightHighContrast = Color(0xFF3A1F54)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF583D73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF332158)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF513F77)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2C245A)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4A417A)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A32)
            override val outlineVariantLightHighContrast = Color(0xFF4D4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightHighContrast = Color(0xFFBEB7BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E0E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CC)
            override val primaryDark = Color(0xFFDBB9F9)
            override val onPrimaryDark = Color(0xFF3E2458)
            override val primaryContainerDark = Color(0xFF563B71)
            override val onPrimaryContainerDark = Color(0xFFF0DBFF)
            override val secondaryDark = Color(0xFFD2BCFD)
            override val onSecondaryDark = Color(0xFF38265C)
            override val secondaryContainerDark = Color(0xFF4F3D74)
            override val onSecondaryContainerDark = Color(0xFFEADDFF)
            override val tertiaryDark = Color(0xFFC9BFFF)
            override val onTertiaryDark = Color(0xFF31285F)
            override val tertiaryContainerDark = Color(0xFF473F77)
            override val onTertiaryContainerDark = Color(0xFFE5DEFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151218)
            override val onBackgroundDark = Color(0xFFE8E0E8)
            override val surfaceDark = Color(0xFF151218)
            override val onSurfaceDark = Color(0xFFE8E0E8)
            override val surfaceVariantDark = Color(0xFF4A454E)
            override val onSurfaceVariantDark = Color(0xFFCCC4CE)
            override val outlineDark = Color(0xFF968E98)
            override val outlineVariantDark = Color(0xFF4A454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF6F528A)
            override val surfaceDimDark = Color(0xFF151218)
            override val surfaceBrightDark = Color(0xFF3C383E)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2C292E)
            override val surfaceContainerHighestDark = Color(0xFF373339)
            override val primaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF33184D)
            override val primaryContainerDarkMediumContrast = Color(0xFFA384C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D1A51)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9B87C4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFDFD7FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF261D53)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9289C7)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E0E8)
            override val surfaceDarkMediumContrast = Color(0xFF151218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB7AFBA)
            override val outlineVariantDarkMediumContrast = Color(0xFF958E98)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF573C72)
            override val surfaceDimDarkMediumContrast = Color(0xFF151218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A272C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C42)
            override val primaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD7B5F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF15002B)
            override val secondaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEB8F9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110031)
            override val tertiaryDarkHighContrast = Color(0xFFF3EDFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC5BBFC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0B0037)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151218)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E0E8)
            override val surfaceDarkHighContrast = Color(0xFF151218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C0CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF573C72)
            override val surfaceDimDarkHighContrast = Color(0xFF151218)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF6F528A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF0DBFF)
            override val onPrimaryContainerLight = Color(0xFF563B71)
            override val secondaryLight = Color(0xFF6C5E10)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFF6E388)
            override val onSecondaryContainerLight = Color(0xFF524700)
            override val tertiaryLight = Color(0xFF6C5E0F)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF7E388)
            override val onTertiaryContainerLight = Color(0xFF524600)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FE)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FE)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFE9DFEB)
            override val onSurfaceVariantLight = Color(0xFF4A454E)
            override val outlineLight = Color(0xFF7C757E)
            override val outlineVariantLight = Color(0xFFCCC4CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF6)
            override val inversePrimaryLight = Color(0xFFDBB9F9)
            override val surfaceDimLight = Color(0xFFDFD8DF)
            override val surfaceBrightLight = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEEE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE8E0E8)
            override val primaryLightMediumContrast = Color(0xFF442A5F)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7E619A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3F3600)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7B6D1F)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3F3600)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7C6D1F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF39343D)
            override val outlineLightMediumContrast = Color(0xFF565059)
            override val outlineVariantLightMediumContrast = Color(0xFF716B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7CFD7)
            override val primaryLightHighContrast = Color(0xFF3A1F54)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF583D73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF342C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF554900)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF342C00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF554900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A32)
            override val outlineVariantLightHighContrast = Color(0xFF4D4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightHighContrast = Color(0xFFBEB7BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E0E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CC)
            override val primaryDark = Color(0xFFDBB9F9)
            override val onPrimaryDark = Color(0xFF3E2458)
            override val primaryContainerDark = Color(0xFF563B71)
            override val onPrimaryContainerDark = Color(0xFFF0DBFF)
            override val secondaryDark = Color(0xFFD9C76F)
            override val onSecondaryDark = Color(0xFF393000)
            override val secondaryContainerDark = Color(0xFF524700)
            override val onSecondaryContainerDark = Color(0xFFF6E388)
            override val tertiaryDark = Color(0xFFDAC76F)
            override val onTertiaryDark = Color(0xFF393000)
            override val tertiaryContainerDark = Color(0xFF524600)
            override val onTertiaryContainerDark = Color(0xFFF7E388)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151218)
            override val onBackgroundDark = Color(0xFFE8E0E8)
            override val surfaceDark = Color(0xFF151218)
            override val onSurfaceDark = Color(0xFFE8E0E8)
            override val surfaceVariantDark = Color(0xFF4A454E)
            override val onSurfaceVariantDark = Color(0xFFCCC4CE)
            override val outlineDark = Color(0xFF968E98)
            override val outlineVariantDark = Color(0xFF4A454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF6F528A)
            override val surfaceDimDark = Color(0xFF151218)
            override val surfaceBrightDark = Color(0xFF3C383E)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2C292E)
            override val surfaceContainerHighestDark = Color(0xFF373339)
            override val primaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF33184D)
            override val primaryContainerDarkMediumContrast = Color(0xFFA384C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF0DD83)
            override val onSecondaryDarkMediumContrast = Color(0xFF2C2500)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA19140)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF0DD82)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D2500)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA1913F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E0E8)
            override val surfaceDarkMediumContrast = Color(0xFF151218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB7AFBA)
            override val outlineVariantDarkMediumContrast = Color(0xFF958E98)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF573C72)
            override val surfaceDimDarkMediumContrast = Color(0xFF151218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A272C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C42)
            override val primaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD7B5F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF15002B)
            override val secondaryDarkHighContrast = Color(0xFFFFF0B2)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD5C36C)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFFF0B5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD6C36C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0F0B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151218)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E0E8)
            override val surfaceDarkHighContrast = Color(0xFF151218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C0CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF573C72)
            override val surfaceDimDarkHighContrast = Color(0xFF151218)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF6F528A)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF0DBFF)
            override val onPrimaryContainerLight = Color(0xFF563B71)
            override val secondaryLight = Color(0xFF67548E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEADDFF)
            override val onSecondaryContainerLight = Color(0xFF4F3D74)
            override val tertiaryLight = Color(0xFF895020)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDCC5)
            override val onTertiaryContainerLight = Color(0xFF6D390A)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FE)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FE)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFE9DFEB)
            override val onSurfaceVariantLight = Color(0xFF4A454E)
            override val outlineLight = Color(0xFF7C757E)
            override val outlineVariantLight = Color(0xFFCCC4CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF6EEF6)
            override val inversePrimaryLight = Color(0xFFDBB9F9)
            override val surfaceDimLight = Color(0xFFDFD8DF)
            override val surfaceBrightLight = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEEE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE8E0E8)
            override val primaryLightMediumContrast = Color(0xFF442A5F)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7E619A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3E2C62)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF76639E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF572A00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9B5F2E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF39343D)
            override val outlineLightMediumContrast = Color(0xFF565059)
            override val outlineVariantLightMediumContrast = Color(0xFF716B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7CFD7)
            override val primaryLightHighContrast = Color(0xFF3A1F54)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF583D73)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF332158)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF513F77)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF482200)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF703C0C)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FE)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FE)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9DFEB)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2A32)
            override val outlineVariantLightHighContrast = Color(0xFF4D4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFDBB9F9)
            override val surfaceDimLightHighContrast = Color(0xFFBEB7BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FE)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E0E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CC)
            override val primaryDark = Color(0xFFDBB9F9)
            override val onPrimaryDark = Color(0xFF3E2458)
            override val primaryContainerDark = Color(0xFF563B71)
            override val onPrimaryContainerDark = Color(0xFFF0DBFF)
            override val secondaryDark = Color(0xFFD2BCFD)
            override val onSecondaryDark = Color(0xFF38265C)
            override val secondaryContainerDark = Color(0xFF4F3D74)
            override val onSecondaryContainerDark = Color(0xFFEADDFF)
            override val tertiaryDark = Color(0xFFFFB782)
            override val onTertiaryDark = Color(0xFF4F2500)
            override val tertiaryContainerDark = Color(0xFF6D390A)
            override val onTertiaryContainerDark = Color(0xFFFFDCC5)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF151218)
            override val onBackgroundDark = Color(0xFFE8E0E8)
            override val surfaceDark = Color(0xFF151218)
            override val onSurfaceDark = Color(0xFFE8E0E8)
            override val surfaceVariantDark = Color(0xFF4A454E)
            override val onSurfaceVariantDark = Color(0xFFCCC4CE)
            override val outlineDark = Color(0xFF968E98)
            override val outlineVariantDark = Color(0xFF4A454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF6F528A)
            override val surfaceDimDark = Color(0xFF151218)
            override val surfaceBrightDark = Color(0xFF3C383E)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2C292E)
            override val surfaceContainerHighestDark = Color(0xFF373339)
            override val primaryDarkMediumContrast = Color(0xFFECD3FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF33184D)
            override val primaryContainerDarkMediumContrast = Color(0xFFA384C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE5D5FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D1A51)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9B87C4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B7)
            override val onTertiaryDarkMediumContrast = Color(0xFF3F1D00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC5814D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF151218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E0E8)
            override val surfaceDarkMediumContrast = Color(0xFF151218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB7AFBA)
            override val outlineVariantDarkMediumContrast = Color(0xFF958E98)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF573C72)
            override val surfaceDimDarkMediumContrast = Color(0xFF151218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF474349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A272C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403C42)
            override val primaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD7B5F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF15002B)
            override val secondaryDarkHighContrast = Color(0xFFF6ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCEB8F9)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110031)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFEB279)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF170700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF151218)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E0E8)
            override val surfaceDarkHighContrast = Color(0xFF151218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C0CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E0E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF573C72)
            override val surfaceDimDarkHighContrast = Color(0xFF151218)
            override val surfaceBrightDarkHighContrast = Color(0xFF534E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("mauve", "Mauve")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}