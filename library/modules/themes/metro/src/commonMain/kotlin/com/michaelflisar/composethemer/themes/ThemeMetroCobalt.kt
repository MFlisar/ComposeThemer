package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroCobalt : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF4D5C92)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDCE1FF)
            override val onPrimaryContainerLight = Color(0xFF354479)
            override val secondaryLight = Color(0xFF38608F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFD2E4FF)
            override val onSecondaryContainerLight = Color(0xFF1D4875)
            override val tertiaryLight = Color(0xFF565992)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE1E0FF)
            override val onTertiaryContainerLight = Color(0xFF3E4178)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF8FF)
            override val onBackgroundLight = Color(0xFF1A1B21)
            override val surfaceLight = Color(0xFFFAF8FF)
            override val onSurfaceLight = Color(0xFF1A1B21)
            override val surfaceVariantLight = Color(0xFFE2E1EC)
            override val onSurfaceVariantLight = Color(0xFF45464F)
            override val outlineLight = Color(0xFF767680)
            override val outlineVariantLight = Color(0xFFC6C5D0)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3036)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F7)
            override val inversePrimaryLight = Color(0xFFB6C4FF)
            override val surfaceDimLight = Color(0xFFDAD9E0)
            override val surfaceBrightLight = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3FA)
            override val surfaceContainerLight = Color(0xFFEFEDF4)
            override val surfaceContainerHighLight = Color(0xFFE9E7EF)
            override val surfaceContainerHighestLight = Color(0xFFE3E1E9)
            override val primaryLightMediumContrast = Color(0xFF243367)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF5C6AA2)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF023764)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF486F9E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2E3167)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6568A2)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1B21)
            override val surfaceLightMediumContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightMediumContrast = Color(0xFF101116)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF34363E)
            override val outlineLightMediumContrast = Color(0xFF51525B)
            override val outlineVariantLightMediumContrast = Color(0xFF6C6C76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F7)
            override val inversePrimaryLightMediumContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E7EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D8)
            override val primaryLightHighContrast = Color(0xFF19285C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF38467B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF002D53)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF204B78)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF23265C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF41447B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightHighContrast = Color(0xFF1A1B21)
            override val surfaceLightHighContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2C34)
            override val outlineVariantLightHighContrast = Color(0xFF484951)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F7)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D3DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6CD)
            override val primaryDark = Color(0xFFB6C4FF)
            override val onPrimaryDark = Color(0xFF1E2D61)
            override val primaryContainerDark = Color(0xFF354479)
            override val onPrimaryContainerDark = Color(0xFFDCE1FF)
            override val secondaryDark = Color(0xFFA2C9FE)
            override val onSecondaryDark = Color(0xFF00325A)
            override val secondaryContainerDark = Color(0xFF1D4875)
            override val onSecondaryContainerDark = Color(0xFFD2E4FF)
            override val tertiaryDark = Color(0xFFBFC1FF)
            override val onTertiaryDark = Color(0xFF282B60)
            override val tertiaryContainerDark = Color(0xFF3E4178)
            override val onTertiaryContainerDark = Color(0xFFE1E0FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121318)
            override val onBackgroundDark = Color(0xFFE3E1E9)
            override val surfaceDark = Color(0xFF121318)
            override val onSurfaceDark = Color(0xFFE3E1E9)
            override val surfaceVariantDark = Color(0xFF45464F)
            override val onSurfaceVariantDark = Color(0xFFC6C5D0)
            override val outlineDark = Color(0xFF90909A)
            override val outlineVariantDark = Color(0xFF45464F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDark = Color(0xFF2F3036)
            override val inversePrimaryDark = Color(0xFF4D5C92)
            override val surfaceDimDark = Color(0xFF121318)
            override val surfaceBrightDark = Color(0xFF38393F)
            override val surfaceContainerLowestDark = Color(0xFF0D0E13)
            override val surfaceContainerLowDark = Color(0xFF1A1B21)
            override val surfaceContainerDark = Color(0xFF1E1F25)
            override val surfaceContainerHighDark = Color(0xFF292A2F)
            override val surfaceContainerHighestDark = Color(0xFF34343A)
            override val primaryDarkMediumContrast = Color(0xFFD4DBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF112255)
            override val primaryContainerDarkMediumContrast = Color(0xFF808EC8)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC8DEFF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002748)
            override val secondaryContainerDarkMediumContrast = Color(0xFF6C93C5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD9D9FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF1C1F55)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF898CC8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121318)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF121318)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDBE6)
            override val outlineDarkMediumContrast = Color(0xFFB1B1BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F8F99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF36457A)
            override val surfaceDimDarkMediumContrast = Color(0xFF121318)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44444A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF06070C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1D23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323238)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3D43)
            override val primaryDarkHighContrast = Color(0xFFEEEFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C0FD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF00082B)
            override val secondaryDarkHighContrast = Color(0xFFE9F0FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF9EC5FA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C1C)
            override val tertiaryDarkHighContrast = Color(0xFFF0EEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBBBDFD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF01003C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121318)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E1E9)
            override val surfaceDarkHighContrast = Color(0xFF121318)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF0EFFA)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C2CC)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF36457A)
            override val surfaceDimDarkHighContrast = Color(0xFF121318)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5056)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E1F25)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3036)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46464C)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF4D5C92)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDCE1FF)
            override val onPrimaryContainerLight = Color(0xFF354479)
            override val secondaryLight = Color(0xFF38608F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFD2E4FF)
            override val onSecondaryContainerLight = Color(0xFF1D4875)
            override val tertiaryLight = Color(0xFF216487)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC6E7FF)
            override val onTertiaryContainerLight = Color(0xFF004C6B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF8FF)
            override val onBackgroundLight = Color(0xFF1A1B21)
            override val surfaceLight = Color(0xFFFAF8FF)
            override val onSurfaceLight = Color(0xFF1A1B21)
            override val surfaceVariantLight = Color(0xFFE2E1EC)
            override val onSurfaceVariantLight = Color(0xFF45464F)
            override val outlineLight = Color(0xFF767680)
            override val outlineVariantLight = Color(0xFFC6C5D0)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3036)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F7)
            override val inversePrimaryLight = Color(0xFFB6C4FF)
            override val surfaceDimLight = Color(0xFFDAD9E0)
            override val surfaceBrightLight = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3FA)
            override val surfaceContainerLight = Color(0xFFEFEDF4)
            override val surfaceContainerHighLight = Color(0xFFE9E7EF)
            override val surfaceContainerHighestLight = Color(0xFFE3E1E9)
            override val primaryLightMediumContrast = Color(0xFF243367)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF5C6AA2)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF023764)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF486F9E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003A54)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF347397)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1B21)
            override val surfaceLightMediumContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightMediumContrast = Color(0xFF101116)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF34363E)
            override val outlineLightMediumContrast = Color(0xFF51525B)
            override val outlineVariantLightMediumContrast = Color(0xFF6C6C76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F7)
            override val inversePrimaryLightMediumContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E7EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D8)
            override val primaryLightHighContrast = Color(0xFF19285C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF38467B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF002D53)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF204B78)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003045)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF004F6F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightHighContrast = Color(0xFF1A1B21)
            override val surfaceLightHighContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2C34)
            override val outlineVariantLightHighContrast = Color(0xFF484951)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F7)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D3DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6CD)
            override val primaryDark = Color(0xFFB6C4FF)
            override val onPrimaryDark = Color(0xFF1E2D61)
            override val primaryContainerDark = Color(0xFF354479)
            override val onPrimaryContainerDark = Color(0xFFDCE1FF)
            override val secondaryDark = Color(0xFFA2C9FE)
            override val onSecondaryDark = Color(0xFF00325A)
            override val secondaryContainerDark = Color(0xFF1D4875)
            override val onSecondaryContainerDark = Color(0xFFD2E4FF)
            override val tertiaryDark = Color(0xFF92CEF5)
            override val onTertiaryDark = Color(0xFF00344B)
            override val tertiaryContainerDark = Color(0xFF004C6B)
            override val onTertiaryContainerDark = Color(0xFFC6E7FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121318)
            override val onBackgroundDark = Color(0xFFE3E1E9)
            override val surfaceDark = Color(0xFF121318)
            override val onSurfaceDark = Color(0xFFE3E1E9)
            override val surfaceVariantDark = Color(0xFF45464F)
            override val onSurfaceVariantDark = Color(0xFFC6C5D0)
            override val outlineDark = Color(0xFF90909A)
            override val outlineVariantDark = Color(0xFF45464F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDark = Color(0xFF2F3036)
            override val inversePrimaryDark = Color(0xFF4D5C92)
            override val surfaceDimDark = Color(0xFF121318)
            override val surfaceBrightDark = Color(0xFF38393F)
            override val surfaceContainerLowestDark = Color(0xFF0D0E13)
            override val surfaceContainerLowDark = Color(0xFF1A1B21)
            override val surfaceContainerDark = Color(0xFF1E1F25)
            override val surfaceContainerHighDark = Color(0xFF292A2F)
            override val surfaceContainerHighestDark = Color(0xFF34343A)
            override val primaryDarkMediumContrast = Color(0xFFD4DBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF112255)
            override val primaryContainerDarkMediumContrast = Color(0xFF808EC8)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC8DEFF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002748)
            override val secondaryContainerDarkMediumContrast = Color(0xFF6C93C5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFB9E2FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF00293C)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF5B97BD)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121318)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF121318)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDBE6)
            override val outlineDarkMediumContrast = Color(0xFFB1B1BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F8F99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF36457A)
            override val surfaceDimDarkMediumContrast = Color(0xFF121318)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44444A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF06070C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1D23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323238)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3D43)
            override val primaryDarkHighContrast = Color(0xFFEEEFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C0FD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF00082B)
            override val secondaryDarkHighContrast = Color(0xFFE9F0FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF9EC5FA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C1C)
            override val tertiaryDarkHighContrast = Color(0xFFE3F2FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF8ECAF1)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000D16)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121318)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E1E9)
            override val surfaceDarkHighContrast = Color(0xFF121318)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF0EFFA)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C2CC)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF36457A)
            override val surfaceDimDarkHighContrast = Color(0xFF121318)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5056)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E1F25)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3036)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46464C)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF4D5C92)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDCE1FF)
            override val onPrimaryContainerLight = Color(0xFF354479)
            override val secondaryLight = Color(0xFF8B5024)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDCC7)
            override val onSecondaryContainerLight = Color(0xFF6E390E)
            override val tertiaryLight = Color(0xFF8A5022)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDCC6)
            override val onTertiaryContainerLight = Color(0xFF6D390C)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF8FF)
            override val onBackgroundLight = Color(0xFF1A1B21)
            override val surfaceLight = Color(0xFFFAF8FF)
            override val onSurfaceLight = Color(0xFF1A1B21)
            override val surfaceVariantLight = Color(0xFFE2E1EC)
            override val onSurfaceVariantLight = Color(0xFF45464F)
            override val outlineLight = Color(0xFF767680)
            override val outlineVariantLight = Color(0xFFC6C5D0)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3036)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F7)
            override val inversePrimaryLight = Color(0xFFB6C4FF)
            override val surfaceDimLight = Color(0xFFDAD9E0)
            override val surfaceBrightLight = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3FA)
            override val surfaceContainerLight = Color(0xFFEFEDF4)
            override val surfaceContainerHighLight = Color(0xFFE9E7EF)
            override val surfaceContainerHighestLight = Color(0xFFE3E1E9)
            override val primaryLightMediumContrast = Color(0xFF243367)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF5C6AA2)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF592900)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9C5E31)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF582900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9C5E2F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1B21)
            override val surfaceLightMediumContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightMediumContrast = Color(0xFF101116)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF34363E)
            override val outlineLightMediumContrast = Color(0xFF51525B)
            override val outlineVariantLightMediumContrast = Color(0xFF6C6C76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F7)
            override val inversePrimaryLightMediumContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E7EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D8)
            override val primaryLightHighContrast = Color(0xFF19285C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF38467B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4A2100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF713B10)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF492100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF703B0E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightHighContrast = Color(0xFF1A1B21)
            override val surfaceLightHighContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2C34)
            override val outlineVariantLightHighContrast = Color(0xFF484951)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F7)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D3DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6CD)
            override val primaryDark = Color(0xFFB6C4FF)
            override val onPrimaryDark = Color(0xFF1E2D61)
            override val primaryContainerDark = Color(0xFF354479)
            override val onPrimaryContainerDark = Color(0xFFDCE1FF)
            override val secondaryDark = Color(0xFFFFB787)
            override val onSecondaryDark = Color(0xFF502400)
            override val secondaryContainerDark = Color(0xFF6E390E)
            override val onSecondaryContainerDark = Color(0xFFFFDCC7)
            override val tertiaryDark = Color(0xFFFFB784)
            override val onTertiaryDark = Color(0xFF4F2500)
            override val tertiaryContainerDark = Color(0xFF6D390C)
            override val onTertiaryContainerDark = Color(0xFFFFDCC6)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121318)
            override val onBackgroundDark = Color(0xFFE3E1E9)
            override val surfaceDark = Color(0xFF121318)
            override val onSurfaceDark = Color(0xFFE3E1E9)
            override val surfaceVariantDark = Color(0xFF45464F)
            override val onSurfaceVariantDark = Color(0xFFC6C5D0)
            override val outlineDark = Color(0xFF90909A)
            override val outlineVariantDark = Color(0xFF45464F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDark = Color(0xFF2F3036)
            override val inversePrimaryDark = Color(0xFF4D5C92)
            override val surfaceDimDark = Color(0xFF121318)
            override val surfaceBrightDark = Color(0xFF38393F)
            override val surfaceContainerLowestDark = Color(0xFF0D0E13)
            override val surfaceContainerLowDark = Color(0xFF1A1B21)
            override val surfaceContainerDark = Color(0xFF1E1F25)
            override val surfaceContainerHighDark = Color(0xFF292A2F)
            override val surfaceContainerHighestDark = Color(0xFF34343A)
            override val primaryDarkMediumContrast = Color(0xFFD4DBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF112255)
            override val primaryContainerDarkMediumContrast = Color(0xFF808EC8)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onSecondaryDarkMediumContrast = Color(0xFF401B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC68050)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B8)
            override val onTertiaryDarkMediumContrast = Color(0xFF3F1C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC5814F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121318)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF121318)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDBE6)
            override val outlineDarkMediumContrast = Color(0xFFB1B1BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F8F99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF36457A)
            override val surfaceDimDarkMediumContrast = Color(0xFF121318)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44444A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF06070C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1D23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323238)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3D43)
            override val primaryDarkHighContrast = Color(0xFFEEEFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C0FD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF00082B)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB17D)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF180700)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17B)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121318)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E1E9)
            override val surfaceDarkHighContrast = Color(0xFF121318)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF0EFFA)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C2CC)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF36457A)
            override val surfaceDimDarkHighContrast = Color(0xFF121318)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5056)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E1F25)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3036)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46464C)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF4D5C92)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDCE1FF)
            override val onPrimaryContainerLight = Color(0xFF354479)
            override val secondaryLight = Color(0xFF38608F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFD2E4FF)
            override val onSecondaryContainerLight = Color(0xFF1D4875)
            override val tertiaryLight = Color(0xFF8D4959)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD9DF)
            override val onTertiaryContainerLight = Color(0xFF713342)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAF8FF)
            override val onBackgroundLight = Color(0xFF1A1B21)
            override val surfaceLight = Color(0xFFFAF8FF)
            override val onSurfaceLight = Color(0xFF1A1B21)
            override val surfaceVariantLight = Color(0xFFE2E1EC)
            override val onSurfaceVariantLight = Color(0xFF45464F)
            override val outlineLight = Color(0xFF767680)
            override val outlineVariantLight = Color(0xFFC6C5D0)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3036)
            override val inverseOnSurfaceLight = Color(0xFFF1F0F7)
            override val inversePrimaryLight = Color(0xFFB6C4FF)
            override val surfaceDimLight = Color(0xFFDAD9E0)
            override val surfaceBrightLight = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F3FA)
            override val surfaceContainerLight = Color(0xFFEFEDF4)
            override val surfaceContainerHighLight = Color(0xFFE9E7EF)
            override val surfaceContainerHighestLight = Color(0xFFE3E1E9)
            override val primaryLightMediumContrast = Color(0xFF243367)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF5C6AA2)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF023764)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF486F9E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5D2232)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9F5868)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1B21)
            override val surfaceLightMediumContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightMediumContrast = Color(0xFF101116)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF34363E)
            override val outlineLightMediumContrast = Color(0xFF51525B)
            override val outlineVariantLightMediumContrast = Color(0xFF6C6C76)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F0F7)
            override val inversePrimaryLightMediumContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C6CD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F3FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E7EF)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDCE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D1D8)
            override val primaryLightHighContrast = Color(0xFF19285C)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF38467B)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF002D53)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF204B78)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF501828)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF743544)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAF8FF)
            override val onBackgroundLightHighContrast = Color(0xFF1A1B21)
            override val surfaceLightHighContrast = Color(0xFFFAF8FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E1EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2C34)
            override val outlineVariantLightHighContrast = Color(0xFF484951)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3036)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB6C4FF)
            override val surfaceDimLightHighContrast = Color(0xFFB9B8BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFAF8FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F0F7)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D3DB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C6CD)
            override val primaryDark = Color(0xFFB6C4FF)
            override val onPrimaryDark = Color(0xFF1E2D61)
            override val primaryContainerDark = Color(0xFF354479)
            override val onPrimaryContainerDark = Color(0xFFDCE1FF)
            override val secondaryDark = Color(0xFFA2C9FE)
            override val onSecondaryDark = Color(0xFF00325A)
            override val secondaryContainerDark = Color(0xFF1D4875)
            override val onSecondaryContainerDark = Color(0xFFD2E4FF)
            override val tertiaryDark = Color(0xFFFFB1C0)
            override val onTertiaryDark = Color(0xFF551D2C)
            override val tertiaryContainerDark = Color(0xFF713342)
            override val onTertiaryContainerDark = Color(0xFFFFD9DF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF121318)
            override val onBackgroundDark = Color(0xFFE3E1E9)
            override val surfaceDark = Color(0xFF121318)
            override val onSurfaceDark = Color(0xFFE3E1E9)
            override val surfaceVariantDark = Color(0xFF45464F)
            override val onSurfaceVariantDark = Color(0xFFC6C5D0)
            override val outlineDark = Color(0xFF90909A)
            override val outlineVariantDark = Color(0xFF45464F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDark = Color(0xFF2F3036)
            override val inversePrimaryDark = Color(0xFF4D5C92)
            override val surfaceDimDark = Color(0xFF121318)
            override val surfaceBrightDark = Color(0xFF38393F)
            override val surfaceContainerLowestDark = Color(0xFF0D0E13)
            override val surfaceContainerLowDark = Color(0xFF1A1B21)
            override val surfaceContainerDark = Color(0xFF1E1F25)
            override val surfaceContainerHighDark = Color(0xFF292A2F)
            override val surfaceContainerHighestDark = Color(0xFF34343A)
            override val primaryDarkMediumContrast = Color(0xFFD4DBFF)
            override val onPrimaryDarkMediumContrast = Color(0xFF112255)
            override val primaryContainerDarkMediumContrast = Color(0xFF808EC8)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC8DEFF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002748)
            override val secondaryContainerDarkMediumContrast = Color(0xFF6C93C5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD1D8)
            override val onTertiaryDarkMediumContrast = Color(0xFF481221)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC87A8B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF121318)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF121318)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDBE6)
            override val outlineDarkMediumContrast = Color(0xFFB1B1BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F8F99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF36457A)
            override val surfaceDimDarkMediumContrast = Color(0xFF121318)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44444A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF06070C)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1C1D23)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323238)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3D43)
            override val primaryDarkHighContrast = Color(0xFFEEEFFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFB2C0FD)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF00082B)
            override val secondaryDarkHighContrast = Color(0xFFE9F0FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF9EC5FA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C1C)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBED)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFACBC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF210008)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF121318)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E1E9)
            override val surfaceDarkHighContrast = Color(0xFF121318)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF45464F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF0EFFA)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C2CC)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF36457A)
            override val surfaceDimDarkHighContrast = Color(0xFF121318)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5056)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1E1F25)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3036)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3B41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46464C)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("cobalt", "Cobalt")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}