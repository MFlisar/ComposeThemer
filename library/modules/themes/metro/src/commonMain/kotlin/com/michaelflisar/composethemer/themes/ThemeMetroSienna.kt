package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroSienna : ComposeTheme.Group {

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("sienna", "Sienna")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF8E4D2F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCD)
            override val onPrimaryContainerLight = Color(0xFF71361A)
            override val secondaryLight = Color(0xFF8D4E2A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDBCA)
            override val onSecondaryContainerLight = Color(0xFF703715)
            override val tertiaryLight = Color(0xFF805611)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDDB5)
            override val onTertiaryContainerLight = Color(0xFF643F00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF231A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF231A16)
            override val surfaceVariantLight = Color(0xFFF5DED5)
            override val onSurfaceVariantLight = Color(0xFF53443E)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD8C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB596)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFCEAE4)
            override val surfaceContainerHighLight = Color(0xFFF6E4DE)
            override val surfaceContainerHighestLight = Color(0xFFF1DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C260B)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA05B3C)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5B2706)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9E5C37)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF4D3000)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF916420)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF231A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332E)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6963)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB596)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D03)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF74391C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4E1E00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF733917)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF402700)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF674100)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF231A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB596)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF1DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB596)
            override val onPrimaryDark = Color(0xFF542106)
            override val primaryContainerDark = Color(0xFF71361A)
            override val onPrimaryContainerDark = Color(0xFFFFDBCD)
            override val secondaryDark = Color(0xFFFFB690)
            override val onSecondaryDark = Color(0xFF542202)
            override val secondaryContainerDark = Color(0xFF703715)
            override val onSecondaryContainerDark = Color(0xFFFFDBCA)
            override val tertiaryDark = Color(0xFFF6BC6F)
            override val onTertiaryDark = Color(0xFF462B00)
            override val tertiaryContainerDark = Color(0xFF643F00)
            override val onTertiaryContainerDark = Color(0xFFFFDDB5)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110E)
            override val onBackgroundDark = Color(0xFFF1DFD8)
            override val surfaceDark = Color(0xFF1A110E)
            override val onSurfaceDark = Color(0xFFF1DFD8)
            override val surfaceVariantDark = Color(0xFF53443E)
            override val onSurfaceVariantDark = Color(0xFFD8C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF53443E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8E4D2F)
            override val surfaceDimDark = Color(0xFF1A110E)
            override val surfaceBrightDark = Color(0xFF423733)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF231A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D322E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461600)
            override val primaryContainerDarkMediumContrast = Color(0xFFCA7E5C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3BE)
            override val onSecondaryDarkMediumContrast = Color(0xFF441900)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC87F57)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD5A3)
            override val onTertiaryDarkMediumContrast = Color(0xFF372100)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBA8740)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF1DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A110E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA6)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF72371B)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF302622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08E)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE4)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB087)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1A0600)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDB)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF1B86C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF140900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110E)
            override val onBackgroundDarkHighContrast = Color(0xFFF1DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A110E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF72371B)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF8E4D2F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCD)
            override val onPrimaryContainerLight = Color(0xFF71361A)
            override val secondaryLight = Color(0xFF8D4E2A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDBCA)
            override val onSecondaryContainerLight = Color(0xFF703715)
            override val tertiaryLight = Color(0xFF8A5023)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDCC6)
            override val onTertiaryContainerLight = Color(0xFF6E390D)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF231A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF231A16)
            override val surfaceVariantLight = Color(0xFFF5DED5)
            override val onSurfaceVariantLight = Color(0xFF53443E)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD8C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB596)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFCEAE4)
            override val surfaceContainerHighLight = Color(0xFFF6E4DE)
            override val surfaceContainerHighestLight = Color(0xFFF1DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C260B)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA05B3C)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5B2706)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9E5C37)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF592900)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9C5E30)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF231A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332E)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6963)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB596)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D03)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF74391C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4E1E00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF733917)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF492100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF713B0F)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF231A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB596)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF1DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB596)
            override val onPrimaryDark = Color(0xFF542106)
            override val primaryContainerDark = Color(0xFF71361A)
            override val onPrimaryContainerDark = Color(0xFFFFDBCD)
            override val secondaryDark = Color(0xFFFFB690)
            override val onSecondaryDark = Color(0xFF542202)
            override val secondaryContainerDark = Color(0xFF703715)
            override val onSecondaryContainerDark = Color(0xFFFFDBCA)
            override val tertiaryDark = Color(0xFFFFB785)
            override val onTertiaryDark = Color(0xFF502400)
            override val tertiaryContainerDark = Color(0xFF6E390D)
            override val onTertiaryContainerDark = Color(0xFFFFDCC6)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110E)
            override val onBackgroundDark = Color(0xFFF1DFD8)
            override val surfaceDark = Color(0xFF1A110E)
            override val onSurfaceDark = Color(0xFFF1DFD8)
            override val surfaceVariantDark = Color(0xFF53443E)
            override val onSurfaceVariantDark = Color(0xFFD8C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF53443E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8E4D2F)
            override val surfaceDimDark = Color(0xFF1A110E)
            override val surfaceBrightDark = Color(0xFF423733)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF231A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D322E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461600)
            override val primaryContainerDarkMediumContrast = Color(0xFFCA7E5C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3BE)
            override val onSecondaryDarkMediumContrast = Color(0xFF441900)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC87F57)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onTertiaryDarkMediumContrast = Color(0xFF401C00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC6814F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF1DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A110E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA6)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF72371B)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF302622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08E)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE4)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB087)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1A0600)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB17C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180700)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110E)
            override val onBackgroundDarkHighContrast = Color(0xFFF1DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A110E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF72371B)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8E4D2F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCD)
            override val onPrimaryContainerLight = Color(0xFF71361A)
            override val secondaryLight = Color(0xFF006A65)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF9DF2EA)
            override val onSecondaryContainerLight = Color(0xFF00504C)
            override val tertiaryLight = Color(0xFF006A65)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF9DF2EA)
            override val onTertiaryContainerLight = Color(0xFF00504C)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF231A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF231A16)
            override val surfaceVariantLight = Color(0xFFF5DED5)
            override val onSurfaceVariantLight = Color(0xFF53443E)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD8C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB596)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFCEAE4)
            override val surfaceContainerHighLight = Color(0xFFF6E4DE)
            override val surfaceContainerHighestLight = Color(0xFFF1DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C260B)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA05B3C)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003D3A)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF197A74)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003D3A)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF197A74)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF231A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332E)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6963)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB596)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D03)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF74391C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF003230)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF00534E)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003230)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF00534E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF231A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB596)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF1DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB596)
            override val onPrimaryDark = Color(0xFF542106)
            override val primaryContainerDark = Color(0xFF71361A)
            override val onPrimaryContainerDark = Color(0xFFFFDBCD)
            override val secondaryDark = Color(0xFF81D5CE)
            override val onSecondaryDark = Color(0xFF003734)
            override val secondaryContainerDark = Color(0xFF00504C)
            override val onSecondaryContainerDark = Color(0xFF9DF2EA)
            override val tertiaryDark = Color(0xFF81D5CE)
            override val onTertiaryDark = Color(0xFF003734)
            override val tertiaryContainerDark = Color(0xFF00504C)
            override val onTertiaryContainerDark = Color(0xFF9DF2EA)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110E)
            override val onBackgroundDark = Color(0xFFF1DFD8)
            override val surfaceDark = Color(0xFF1A110E)
            override val onSurfaceDark = Color(0xFFF1DFD8)
            override val surfaceVariantDark = Color(0xFF53443E)
            override val onSurfaceVariantDark = Color(0xFFD8C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF53443E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8E4D2F)
            override val surfaceDimDark = Color(0xFF1A110E)
            override val surfaceBrightDark = Color(0xFF423733)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF231A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D322E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461600)
            override val primaryContainerDarkMediumContrast = Color(0xFFCA7E5C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFF97EBE4)
            override val onSecondaryDarkMediumContrast = Color(0xFF002B29)
            override val secondaryContainerDarkMediumContrast = Color(0xFF489E98)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF97EBE4)
            override val onTertiaryDarkMediumContrast = Color(0xFF002B29)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF489E98)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF1DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A110E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA6)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF72371B)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF302622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08E)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFACFFF8)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF7DD1CA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000E0D)
            override val tertiaryDarkHighContrast = Color(0xFFACFFF8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF7DD1CA)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000E0D)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110E)
            override val onBackgroundDarkHighContrast = Color(0xFFF1DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A110E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF72371B)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8E4D2F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCD)
            override val onPrimaryContainerLight = Color(0xFF71361A)
            override val secondaryLight = Color(0xFF8D4E2A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDBCA)
            override val onSecondaryContainerLight = Color(0xFF703715)
            override val tertiaryLight = Color(0xFF4E6629)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFD0EDA1)
            override val onTertiaryContainerLight = Color(0xFF374D13)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF231A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF231A16)
            override val surfaceVariantLight = Color(0xFFF5DED5)
            override val onSurfaceVariantLight = Color(0xFF53443E)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD8C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE7)
            override val inversePrimaryLight = Color(0xFFFFB596)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EC)
            override val surfaceContainerLight = Color(0xFFFCEAE4)
            override val surfaceContainerHighLight = Color(0xFFF6E4DE)
            override val surfaceContainerHighestLight = Color(0xFFF1DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C260B)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFFA05B3C)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5B2706)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9E5C37)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF273C03)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5D7536)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF231A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332E)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6963)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE7)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB596)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EC)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E4DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D03)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF74391C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4E1E00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF733917)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF1F3100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3A5015)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF231A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF5DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB596)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE7)
            override val surfaceContainerLightHighContrast = Color(0xFFF1DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CB)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB596)
            override val onPrimaryDark = Color(0xFF542106)
            override val primaryContainerDark = Color(0xFF71361A)
            override val onPrimaryContainerDark = Color(0xFFFFDBCD)
            override val secondaryDark = Color(0xFFFFB690)
            override val onSecondaryDark = Color(0xFF542202)
            override val secondaryContainerDark = Color(0xFF703715)
            override val onSecondaryContainerDark = Color(0xFFFFDBCA)
            override val tertiaryDark = Color(0xFFB4D087)
            override val onTertiaryDark = Color(0xFF223600)
            override val tertiaryContainerDark = Color(0xFF374D13)
            override val onTertiaryContainerDark = Color(0xFFD0EDA1)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A110E)
            override val onBackgroundDark = Color(0xFFF1DFD8)
            override val surfaceDark = Color(0xFF1A110E)
            override val onSurfaceDark = Color(0xFFF1DFD8)
            override val surfaceVariantDark = Color(0xFF53443E)
            override val onSurfaceVariantDark = Color(0xFFD8C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF53443E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8E4D2F)
            override val surfaceDimDark = Color(0xFF1A110E)
            override val surfaceBrightDark = Color(0xFF423733)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF231A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D322E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C1)
            override val onPrimaryDarkMediumContrast = Color(0xFF461600)
            override val primaryContainerDarkMediumContrast = Color(0xFFCA7E5C)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD3BE)
            override val onSecondaryDarkMediumContrast = Color(0xFF441900)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC87F57)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFCAE69B)
            override val onTertiaryDarkMediumContrast = Color(0xFF1A2A00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF809956)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A110E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF1DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A110E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA6)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF72371B)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423E)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF302622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08E)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE4)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB087)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1A0600)
            override val tertiaryDarkHighContrast = Color(0xFFDDFAAD)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB1CC83)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF060D00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A110E)
            override val onBackgroundDarkHighContrast = Color(0xFFF1DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A110E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF53443E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD4BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF1DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF72371B)
            override val surfaceDimDarkHighContrast = Color(0xFF1A110E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}