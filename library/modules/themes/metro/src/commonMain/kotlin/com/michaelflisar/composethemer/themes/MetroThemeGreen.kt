package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.MetroTheme
import com.michaelflisar.composethemer.MetroThemeGroup
import com.michaelflisar.composethemer.MetroThemeVariant

object MetroThemeGreen : MetroThemeGroup() {

    override val name = "Green"
    override val themes = listOf(Analogic, Mono, Triade, Complementary, Tetrade)

    private object Colors {

        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF386B00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF60A917)
            override val onPrimaryContainerLight = Color(0xFF1A3600)
            override val secondaryLight = Color(0xFF395C00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D7610)
            override val onSecondaryContainerLight = Color(0xFFCAFC89)
            override val tertiaryLight = Color(0xFF006E04)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF17A917)
            override val onTertiaryContainerLight = Color(0xFF003301)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7FBEB)
            override val onBackgroundLight = Color(0xFF181D13)
            override val surfaceLight = Color(0xFFF7FBEB)
            override val onSurfaceLight = Color(0xFF181D13)
            override val surfaceVariantLight = Color(0xFFDDE6CE)
            override val onSurfaceVariantLight = Color(0xFF414938)
            override val outlineLight = Color(0xFF717A66)
            override val outlineVariantLight = Color(0xFFC1CAB3)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3227)
            override val inverseOnSurfaceLight = Color(0xFFEEF3E2)
            override val inversePrimaryLight = Color(0xFF8DDB49)
            override val surfaceDimLight = Color(0xFFD7DCCC)
            override val surfaceBrightLight = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F6E5)
            override val surfaceContainerLight = Color(0xFFEBF0DF)
            override val surfaceContainerHighLight = Color(0xFFE5EADA)
            override val surfaceContainerHighestLight = Color(0xFFE0E4D4)

            override val primaryLightMediumContrast = Color(0xFF1E3E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF417B00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF243D00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D7610)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF004001)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF007F06)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightMediumContrast = Color(0xFF181D13)
            override val surfaceLightMediumContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1309)
            override val surfaceVariantLightMediumContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF313928)
            override val outlineLightMediumContrast = Color(0xFF4D5543)
            override val outlineVariantLightMediumContrast = Color(0xFF67705D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF3E2)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DDB49)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F6E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5EADA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADFCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD4C4)

            override val primaryLightHighContrast = Color(0xFF173300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2A5300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF1D3200)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF325200)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003501)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF005602)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightHighContrast = Color(0xFF181D13)
            override val surfaceLightHighContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272F1F)
            override val outlineVariantLightHighContrast = Color(0xFF434C3A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DDB49)
            override val surfaceDimLightHighContrast = Color(0xFFB6BBAC)
            override val surfaceBrightLightHighContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF3E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E4D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8B9)

            override val primaryDark = Color(0xFF8DDB49)
            override val onPrimaryDark = Color(0xFF1A3700)
            override val primaryContainerDark = Color(0xFF60A917)
            override val onPrimaryContainerDark = Color(0xFF1A3600)
            override val secondaryDark = Color(0xFFA5D567)
            override val onSecondaryDark = Color(0xFF203700)
            override val secondaryContainerDark = Color(0xFF4D7610)
            override val onSecondaryContainerDark = Color(0xFFCAFC89)
            override val tertiaryDark = Color(0xFF5DE14E)
            override val onTertiaryDark = Color(0xFF003A01)
            override val tertiaryContainerDark = Color(0xFF17A917)
            override val onTertiaryContainerDark = Color(0xFF003301)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF10150B)
            override val onBackgroundDark = Color(0xFFE0E4D4)
            override val surfaceDark = Color(0xFF10150B)
            override val onSurfaceDark = Color(0xFFE0E4D4)
            override val surfaceVariantDark = Color(0xFF414938)
            override val onSurfaceVariantDark = Color(0xFFC1CAB3)
            override val outlineDark = Color(0xFF8B947F)
            override val outlineVariantDark = Color(0xFF414938)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDark = Color(0xFF2D3227)
            override val inversePrimaryDark = Color(0xFF386B00)
            override val surfaceDimDark = Color(0xFF10150B)
            override val surfaceBrightDark = Color(0xFF363B30)
            override val surfaceContainerLowestDark = Color(0xFF0B1007)
            override val surfaceContainerLowDark = Color(0xFF181D13)
            override val surfaceContainerDark = Color(0xFF1C2117)
            override val surfaceContainerHighDark = Color(0xFF272C21)
            override val surfaceContainerHighestDark = Color(0xFF31362B)

            override val primaryDarkMediumContrast = Color(0xFFA2F15D)
            override val onPrimaryDarkMediumContrast = Color(0xFF132B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF60A917)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF010400)
            override val secondaryDarkMediumContrast = Color(0xFFBBEC7B)
            override val onSecondaryDarkMediumContrast = Color(0xFF182B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719E37)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF73F862)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D01)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF17A917)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF10150B)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E4D4)
            override val surfaceDarkMediumContrast = Color(0xFF10150B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7E0C8)
            override val outlineDarkMediumContrast = Color(0xFFACB59F)
            override val outlineVariantDarkMediumContrast = Color(0xFF8A937E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272C21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF295200)
            override val surfaceDimDarkMediumContrast = Color(0xFF10150B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41463A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1F15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24291F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3429)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3F34)

            override val primaryDarkHighContrast = Color(0xFFCDFF9F)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF8AD745)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF040E00)
            override val secondaryDarkHighContrast = Color(0xFFD0FF92)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA2D164)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050E00)
            override val tertiaryDarkHighContrast = Color(0xFFC7FFB6)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF58DD4A)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF10150B)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E4D4)
            override val surfaceDarkHighContrast = Color(0xFF10150B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEAF3DB)
            override val outlineVariantDarkHighContrast = Color(0xFFBDC6AF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF295200)
            override val surfaceDimDarkHighContrast = Color(0xFF10150B)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5246)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2117)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3227)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383D32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43483D)
        }

        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF386B00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF60A917)
            override val onPrimaryContainerLight = Color(0xFF1A3600)
            override val secondaryLight = Color(0xFF395C00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D7610)
            override val onSecondaryContainerLight = Color(0xFFCAFC89)
            override val tertiaryLight = Color(0xFF52643A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE9FFC8)
            override val onTertiaryContainerLight = Color(0xFF64774B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7FBEB)
            override val onBackgroundLight = Color(0xFF181D13)
            override val surfaceLight = Color(0xFFF7FBEB)
            override val onSurfaceLight = Color(0xFF181D13)
            override val surfaceVariantLight = Color(0xFFDDE6CE)
            override val onSurfaceVariantLight = Color(0xFF414938)
            override val outlineLight = Color(0xFF717A66)
            override val outlineVariantLight = Color(0xFFC1CAB3)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3227)
            override val inverseOnSurfaceLight = Color(0xFFEEF3E2)
            override val inversePrimaryLight = Color(0xFF8DDB49)
            override val surfaceDimLight = Color(0xFFD7DCCC)
            override val surfaceBrightLight = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F6E5)
            override val surfaceContainerLight = Color(0xFFEBF0DF)
            override val surfaceContainerHighLight = Color(0xFFE5EADA)
            override val surfaceContainerHighestLight = Color(0xFFE0E4D4)

            override val primaryLightMediumContrast = Color(0xFF1E3E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF417B00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF243D00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D7610)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2B3B15)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF607347)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightMediumContrast = Color(0xFF181D13)
            override val surfaceLightMediumContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1309)
            override val surfaceVariantLightMediumContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF313928)
            override val outlineLightMediumContrast = Color(0xFF4D5543)
            override val outlineVariantLightMediumContrast = Color(0xFF67705D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF3E2)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DDB49)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F6E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5EADA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADFCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD4C4)

            override val primaryLightHighContrast = Color(0xFF173300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2A5300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF1D3200)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF325200)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF21310C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3D4F27)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightHighContrast = Color(0xFF181D13)
            override val surfaceLightHighContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272F1F)
            override val outlineVariantLightHighContrast = Color(0xFF434C3A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DDB49)
            override val surfaceDimLightHighContrast = Color(0xFFB6BBAC)
            override val surfaceBrightLightHighContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF3E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E4D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8B9)

            override val primaryDark = Color(0xFF8DDB49)
            override val onPrimaryDark = Color(0xFF1A3700)
            override val primaryContainerDark = Color(0xFF60A917)
            override val onPrimaryContainerDark = Color(0xFF1A3600)
            override val secondaryDark = Color(0xFFA5D567)
            override val onSecondaryDark = Color(0xFF203700)
            override val secondaryContainerDark = Color(0xFF4D7610)
            override val onSecondaryContainerDark = Color(0xFFCAFC89)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF253510)
            override val tertiaryContainerDark = Color(0xFFD4EAB5)
            override val onTertiaryContainerDark = Color(0xFF586A3F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF10150B)
            override val onBackgroundDark = Color(0xFFE0E4D4)
            override val surfaceDark = Color(0xFF10150B)
            override val onSurfaceDark = Color(0xFFE0E4D4)
            override val surfaceVariantDark = Color(0xFF414938)
            override val onSurfaceVariantDark = Color(0xFFC1CAB3)
            override val outlineDark = Color(0xFF8B947F)
            override val outlineVariantDark = Color(0xFF414938)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDark = Color(0xFF2D3227)
            override val inversePrimaryDark = Color(0xFF386B00)
            override val surfaceDimDark = Color(0xFF10150B)
            override val surfaceBrightDark = Color(0xFF363B30)
            override val surfaceContainerLowestDark = Color(0xFF0B1007)
            override val surfaceContainerLowDark = Color(0xFF181D13)
            override val surfaceContainerDark = Color(0xFF1C2117)
            override val surfaceContainerHighDark = Color(0xFF272C21)
            override val surfaceContainerHighestDark = Color(0xFF31362B)

            override val primaryDarkMediumContrast = Color(0xFFA2F15D)
            override val onPrimaryDarkMediumContrast = Color(0xFF132B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF60A917)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF010400)
            override val secondaryDarkMediumContrast = Color(0xFFBBEC7B)
            override val onSecondaryDarkMediumContrast = Color(0xFF182B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719E37)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF253510)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD4EAB5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3C4D26)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF10150B)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E4D4)
            override val surfaceDarkMediumContrast = Color(0xFF10150B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7E0C8)
            override val outlineDarkMediumContrast = Color(0xFFACB59F)
            override val outlineVariantDarkMediumContrast = Color(0xFF8A937E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272C21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF295200)
            override val surfaceDimDarkMediumContrast = Color(0xFF10150B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41463A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1F15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24291F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3429)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3F34)

            override val primaryDarkHighContrast = Color(0xFFCDFF9F)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF8AD745)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF040E00)
            override val secondaryDarkHighContrast = Color(0xFFD0FF92)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA2D164)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050E00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD4EAB5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F2F0A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF10150B)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E4D4)
            override val surfaceDarkHighContrast = Color(0xFF10150B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEAF3DB)
            override val outlineVariantDarkHighContrast = Color(0xFFBDC6AF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF295200)
            override val surfaceDimDarkHighContrast = Color(0xFF10150B)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5246)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2117)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3227)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383D32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43483D)
        }

        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF386B00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF60A917)
            override val onPrimaryContainerLight = Color(0xFF1A3600)
            override val secondaryLight = Color(0xFF395C00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D7610)
            override val onSecondaryContainerLight = Color(0xFFCAFC89)
            override val tertiaryLight = Color(0xFF30007F)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF4817A9)
            override val onTertiaryContainerLight = Color(0xFFB49AFF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7FBEB)
            override val onBackgroundLight = Color(0xFF181D13)
            override val surfaceLight = Color(0xFFF7FBEB)
            override val onSurfaceLight = Color(0xFF181D13)
            override val surfaceVariantLight = Color(0xFFDDE6CE)
            override val onSurfaceVariantLight = Color(0xFF414938)
            override val outlineLight = Color(0xFF717A66)
            override val outlineVariantLight = Color(0xFFC1CAB3)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3227)
            override val inverseOnSurfaceLight = Color(0xFFEEF3E2)
            override val inversePrimaryLight = Color(0xFF8DDB49)
            override val surfaceDimLight = Color(0xFFD7DCCC)
            override val surfaceBrightLight = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F6E5)
            override val surfaceContainerLight = Color(0xFFEBF0DF)
            override val surfaceContainerHighLight = Color(0xFFE5EADA)
            override val surfaceContainerHighestLight = Color(0xFFE0E4D4)

            override val primaryLightMediumContrast = Color(0xFF1E3E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF417B00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF243D00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D7610)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF30007F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF4817A9)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFDACBFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightMediumContrast = Color(0xFF181D13)
            override val surfaceLightMediumContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1309)
            override val surfaceVariantLightMediumContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF313928)
            override val outlineLightMediumContrast = Color(0xFF4D5543)
            override val outlineVariantLightMediumContrast = Color(0xFF67705D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF3E2)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DDB49)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F6E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5EADA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADFCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD4C4)

            override val primaryLightHighContrast = Color(0xFF173300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2A5300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF1D3200)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF325200)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF30007F)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4817A9)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightHighContrast = Color(0xFF181D13)
            override val surfaceLightHighContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272F1F)
            override val outlineVariantLightHighContrast = Color(0xFF434C3A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DDB49)
            override val surfaceDimLightHighContrast = Color(0xFFB6BBAC)
            override val surfaceBrightLightHighContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF3E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E4D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8B9)

            override val primaryDark = Color(0xFF8DDB49)
            override val onPrimaryDark = Color(0xFF1A3700)
            override val primaryContainerDark = Color(0xFF60A917)
            override val onPrimaryContainerDark = Color(0xFF1A3600)
            override val secondaryDark = Color(0xFFA5D567)
            override val onSecondaryDark = Color(0xFF203700)
            override val secondaryContainerDark = Color(0xFF4D7610)
            override val onSecondaryContainerDark = Color(0xFFCAFC89)
            override val tertiaryDark = Color(0xFFCEBDFF)
            override val onTertiaryDark = Color(0xFF390093)
            override val tertiaryContainerDark = Color(0xFF4817A9)
            override val onTertiaryContainerDark = Color(0xFFB49AFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF10150B)
            override val onBackgroundDark = Color(0xFFE0E4D4)
            override val surfaceDark = Color(0xFF10150B)
            override val onSurfaceDark = Color(0xFFE0E4D4)
            override val surfaceVariantDark = Color(0xFF414938)
            override val onSurfaceVariantDark = Color(0xFFC1CAB3)
            override val outlineDark = Color(0xFF8B947F)
            override val outlineVariantDark = Color(0xFF414938)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDark = Color(0xFF2D3227)
            override val inversePrimaryDark = Color(0xFF386B00)
            override val surfaceDimDark = Color(0xFF10150B)
            override val surfaceBrightDark = Color(0xFF363B30)
            override val surfaceContainerLowestDark = Color(0xFF0B1007)
            override val surfaceContainerLowDark = Color(0xFF181D13)
            override val surfaceContainerDark = Color(0xFF1C2117)
            override val surfaceContainerHighDark = Color(0xFF272C21)
            override val surfaceContainerHighestDark = Color(0xFF31362B)

            override val primaryDarkMediumContrast = Color(0xFFA2F15D)
            override val onPrimaryDarkMediumContrast = Color(0xFF132B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF60A917)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF010400)
            override val secondaryDarkMediumContrast = Color(0xFFBBEC7B)
            override val onSecondaryDarkMediumContrast = Color(0xFF182B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719E37)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D0078)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9C79FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF10150B)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E4D4)
            override val surfaceDarkMediumContrast = Color(0xFF10150B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7E0C8)
            override val outlineDarkMediumContrast = Color(0xFFACB59F)
            override val outlineVariantDarkMediumContrast = Color(0xFF8A937E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272C21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF295200)
            override val surfaceDimDarkMediumContrast = Color(0xFF10150B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41463A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1F15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24291F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3429)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3F34)

            override val primaryDarkHighContrast = Color(0xFFCDFF9F)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF8AD745)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF040E00)
            override val secondaryDarkHighContrast = Color(0xFFD0FF92)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA2D164)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050E00)
            override val tertiaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFCBB8FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF10150B)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E4D4)
            override val surfaceDarkHighContrast = Color(0xFF10150B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEAF3DB)
            override val outlineVariantDarkHighContrast = Color(0xFFBDC6AF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF295200)
            override val surfaceDimDarkHighContrast = Color(0xFF10150B)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5246)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2117)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3227)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383D32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43483D)

        }

        object Complementary : ComposeThemeColors {
            override val primaryLight = Color(0xFF386B00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF60A917)
            override val onPrimaryContainerLight = Color(0xFF1A3600)
            override val secondaryLight = Color(0xFF395C00)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF4D7610)
            override val onSecondaryContainerLight = Color(0xFFCAFC89)
            override val tertiaryLight = Color(0xFF52643A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE9FFC8)
            override val onTertiaryContainerLight = Color(0xFF64774B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7FBEB)
            override val onBackgroundLight = Color(0xFF181D13)
            override val surfaceLight = Color(0xFFF7FBEB)
            override val onSurfaceLight = Color(0xFF181D13)
            override val surfaceVariantLight = Color(0xFFDDE6CE)
            override val onSurfaceVariantLight = Color(0xFF414938)
            override val outlineLight = Color(0xFF717A66)
            override val outlineVariantLight = Color(0xFFC1CAB3)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3227)
            override val inverseOnSurfaceLight = Color(0xFFEEF3E2)
            override val inversePrimaryLight = Color(0xFF8DDB49)
            override val surfaceDimLight = Color(0xFFD7DCCC)
            override val surfaceBrightLight = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F6E5)
            override val surfaceContainerLight = Color(0xFFEBF0DF)
            override val surfaceContainerHighLight = Color(0xFFE5EADA)
            override val surfaceContainerHighestLight = Color(0xFFE0E4D4)

            override val primaryLightMediumContrast = Color(0xFF1E3E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF417B00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF243D00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4D7610)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2B3B15)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF607347)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightMediumContrast = Color(0xFF181D13)
            override val surfaceLightMediumContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1309)
            override val surfaceVariantLightMediumContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF313928)
            override val outlineLightMediumContrast = Color(0xFF4D5543)
            override val outlineVariantLightMediumContrast = Color(0xFF67705D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF3E2)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DDB49)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F6E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5EADA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADFCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD4C4)

            override val primaryLightHighContrast = Color(0xFF173300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2A5300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF1D3200)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF325200)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF21310C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3D4F27)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightHighContrast = Color(0xFF181D13)
            override val surfaceLightHighContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272F1F)
            override val outlineVariantLightHighContrast = Color(0xFF434C3A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DDB49)
            override val surfaceDimLightHighContrast = Color(0xFFB6BBAC)
            override val surfaceBrightLightHighContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF3E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E4D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8B9)

            override val primaryDark = Color(0xFF8DDB49)
            override val onPrimaryDark = Color(0xFF1A3700)
            override val primaryContainerDark = Color(0xFF60A917)
            override val onPrimaryContainerDark = Color(0xFF1A3600)
            override val secondaryDark = Color(0xFFA5D567)
            override val onSecondaryDark = Color(0xFF203700)
            override val secondaryContainerDark = Color(0xFF4D7610)
            override val onSecondaryContainerDark = Color(0xFFCAFC89)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF253510)
            override val tertiaryContainerDark = Color(0xFFD4EAB5)
            override val onTertiaryContainerDark = Color(0xFF586A3F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF10150B)
            override val onBackgroundDark = Color(0xFFE0E4D4)
            override val surfaceDark = Color(0xFF10150B)
            override val onSurfaceDark = Color(0xFFE0E4D4)
            override val surfaceVariantDark = Color(0xFF414938)
            override val onSurfaceVariantDark = Color(0xFFC1CAB3)
            override val outlineDark = Color(0xFF8B947F)
            override val outlineVariantDark = Color(0xFF414938)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDark = Color(0xFF2D3227)
            override val inversePrimaryDark = Color(0xFF386B00)
            override val surfaceDimDark = Color(0xFF10150B)
            override val surfaceBrightDark = Color(0xFF363B30)
            override val surfaceContainerLowestDark = Color(0xFF0B1007)
            override val surfaceContainerLowDark = Color(0xFF181D13)
            override val surfaceContainerDark = Color(0xFF1C2117)
            override val surfaceContainerHighDark = Color(0xFF272C21)
            override val surfaceContainerHighestDark = Color(0xFF31362B)

            override val primaryDarkMediumContrast = Color(0xFFA2F15D)
            override val onPrimaryDarkMediumContrast = Color(0xFF132B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF60A917)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF010400)
            override val secondaryDarkMediumContrast = Color(0xFFBBEC7B)
            override val onSecondaryDarkMediumContrast = Color(0xFF182B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719E37)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF253510)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD4EAB5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF3C4D26)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF10150B)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E4D4)
            override val surfaceDarkMediumContrast = Color(0xFF10150B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7E0C8)
            override val outlineDarkMediumContrast = Color(0xFFACB59F)
            override val outlineVariantDarkMediumContrast = Color(0xFF8A937E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272C21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF295200)
            override val surfaceDimDarkMediumContrast = Color(0xFF10150B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41463A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1F15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24291F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3429)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3F34)

            override val primaryDarkHighContrast = Color(0xFFCDFF9F)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF8AD745)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF040E00)
            override val secondaryDarkHighContrast = Color(0xFFD0FF92)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA2D164)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050E00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD4EAB5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F2F0A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF10150B)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E4D4)
            override val surfaceDarkHighContrast = Color(0xFF10150B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEAF3DB)
            override val outlineVariantDarkHighContrast = Color(0xFFBDC6AF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF295200)
            override val surfaceDimDarkHighContrast = Color(0xFF10150B)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5246)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2117)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3227)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383D32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43483D)
        }

        object Tetrade : ComposeThemeColors {

            override val primaryLight = Color(0xFF386B00)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFF60A917)
            override val onPrimaryContainerLight = Color(0xFF1A3600)
            override val secondaryLight = Color(0xFF840067)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFA91785)
            override val onSecondaryContainerLight = Color(0xFFFFC5E5)
            override val tertiaryLight = Color(0xFF540041)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF76105D)
            override val onTertiaryContainerLight = Color(0xFFF982CF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7FBEB)
            override val onBackgroundLight = Color(0xFF181D13)
            override val surfaceLight = Color(0xFFF7FBEB)
            override val onSurfaceLight = Color(0xFF181D13)
            override val surfaceVariantLight = Color(0xFFDDE6CE)
            override val onSurfaceVariantLight = Color(0xFF414938)
            override val outlineLight = Color(0xFF717A66)
            override val outlineVariantLight = Color(0xFFC1CAB3)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3227)
            override val inverseOnSurfaceLight = Color(0xFFEEF3E2)
            override val inversePrimaryLight = Color(0xFF8DDB49)
            override val surfaceDimLight = Color(0xFFD7DCCC)
            override val surfaceBrightLight = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F6E5)
            override val surfaceContainerLight = Color(0xFFEBF0DF)
            override val surfaceContainerHighLight = Color(0xFFE5EADA)
            override val surfaceContainerHighestLight = Color(0xFFE0E4D4)

            override val primaryLightMediumContrast = Color(0xFF1E3E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF417B00)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF6A0052)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA91785)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF540041)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF76105D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFC3E5)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightMediumContrast = Color(0xFF181D13)
            override val surfaceLightMediumContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1309)
            override val surfaceVariantLightMediumContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF313928)
            override val outlineLightMediumContrast = Color(0xFF4D5543)
            override val outlineVariantLightMediumContrast = Color(0xFF67705D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF3E2)
            override val inversePrimaryLightMediumContrast = Color(0xFF8DDB49)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F6E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFE5EADA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADFCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD4C4)

            override val primaryLightHighContrast = Color(0xFF173300)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2A5300)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF590044)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF8C006D)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF540041)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF76105D)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7FBEB)
            override val onBackgroundLightHighContrast = Color(0xFF181D13)
            override val surfaceLightHighContrast = Color(0xFFF7FBEB)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDDE6CE)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272F1F)
            override val outlineVariantLightHighContrast = Color(0xFF434C3A)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3227)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF8DDB49)
            override val surfaceDimLightHighContrast = Color(0xFFB6BBAC)
            override val surfaceBrightLightHighContrast = Color(0xFFF7FBEB)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF3E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E4D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8B9)

            override val primaryDark = Color(0xFF8DDB49)
            override val onPrimaryDark = Color(0xFF1A3700)
            override val primaryContainerDark = Color(0xFF60A917)
            override val onPrimaryContainerDark = Color(0xFF1A3600)
            override val secondaryDark = Color(0xFFFFAEDD)
            override val onSecondaryDark = Color(0xFF60004A)
            override val secondaryContainerDark = Color(0xFFA91785)
            override val onSecondaryContainerDark = Color(0xFFFFC5E5)
            override val tertiaryDark = Color(0xFFFFAEDE)
            override val onTertiaryDark = Color(0xFF60004B)
            override val tertiaryContainerDark = Color(0xFF76105D)
            override val onTertiaryContainerDark = Color(0xFFF982CF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF10150B)
            override val onBackgroundDark = Color(0xFFE0E4D4)
            override val surfaceDark = Color(0xFF10150B)
            override val onSurfaceDark = Color(0xFFE0E4D4)
            override val surfaceVariantDark = Color(0xFF414938)
            override val onSurfaceVariantDark = Color(0xFFC1CAB3)
            override val outlineDark = Color(0xFF8B947F)
            override val outlineVariantDark = Color(0xFF414938)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDark = Color(0xFF2D3227)
            override val inversePrimaryDark = Color(0xFF386B00)
            override val surfaceDimDark = Color(0xFF10150B)
            override val surfaceBrightDark = Color(0xFF363B30)
            override val surfaceContainerLowestDark = Color(0xFF0B1007)
            override val surfaceContainerLowDark = Color(0xFF181D13)
            override val surfaceContainerDark = Color(0xFF1C2117)
            override val surfaceContainerHighDark = Color(0xFF272C21)
            override val surfaceContainerHighestDark = Color(0xFF31362B)

            override val primaryDarkMediumContrast = Color(0xFFA2F15D)
            override val onPrimaryDarkMediumContrast = Color(0xFF132B00)
            override val primaryContainerDarkMediumContrast = Color(0xFF60A917)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF010400)
            override val secondaryDarkMediumContrast = Color(0xFFFFCFE8)
            override val onSecondaryDarkMediumContrast = Color(0xFF4D003B)
            override val secondaryContainerDarkMediumContrast = Color(0xFFEB56BE)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFE9)
            override val onTertiaryDarkMediumContrast = Color(0xFF4D003B)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFDA68B4)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF10150B)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E4D4)
            override val surfaceDarkMediumContrast = Color(0xFF10150B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7E0C8)
            override val outlineDarkMediumContrast = Color(0xFFACB59F)
            override val outlineVariantDarkMediumContrast = Color(0xFF8A937E)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272C21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF295200)
            override val surfaceDimDarkMediumContrast = Color(0xFF10150B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF41463A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1F15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24291F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3429)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3F34)

            override val primaryDarkHighContrast = Color(0xFFCDFF9F)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF8AD745)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF040E00)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFA7DC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1E0016)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF3)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFA7DC)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1E0016)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF10150B)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E4D4)
            override val surfaceDarkHighContrast = Color(0xFF10150B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF414938)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEAF3DB)
            override val outlineVariantDarkHighContrast = Color(0xFFBDC6AF)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E4D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF295200)
            override val surfaceDimDarkHighContrast = Color(0xFF10150B)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5246)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2117)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3227)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383D32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43483D)
        }
    }

    object Analogic : MetroTheme(MetroThemeGreen, MetroThemeVariant.Analogic, Colors.Analogic)
    object Mono : MetroTheme(MetroThemeGreen, MetroThemeVariant.Mono, Colors.Mono)
    object Triade : MetroTheme(MetroThemeGreen, MetroThemeVariant.Triade, Colors.Triade)
    object Complementary :
        MetroTheme(MetroThemeGreen, MetroThemeVariant.Complementary, Colors.Complementary)

    object Tetrade : MetroTheme(MetroThemeGreen, MetroThemeVariant.Tetrade, Colors.Tetrade)

}

