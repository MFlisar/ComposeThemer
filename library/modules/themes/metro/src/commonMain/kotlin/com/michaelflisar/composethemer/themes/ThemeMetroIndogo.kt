package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroIndogo : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF65558F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE9DDFF)
            override val onPrimaryContainerLight = Color(0xFF4C3D75)
            override val secondaryLight = Color(0xFF5D5891)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE4DFFF)
            override val onSecondaryContainerLight = Color(0xFF454078)
            override val tertiaryLight = Color(0xFF6E528A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF0DBFF)
            override val onTertiaryContainerLight = Color(0xFF553B71)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFDF7FF)
            override val onBackgroundLight = Color(0xFF1D1B20)
            override val surfaceLight = Color(0xFFFDF7FF)
            override val onSurfaceLight = Color(0xFF1D1B20)
            override val surfaceVariantLight = Color(0xFFE7E0EC)
            override val onSurfaceVariantLight = Color(0xFF49454E)
            override val outlineLight = Color(0xFF7A757F)
            override val outlineVariantLight = Color(0xFFCAC4CF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F35)
            override val inverseOnSurfaceLight = Color(0xFFF5EFF7)
            override val inversePrimaryLight = Color(0xFFCFBDFE)
            override val surfaceDimLight = Color(0xFFDED8E0)
            override val surfaceBrightLight = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF8F2FA)
            override val surfaceContainerLight = Color(0xFFF2ECF4)
            override val surfaceContainerHighLight = Color(0xFFECE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE6E1E9)
            override val primaryLightMediumContrast = Color(0xFF3B2D63)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF74649F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF342F66)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF6B66A1)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF442A5F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7D619A)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1B20)
            override val surfaceLightMediumContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF121016)
            override val surfaceVariantLightMediumContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF38353D)
            override val outlineLightMediumContrast = Color(0xFF54515A)
            override val outlineVariantLightMediumContrast = Color(0xFF6F6B75)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF5EFF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightMediumContrast = Color(0xFFCAC5CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF8F2FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFECE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE1DBE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD5D0D8)
            override val primaryLightHighContrast = Color(0xFF312259)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF4F4078)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF2A245B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF47427A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF391F54)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF583D73)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1B20)
            override val surfaceLightHighContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2E2B33)
            override val outlineVariantLightHighContrast = Color(0xFF4B4851)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightHighContrast = Color(0xFFBCB7BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF5EFF7)
            override val surfaceContainerLightHighContrast = Color(0xFFE6E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD8D2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCAC5CC)
            override val primaryDark = Color(0xFFCFBDFE)
            override val onPrimaryDark = Color(0xFF36275D)
            override val primaryContainerDark = Color(0xFF4C3D75)
            override val onPrimaryContainerDark = Color(0xFFE9DDFF)
            override val secondaryDark = Color(0xFFC6C0FF)
            override val onSecondaryDark = Color(0xFF2E295F)
            override val secondaryContainerDark = Color(0xFF454078)
            override val onSecondaryContainerDark = Color(0xFFE4DFFF)
            override val tertiaryDark = Color(0xFFDAB9F9)
            override val onTertiaryDark = Color(0xFF3E2459)
            override val tertiaryContainerDark = Color(0xFF553B71)
            override val onTertiaryContainerDark = Color(0xFFF0DBFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF141218)
            override val onBackgroundDark = Color(0xFFE6E1E9)
            override val surfaceDark = Color(0xFF141218)
            override val onSurfaceDark = Color(0xFFE6E1E9)
            override val surfaceVariantDark = Color(0xFF49454E)
            override val onSurfaceVariantDark = Color(0xFFCAC4CF)
            override val outlineDark = Color(0xFF948F99)
            override val outlineVariantDark = Color(0xFF49454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDark = Color(0xFF322F35)
            override val inversePrimaryDark = Color(0xFF65558F)
            override val surfaceDimDark = Color(0xFF141218)
            override val surfaceBrightDark = Color(0xFF3B383E)
            override val surfaceContainerLowestDark = Color(0xFF0F0D13)
            override val surfaceContainerLowDark = Color(0xFF1D1B20)
            override val surfaceContainerDark = Color(0xFF211F24)
            override val surfaceContainerHighDark = Color(0xFF2B292F)
            override val surfaceContainerHighestDark = Color(0xFF36343A)
            override val primaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF2A1B52)
            override val primaryContainerDarkMediumContrast = Color(0xFF9887C5)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFDDD8FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF231D54)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8F8AC7)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEBD3FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF32184D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA284C0)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF141218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE6E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF141218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE0DAE5)
            override val outlineDarkMediumContrast = Color(0xFFB5B0BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF938E99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2B292F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkMediumContrast = Color(0xFF141218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF46434A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08070B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1D22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF29272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF343138)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3F3C43)
            override val primaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFCBB9FA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val secondaryDarkHighContrast = Color(0xFFF2EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC2BBFC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF080038)
            override val tertiaryDarkHighContrast = Color(0xFFF9EBFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD6B6F5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF15002C)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF141218)
            override val onBackgroundDarkHighContrast = Color(0xFFE6E1E9)
            override val surfaceDarkHighContrast = Color(0xFF141218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF4EEF9)
            override val outlineVariantDarkHighContrast = Color(0xFFC6C0CB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkHighContrast = Color(0xFF141218)
            override val surfaceBrightDarkHighContrast = Color(0xFF524F55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211F24)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3D3A41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF48464C)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF65558F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE9DDFF)
            override val onPrimaryContainerLight = Color(0xFF4C3D75)
            override val secondaryLight = Color(0xFF5D5891)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE4DFFF)
            override val onSecondaryContainerLight = Color(0xFF454078)
            override val tertiaryLight = Color(0xFF625690)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE7DEFF)
            override val onTertiaryContainerLight = Color(0xFF4A3E76)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFDF7FF)
            override val onBackgroundLight = Color(0xFF1D1B20)
            override val surfaceLight = Color(0xFFFDF7FF)
            override val onSurfaceLight = Color(0xFF1D1B20)
            override val surfaceVariantLight = Color(0xFFE7E0EC)
            override val onSurfaceVariantLight = Color(0xFF49454E)
            override val outlineLight = Color(0xFF7A757F)
            override val outlineVariantLight = Color(0xFFCAC4CF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F35)
            override val inverseOnSurfaceLight = Color(0xFFF5EFF7)
            override val inversePrimaryLight = Color(0xFFCFBDFE)
            override val surfaceDimLight = Color(0xFFDED8E0)
            override val surfaceBrightLight = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF8F2FA)
            override val surfaceContainerLight = Color(0xFFF2ECF4)
            override val surfaceContainerHighLight = Color(0xFFECE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE6E1E9)
            override val primaryLightMediumContrast = Color(0xFF3B2D63)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF74649F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF342F66)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF6B66A1)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF392D64)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF71659F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1B20)
            override val surfaceLightMediumContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF121016)
            override val surfaceVariantLightMediumContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF38353D)
            override val outlineLightMediumContrast = Color(0xFF54515A)
            override val outlineVariantLightMediumContrast = Color(0xFF6F6B75)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF5EFF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightMediumContrast = Color(0xFFCAC5CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF8F2FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFECE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE1DBE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD5D0D8)
            override val primaryLightHighContrast = Color(0xFF312259)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF4F4078)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF2A245B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF47427A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2F2359)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4D4179)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1B20)
            override val surfaceLightHighContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2E2B33)
            override val outlineVariantLightHighContrast = Color(0xFF4B4851)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightHighContrast = Color(0xFFBCB7BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF5EFF7)
            override val surfaceContainerLightHighContrast = Color(0xFFE6E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD8D2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCAC5CC)
            override val primaryDark = Color(0xFFCFBDFE)
            override val onPrimaryDark = Color(0xFF36275D)
            override val primaryContainerDark = Color(0xFF4C3D75)
            override val onPrimaryContainerDark = Color(0xFFE9DDFF)
            override val secondaryDark = Color(0xFFC6C0FF)
            override val onSecondaryDark = Color(0xFF2E295F)
            override val secondaryContainerDark = Color(0xFF454078)
            override val onSecondaryContainerDark = Color(0xFFE4DFFF)
            override val tertiaryDark = Color(0xFFCCBDFF)
            override val onTertiaryDark = Color(0xFF33275E)
            override val tertiaryContainerDark = Color(0xFF4A3E76)
            override val onTertiaryContainerDark = Color(0xFFE7DEFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF141218)
            override val onBackgroundDark = Color(0xFFE6E1E9)
            override val surfaceDark = Color(0xFF141218)
            override val onSurfaceDark = Color(0xFFE6E1E9)
            override val surfaceVariantDark = Color(0xFF49454E)
            override val onSurfaceVariantDark = Color(0xFFCAC4CF)
            override val outlineDark = Color(0xFF948F99)
            override val outlineVariantDark = Color(0xFF49454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDark = Color(0xFF322F35)
            override val inversePrimaryDark = Color(0xFF65558F)
            override val surfaceDimDark = Color(0xFF141218)
            override val surfaceBrightDark = Color(0xFF3B383E)
            override val surfaceContainerLowestDark = Color(0xFF0F0D13)
            override val surfaceContainerLowDark = Color(0xFF1D1B20)
            override val surfaceContainerDark = Color(0xFF211F24)
            override val surfaceContainerHighDark = Color(0xFF2B292F)
            override val surfaceContainerHighestDark = Color(0xFF36343A)
            override val primaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF2A1B52)
            override val primaryContainerDarkMediumContrast = Color(0xFF9887C5)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFDDD8FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF231D54)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8F8AC7)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE1D7FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF281C52)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9688C6)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF141218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE6E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF141218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE0DAE5)
            override val outlineDarkMediumContrast = Color(0xFFB5B0BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF938E99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2B292F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkMediumContrast = Color(0xFF141218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF46434A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08070B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1D22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF29272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF343138)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3F3C43)
            override val primaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFCBB9FA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val secondaryDarkHighContrast = Color(0xFFF2EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC2BBFC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF080038)
            override val tertiaryDarkHighContrast = Color(0xFFF4EDFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC8BAFB)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0D0034)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF141218)
            override val onBackgroundDarkHighContrast = Color(0xFFE6E1E9)
            override val surfaceDarkHighContrast = Color(0xFF141218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF4EEF9)
            override val outlineVariantDarkHighContrast = Color(0xFFC6C0CB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkHighContrast = Color(0xFF141218)
            override val surfaceBrightDarkHighContrast = Color(0xFF524F55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211F24)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3D3A41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF48464C)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF65558F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE9DDFF)
            override val onPrimaryContainerLight = Color(0xFF4C3D75)
            override val secondaryLight = Color(0xFF765A0B)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDF9A)
            override val onSecondaryContainerLight = Color(0xFF5A4300)
            override val tertiaryLight = Color(0xFF765A0B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDF98)
            override val onTertiaryContainerLight = Color(0xFF5A4300)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFDF7FF)
            override val onBackgroundLight = Color(0xFF1D1B20)
            override val surfaceLight = Color(0xFFFDF7FF)
            override val onSurfaceLight = Color(0xFF1D1B20)
            override val surfaceVariantLight = Color(0xFFE7E0EC)
            override val onSurfaceVariantLight = Color(0xFF49454E)
            override val outlineLight = Color(0xFF7A757F)
            override val outlineVariantLight = Color(0xFFCAC4CF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F35)
            override val inverseOnSurfaceLight = Color(0xFFF5EFF7)
            override val inversePrimaryLight = Color(0xFFCFBDFE)
            override val surfaceDimLight = Color(0xFFDED8E0)
            override val surfaceBrightLight = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF8F2FA)
            override val surfaceContainerLight = Color(0xFFF2ECF4)
            override val surfaceContainerHighLight = Color(0xFFECE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE6E1E9)
            override val primaryLightMediumContrast = Color(0xFF3B2D63)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF74649F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF463300)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF87691C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF463300)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF86691C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1B20)
            override val surfaceLightMediumContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF121016)
            override val surfaceVariantLightMediumContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF38353D)
            override val outlineLightMediumContrast = Color(0xFF54515A)
            override val outlineVariantLightMediumContrast = Color(0xFF6F6B75)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF5EFF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightMediumContrast = Color(0xFFCAC5CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF8F2FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFECE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE1DBE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD5D0D8)
            override val primaryLightHighContrast = Color(0xFF312259)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF4F4078)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3A2A00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF5D4600)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF392A00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5D4600)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1B20)
            override val surfaceLightHighContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2E2B33)
            override val outlineVariantLightHighContrast = Color(0xFF4B4851)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightHighContrast = Color(0xFFBCB7BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF5EFF7)
            override val surfaceContainerLightHighContrast = Color(0xFFE6E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD8D2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCAC5CC)
            override val primaryDark = Color(0xFFCFBDFE)
            override val onPrimaryDark = Color(0xFF36275D)
            override val primaryContainerDark = Color(0xFF4C3D75)
            override val onPrimaryContainerDark = Color(0xFFE9DDFF)
            override val secondaryDark = Color(0xFFE8C26C)
            override val onSecondaryDark = Color(0xFF3F2E00)
            override val secondaryContainerDark = Color(0xFF5A4300)
            override val onSecondaryContainerDark = Color(0xFFFFDF9A)
            override val tertiaryDark = Color(0xFFE7C26C)
            override val onTertiaryDark = Color(0xFF3F2E00)
            override val tertiaryContainerDark = Color(0xFF5A4300)
            override val onTertiaryContainerDark = Color(0xFFFFDF98)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF141218)
            override val onBackgroundDark = Color(0xFFE6E1E9)
            override val surfaceDark = Color(0xFF141218)
            override val onSurfaceDark = Color(0xFFE6E1E9)
            override val surfaceVariantDark = Color(0xFF49454E)
            override val onSurfaceVariantDark = Color(0xFFCAC4CF)
            override val outlineDark = Color(0xFF948F99)
            override val outlineVariantDark = Color(0xFF49454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDark = Color(0xFF322F35)
            override val inversePrimaryDark = Color(0xFF65558F)
            override val surfaceDimDark = Color(0xFF141218)
            override val surfaceBrightDark = Color(0xFF3B383E)
            override val surfaceContainerLowestDark = Color(0xFF0F0D13)
            override val surfaceContainerLowDark = Color(0xFF1D1B20)
            override val surfaceContainerDark = Color(0xFF211F24)
            override val surfaceContainerHighDark = Color(0xFF2B292F)
            override val surfaceContainerHighestDark = Color(0xFF36343A)
            override val primaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF2A1B52)
            override val primaryContainerDarkMediumContrast = Color(0xFF9887C5)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD87F)
            override val onSecondaryDarkMediumContrast = Color(0xFF322300)
            override val secondaryContainerDarkMediumContrast = Color(0xFFAD8C3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFED87F)
            override val onTertiaryDarkMediumContrast = Color(0xFF312400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFAD8D3D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF141218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE6E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF141218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE0DAE5)
            override val outlineDarkMediumContrast = Color(0xFFB5B0BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF938E99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2B292F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkMediumContrast = Color(0xFF141218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF46434A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08070B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1D22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF29272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF343138)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3F3C43)
            override val primaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFCBB9FA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val secondaryDarkHighContrast = Color(0xFFFFEED0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFE3BE69)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF110A00)
            override val tertiaryDarkHighContrast = Color(0xFFFFEECF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE3BE69)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF110A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF141218)
            override val onBackgroundDarkHighContrast = Color(0xFFE6E1E9)
            override val surfaceDarkHighContrast = Color(0xFF141218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF4EEF9)
            override val outlineVariantDarkHighContrast = Color(0xFFC6C0CB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkHighContrast = Color(0xFF141218)
            override val surfaceBrightDarkHighContrast = Color(0xFF524F55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211F24)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3D3A41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF48464C)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF65558F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFE9DDFF)
            override val onPrimaryContainerLight = Color(0xFF4C3D75)
            override val secondaryLight = Color(0xFF5D5891)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE4DFFF)
            override val onSecondaryContainerLight = Color(0xFF454078)
            override val tertiaryLight = Color(0xFF8F4C34)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDBCF)
            override val onTertiaryContainerLight = Color(0xFF72351F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFDF7FF)
            override val onBackgroundLight = Color(0xFF1D1B20)
            override val surfaceLight = Color(0xFFFDF7FF)
            override val onSurfaceLight = Color(0xFF1D1B20)
            override val surfaceVariantLight = Color(0xFFE7E0EC)
            override val onSurfaceVariantLight = Color(0xFF49454E)
            override val outlineLight = Color(0xFF7A757F)
            override val outlineVariantLight = Color(0xFFCAC4CF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF322F35)
            override val inverseOnSurfaceLight = Color(0xFFF5EFF7)
            override val inversePrimaryLight = Color(0xFFCFBDFE)
            override val surfaceDimLight = Color(0xFFDED8E0)
            override val surfaceBrightLight = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF8F2FA)
            override val surfaceContainerLight = Color(0xFFF2ECF4)
            override val surfaceContainerHighLight = Color(0xFFECE6EE)
            override val surfaceContainerHighestLight = Color(0xFFE6E1E9)
            override val primaryLightMediumContrast = Color(0xFF3B2D63)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF74649F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF342F66)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF6B66A1)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5D2511)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA15A41)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightMediumContrast = Color(0xFF1D1B20)
            override val surfaceLightMediumContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightMediumContrast = Color(0xFF121016)
            override val surfaceVariantLightMediumContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF38353D)
            override val outlineLightMediumContrast = Color(0xFF54515A)
            override val outlineVariantLightMediumContrast = Color(0xFF6F6B75)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF5EFF7)
            override val inversePrimaryLightMediumContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightMediumContrast = Color(0xFFCAC5CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF8F2FA)
            override val surfaceContainerLightMediumContrast = Color(0xFFECE6EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE1DBE3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD5D0D8)
            override val primaryLightHighContrast = Color(0xFF312259)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF4F4078)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF2A245B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF47427A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF501C08)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF753821)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFDF7FF)
            override val onBackgroundLightHighContrast = Color(0xFF1D1B20)
            override val surfaceLightHighContrast = Color(0xFFFDF7FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE7E0EC)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2E2B33)
            override val outlineVariantLightHighContrast = Color(0xFF4B4851)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF322F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFCFBDFE)
            override val surfaceDimLightHighContrast = Color(0xFFBCB7BF)
            override val surfaceBrightLightHighContrast = Color(0xFFFDF7FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF5EFF7)
            override val surfaceContainerLightHighContrast = Color(0xFFE6E1E9)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD8D2DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCAC5CC)
            override val primaryDark = Color(0xFFCFBDFE)
            override val onPrimaryDark = Color(0xFF36275D)
            override val primaryContainerDark = Color(0xFF4C3D75)
            override val onPrimaryContainerDark = Color(0xFFE9DDFF)
            override val secondaryDark = Color(0xFFC6C0FF)
            override val onSecondaryDark = Color(0xFF2E295F)
            override val secondaryContainerDark = Color(0xFF454078)
            override val onSecondaryContainerDark = Color(0xFFE4DFFF)
            override val tertiaryDark = Color(0xFFFFB59C)
            override val onTertiaryDark = Color(0xFF55200B)
            override val tertiaryContainerDark = Color(0xFF72351F)
            override val onTertiaryContainerDark = Color(0xFFFFDBCF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF141218)
            override val onBackgroundDark = Color(0xFFE6E1E9)
            override val surfaceDark = Color(0xFF141218)
            override val onSurfaceDark = Color(0xFFE6E1E9)
            override val surfaceVariantDark = Color(0xFF49454E)
            override val onSurfaceVariantDark = Color(0xFFCAC4CF)
            override val outlineDark = Color(0xFF948F99)
            override val outlineVariantDark = Color(0xFF49454E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDark = Color(0xFF322F35)
            override val inversePrimaryDark = Color(0xFF65558F)
            override val surfaceDimDark = Color(0xFF141218)
            override val surfaceBrightDark = Color(0xFF3B383E)
            override val surfaceContainerLowestDark = Color(0xFF0F0D13)
            override val surfaceContainerLowDark = Color(0xFF1D1B20)
            override val surfaceContainerDark = Color(0xFF211F24)
            override val surfaceContainerHighDark = Color(0xFF2B292F)
            override val surfaceContainerHighestDark = Color(0xFF36343A)
            override val primaryDarkMediumContrast = Color(0xFFE3D6FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF2A1B52)
            override val primaryContainerDarkMediumContrast = Color(0xFF9887C5)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFDDD8FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF231D54)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8F8AC7)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3C4)
            override val onTertiaryDarkMediumContrast = Color(0xFF471503)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCB7D62)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF141218)
            override val onBackgroundDarkMediumContrast = Color(0xFFE6E1E9)
            override val surfaceDarkMediumContrast = Color(0xFF141218)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE0DAE5)
            override val outlineDarkMediumContrast = Color(0xFFB5B0BB)
            override val outlineVariantDarkMediumContrast = Color(0xFF938E99)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2B292F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkMediumContrast = Color(0xFF141218)
            override val surfaceBrightDarkMediumContrast = Color(0xFF46434A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF08070B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1F1D22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF29272D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF343138)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3F3C43)
            override val primaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFCBB9FA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0F0033)
            override val secondaryDarkHighContrast = Color(0xFFF2EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC2BBFC)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF080038)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE6)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAF94)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1D0400)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF141218)
            override val onBackgroundDarkHighContrast = Color(0xFFE6E1E9)
            override val surfaceDarkHighContrast = Color(0xFF141218)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF49454E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF4EEF9)
            override val outlineVariantDarkHighContrast = Color(0xFFC6C0CB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE6E1E9)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF4E3F77)
            override val surfaceDimDarkHighContrast = Color(0xFF141218)
            override val surfaceBrightDarkHighContrast = Color(0xFF524F55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF211F24)
            override val surfaceContainerDarkHighContrast = Color(0xFF322F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3D3A41)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF48464C)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("indogo", "Indogo")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}