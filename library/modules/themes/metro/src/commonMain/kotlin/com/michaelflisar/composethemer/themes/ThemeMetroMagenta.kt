package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroMagenta : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF8C4A60)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD9E2)
            override val onPrimaryContainerLight = Color(0xFF703348)
            override val secondaryLight = Color(0xFF864B6F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD8EB)
            override val onSecondaryContainerLight = Color(0xFF6B3457)
            override val tertiaryLight = Color(0xFF904A42)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDAD5)
            override val onTertiaryContainerLight = Color(0xFF73342C)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F8)
            override val onBackgroundLight = Color(0xFF22191B)
            override val surfaceLight = Color(0xFFFFF8F8)
            override val onSurfaceLight = Color(0xFF22191B)
            override val surfaceVariantLight = Color(0xFFF2DDE1)
            override val onSurfaceVariantLight = Color(0xFF514347)
            override val outlineLight = Color(0xFF837377)
            override val outlineVariantLight = Color(0xFFD5C2C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372E30)
            override val inverseOnSurfaceLight = Color(0xFFFDEDEF)
            override val inversePrimaryLight = Color(0xFFFFB1C7)
            override val surfaceDimLight = Color(0xFFE6D6D9)
            override val surfaceBrightLight = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F2)
            override val surfaceContainerLight = Color(0xFFFBEAED)
            override val surfaceContainerHighLight = Color(0xFFF5E4E7)
            override val surfaceContainerHighestLight = Color(0xFFEFDFE1)
            override val primaryLightMediumContrast = Color(0xFF5C2237)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9D586E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF572345)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF96597E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5E241D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA2594F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightMediumContrast = Color(0xFF22191B)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightMediumContrast = Color(0xFF170F11)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF403336)
            override val outlineLightMediumContrast = Color(0xFF5D4F52)
            override val outlineVariantLightMediumContrast = Color(0xFF79696D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEDEF)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightMediumContrast = Color(0xFFD2C3C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E4E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE9D9DC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECED0)
            override val primaryLightHighContrast = Color(0xFF4F182D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73354A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4B193B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6D3659)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF511A14)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF76362E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightHighContrast = Color(0xFF22191B)
            override val surfaceLightHighContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF35292C)
            override val outlineVariantLightHighContrast = Color(0xFF544649)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightHighContrast = Color(0xFFC4B5B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEDEF)
            override val surfaceContainerLightHighContrast = Color(0xFFEFDFE1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D1D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD2C3C5)
            override val primaryDark = Color(0xFFFFB1C7)
            override val onPrimaryDark = Color(0xFF541D32)
            override val primaryContainerDark = Color(0xFF703348)
            override val onPrimaryContainerDark = Color(0xFFFFD9E2)
            override val secondaryDark = Color(0xFFFAB1DA)
            override val onSecondaryDark = Color(0xFF501E3F)
            override val secondaryContainerDark = Color(0xFF6B3457)
            override val onSecondaryContainerDark = Color(0xFFFFD8EB)
            override val tertiaryDark = Color(0xFFFFB4A9)
            override val onTertiaryDark = Color(0xFF561E18)
            override val tertiaryContainerDark = Color(0xFF73342C)
            override val onTertiaryContainerDark = Color(0xFFFFDAD5)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191113)
            override val onBackgroundDark = Color(0xFFEFDFE1)
            override val surfaceDark = Color(0xFF191113)
            override val onSurfaceDark = Color(0xFFEFDFE1)
            override val surfaceVariantDark = Color(0xFF514347)
            override val onSurfaceVariantDark = Color(0xFFD5C2C6)
            override val outlineDark = Color(0xFF9E8C90)
            override val outlineVariantDark = Color(0xFF514347)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDark = Color(0xFF372E30)
            override val inversePrimaryDark = Color(0xFF8C4A60)
            override val surfaceDimDark = Color(0xFF191113)
            override val surfaceBrightDark = Color(0xFF413739)
            override val surfaceContainerLowestDark = Color(0xFF140C0E)
            override val surfaceContainerLowDark = Color(0xFF22191B)
            override val surfaceContainerDark = Color(0xFF261D1F)
            override val surfaceContainerHighDark = Color(0xFF31282A)
            override val surfaceContainerHighestDark = Color(0xFF3C3235)
            override val primaryDarkMediumContrast = Color(0xFFFFD0DC)
            override val onPrimaryDarkMediumContrast = Color(0xFF471227)
            override val primaryContainerDarkMediumContrast = Color(0xFFC67B92)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCFE8)
            override val onSecondaryDarkMediumContrast = Color(0xFF431234)
            override val secondaryContainerDarkMediumContrast = Color(0xFFBE7CA3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD2CC)
            override val onTertiaryDarkMediumContrast = Color(0xFF48130E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCC7B70)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191113)
            override val onBackgroundDarkMediumContrast = Color(0xFFEFDFE1)
            override val surfaceDarkMediumContrast = Color(0xFF191113)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFECD7DB)
            override val outlineDarkMediumContrast = Color(0xFFC0ADB1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8C90)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31282A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF713449)
            override val surfaceDimDarkMediumContrast = Color(0xFF191113)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C4244)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0607)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241B1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2628)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3032)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453B3D)
            override val primaryDarkHighContrast = Color(0xFFFFEBEF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFEABC4)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF20000C)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFF5ADD6)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1F0015)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE9)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAEA3)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF220000)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191113)
            override val onBackgroundDarkHighContrast = Color(0xFFEFDFE1)
            override val surfaceDarkHighContrast = Color(0xFF191113)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBEF)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BEC2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF713449)
            override val surfaceDimDarkHighContrast = Color(0xFF191113)
            override val surfaceBrightDarkHighContrast = Color(0xFF584D50)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261D1F)
            override val surfaceContainerDarkHighContrast = Color(0xFF372E30)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF43393B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F4446)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF8C4A60)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD9E2)
            override val onPrimaryContainerLight = Color(0xFF703348)
            override val secondaryLight = Color(0xFF864B6F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD8EB)
            override val onSecondaryContainerLight = Color(0xFF6B3457)
            override val tertiaryLight = Color(0xFF814D78)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD7F4)
            override val onTertiaryContainerLight = Color(0xFF66355F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F8)
            override val onBackgroundLight = Color(0xFF22191B)
            override val surfaceLight = Color(0xFFFFF8F8)
            override val onSurfaceLight = Color(0xFF22191B)
            override val surfaceVariantLight = Color(0xFFF2DDE1)
            override val onSurfaceVariantLight = Color(0xFF514347)
            override val outlineLight = Color(0xFF837377)
            override val outlineVariantLight = Color(0xFFD5C2C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372E30)
            override val inverseOnSurfaceLight = Color(0xFFFDEDEF)
            override val inversePrimaryLight = Color(0xFFFFB1C7)
            override val surfaceDimLight = Color(0xFFE6D6D9)
            override val surfaceBrightLight = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F2)
            override val surfaceContainerLight = Color(0xFFFBEAED)
            override val surfaceContainerHighLight = Color(0xFFF5E4E7)
            override val surfaceContainerHighestLight = Color(0xFFEFDFE1)
            override val primaryLightMediumContrast = Color(0xFF5C2237)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9D586E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF572345)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF96597E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF53254E)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF915B88)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightMediumContrast = Color(0xFF22191B)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightMediumContrast = Color(0xFF170F11)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF403336)
            override val outlineLightMediumContrast = Color(0xFF5D4F52)
            override val outlineVariantLightMediumContrast = Color(0xFF79696D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEDEF)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightMediumContrast = Color(0xFFD2C3C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E4E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE9D9DC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECED0)
            override val primaryLightHighContrast = Color(0xFF4F182D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73354A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4B193B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6D3659)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF481A43)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF693862)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightHighContrast = Color(0xFF22191B)
            override val surfaceLightHighContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF35292C)
            override val outlineVariantLightHighContrast = Color(0xFF544649)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightHighContrast = Color(0xFFC4B5B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEDEF)
            override val surfaceContainerLightHighContrast = Color(0xFFEFDFE1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D1D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD2C3C5)
            override val primaryDark = Color(0xFFFFB1C7)
            override val onPrimaryDark = Color(0xFF541D32)
            override val primaryContainerDark = Color(0xFF703348)
            override val onPrimaryContainerDark = Color(0xFFFFD9E2)
            override val secondaryDark = Color(0xFFFAB1DA)
            override val onSecondaryDark = Color(0xFF501E3F)
            override val secondaryContainerDark = Color(0xFF6B3457)
            override val onSecondaryContainerDark = Color(0xFFFFD8EB)
            override val tertiaryDark = Color(0xFFF2B3E5)
            override val onTertiaryDark = Color(0xFF4D1F48)
            override val tertiaryContainerDark = Color(0xFF66355F)
            override val onTertiaryContainerDark = Color(0xFFFFD7F4)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191113)
            override val onBackgroundDark = Color(0xFFEFDFE1)
            override val surfaceDark = Color(0xFF191113)
            override val onSurfaceDark = Color(0xFFEFDFE1)
            override val surfaceVariantDark = Color(0xFF514347)
            override val onSurfaceVariantDark = Color(0xFFD5C2C6)
            override val outlineDark = Color(0xFF9E8C90)
            override val outlineVariantDark = Color(0xFF514347)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDark = Color(0xFF372E30)
            override val inversePrimaryDark = Color(0xFF8C4A60)
            override val surfaceDimDark = Color(0xFF191113)
            override val surfaceBrightDark = Color(0xFF413739)
            override val surfaceContainerLowestDark = Color(0xFF140C0E)
            override val surfaceContainerLowDark = Color(0xFF22191B)
            override val surfaceContainerDark = Color(0xFF261D1F)
            override val surfaceContainerHighDark = Color(0xFF31282A)
            override val surfaceContainerHighestDark = Color(0xFF3C3235)
            override val primaryDarkMediumContrast = Color(0xFFFFD0DC)
            override val onPrimaryDarkMediumContrast = Color(0xFF471227)
            override val primaryContainerDarkMediumContrast = Color(0xFFC67B92)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCFE8)
            override val onSecondaryDarkMediumContrast = Color(0xFF431234)
            override val secondaryContainerDarkMediumContrast = Color(0xFFBE7CA3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCEF2)
            override val onTertiaryDarkMediumContrast = Color(0xFF40133C)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB87EAD)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191113)
            override val onBackgroundDarkMediumContrast = Color(0xFFEFDFE1)
            override val surfaceDarkMediumContrast = Color(0xFF191113)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFECD7DB)
            override val outlineDarkMediumContrast = Color(0xFFC0ADB1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8C90)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31282A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF713449)
            override val surfaceDimDarkMediumContrast = Color(0xFF191113)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C4244)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0607)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241B1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2628)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3032)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453B3D)
            override val primaryDarkHighContrast = Color(0xFFFFEBEF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFEABC4)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF20000C)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFF5ADD6)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1F0015)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAF7)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFEEAFE1)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1D001B)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191113)
            override val onBackgroundDarkHighContrast = Color(0xFFEFDFE1)
            override val surfaceDarkHighContrast = Color(0xFF191113)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBEF)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BEC2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF713449)
            override val surfaceDimDarkHighContrast = Color(0xFF191113)
            override val surfaceBrightDarkHighContrast = Color(0xFF584D50)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261D1F)
            override val surfaceContainerDarkHighContrast = Color(0xFF372E30)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF43393B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F4446)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8C4A60)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD9E2)
            override val onPrimaryContainerLight = Color(0xFF703348)
            override val secondaryLight = Color(0xFF4C662B)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFCDEDA3)
            override val onSecondaryContainerLight = Color(0xFF354E15)
            override val tertiaryLight = Color(0xFF4C662B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFCEEDA3)
            override val onTertiaryContainerLight = Color(0xFF354E15)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F8)
            override val onBackgroundLight = Color(0xFF22191B)
            override val surfaceLight = Color(0xFFFFF8F8)
            override val onSurfaceLight = Color(0xFF22191B)
            override val surfaceVariantLight = Color(0xFFF2DDE1)
            override val onSurfaceVariantLight = Color(0xFF514347)
            override val outlineLight = Color(0xFF837377)
            override val outlineVariantLight = Color(0xFFD5C2C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372E30)
            override val inverseOnSurfaceLight = Color(0xFFFDEDEF)
            override val inversePrimaryLight = Color(0xFFFFB1C7)
            override val surfaceDimLight = Color(0xFFE6D6D9)
            override val surfaceBrightLight = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F2)
            override val surfaceContainerLight = Color(0xFFFBEAED)
            override val surfaceContainerHighLight = Color(0xFFF5E4E7)
            override val surfaceContainerHighestLight = Color(0xFFEFDFE1)
            override val primaryLightMediumContrast = Color(0xFF5C2237)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9D586E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF253D05)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF5A7538)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF253D05)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5A7538)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightMediumContrast = Color(0xFF22191B)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightMediumContrast = Color(0xFF170F11)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF403336)
            override val outlineLightMediumContrast = Color(0xFF5D4F52)
            override val outlineVariantLightMediumContrast = Color(0xFF79696D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEDEF)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightMediumContrast = Color(0xFFD2C3C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E4E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE9D9DC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECED0)
            override val primaryLightHighContrast = Color(0xFF4F182D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73354A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF1C3200)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF375018)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF1C3200)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF385017)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightHighContrast = Color(0xFF22191B)
            override val surfaceLightHighContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF35292C)
            override val outlineVariantLightHighContrast = Color(0xFF544649)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightHighContrast = Color(0xFFC4B5B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEDEF)
            override val surfaceContainerLightHighContrast = Color(0xFFEFDFE1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D1D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD2C3C5)
            override val primaryDark = Color(0xFFFFB1C7)
            override val onPrimaryDark = Color(0xFF541D32)
            override val primaryContainerDark = Color(0xFF703348)
            override val onPrimaryContainerDark = Color(0xFFFFD9E2)
            override val secondaryDark = Color(0xFFB2D18A)
            override val onSecondaryDark = Color(0xFF1F3701)
            override val secondaryContainerDark = Color(0xFF354E15)
            override val onSecondaryContainerDark = Color(0xFFCDEDA3)
            override val tertiaryDark = Color(0xFFB2D189)
            override val onTertiaryDark = Color(0xFF203701)
            override val tertiaryContainerDark = Color(0xFF354E15)
            override val onTertiaryContainerDark = Color(0xFFCEEDA3)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191113)
            override val onBackgroundDark = Color(0xFFEFDFE1)
            override val surfaceDark = Color(0xFF191113)
            override val onSurfaceDark = Color(0xFFEFDFE1)
            override val surfaceVariantDark = Color(0xFF514347)
            override val onSurfaceVariantDark = Color(0xFFD5C2C6)
            override val outlineDark = Color(0xFF9E8C90)
            override val outlineVariantDark = Color(0xFF514347)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDark = Color(0xFF372E30)
            override val inversePrimaryDark = Color(0xFF8C4A60)
            override val surfaceDimDark = Color(0xFF191113)
            override val surfaceBrightDark = Color(0xFF413739)
            override val surfaceContainerLowestDark = Color(0xFF140C0E)
            override val surfaceContainerLowDark = Color(0xFF22191B)
            override val surfaceContainerDark = Color(0xFF261D1F)
            override val surfaceContainerHighDark = Color(0xFF31282A)
            override val surfaceContainerHighestDark = Color(0xFF3C3235)
            override val primaryDarkMediumContrast = Color(0xFFFFD0DC)
            override val onPrimaryDarkMediumContrast = Color(0xFF471227)
            override val primaryContainerDarkMediumContrast = Color(0xFFC67B92)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC7E79E)
            override val onSecondaryDarkMediumContrast = Color(0xFF172B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFF7D9A59)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFC7E79D)
            override val onTertiaryDarkMediumContrast = Color(0xFF182B00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7D9A58)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191113)
            override val onBackgroundDarkMediumContrast = Color(0xFFEFDFE1)
            override val surfaceDarkMediumContrast = Color(0xFF191113)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFECD7DB)
            override val outlineDarkMediumContrast = Color(0xFFC0ADB1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8C90)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31282A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF713449)
            override val surfaceDimDarkMediumContrast = Color(0xFF191113)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C4244)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0607)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241B1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2628)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3032)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453B3D)
            override val primaryDarkHighContrast = Color(0xFFFFEBEF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFEABC4)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF20000C)
            override val secondaryDarkHighContrast = Color(0xFFDAFBB0)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFAECD86)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF050E00)
            override val tertiaryDarkHighContrast = Color(0xFFDBFBAF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFAECD86)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF050E00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191113)
            override val onBackgroundDarkHighContrast = Color(0xFFEFDFE1)
            override val surfaceDarkHighContrast = Color(0xFF191113)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBEF)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BEC2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF713449)
            override val surfaceDimDarkHighContrast = Color(0xFF191113)
            override val surfaceBrightDarkHighContrast = Color(0xFF584D50)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261D1F)
            override val surfaceContainerDarkHighContrast = Color(0xFF372E30)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF43393B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F4446)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8C4A60)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD9E2)
            override val onPrimaryContainerLight = Color(0xFF703348)
            override val secondaryLight = Color(0xFF864B6F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD8EB)
            override val onSecondaryContainerLight = Color(0xFF6B3457)
            override val tertiaryLight = Color(0xFF745B0C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDF90)
            override val onTertiaryContainerLight = Color(0xFF584400)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F8)
            override val onBackgroundLight = Color(0xFF22191B)
            override val surfaceLight = Color(0xFFFFF8F8)
            override val onSurfaceLight = Color(0xFF22191B)
            override val surfaceVariantLight = Color(0xFFF2DDE1)
            override val onSurfaceVariantLight = Color(0xFF514347)
            override val outlineLight = Color(0xFF837377)
            override val outlineVariantLight = Color(0xFFD5C2C6)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372E30)
            override val inverseOnSurfaceLight = Color(0xFFFDEDEF)
            override val inversePrimaryLight = Color(0xFFFFB1C7)
            override val surfaceDimLight = Color(0xFFE6D6D9)
            override val surfaceBrightLight = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF0F2)
            override val surfaceContainerLight = Color(0xFFFBEAED)
            override val surfaceContainerHighLight = Color(0xFFF5E4E7)
            override val surfaceContainerHighestLight = Color(0xFFEFDFE1)
            override val primaryLightMediumContrast = Color(0xFF5C2237)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9D586E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF572345)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF96597E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF443400)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF846A1C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightMediumContrast = Color(0xFF22191B)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightMediumContrast = Color(0xFF170F11)
            override val surfaceVariantLightMediumContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF403336)
            override val outlineLightMediumContrast = Color(0xFF5D4F52)
            override val outlineVariantLightMediumContrast = Color(0xFF79696D)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEDEF)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightMediumContrast = Color(0xFFD2C3C5)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0F2)
            override val surfaceContainerLightMediumContrast = Color(0xFFF5E4E7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE9D9DC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDECED0)
            override val primaryLightHighContrast = Color(0xFF4F182D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73354A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4B193B)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6D3659)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF382A00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5B4600)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F8)
            override val onBackgroundLightHighContrast = Color(0xFF22191B)
            override val surfaceLightHighContrast = Color(0xFFFFF8F8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF2DDE1)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF35292C)
            override val outlineVariantLightHighContrast = Color(0xFF544649)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372E30)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB1C7)
            override val surfaceDimLightHighContrast = Color(0xFFC4B5B8)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEDEF)
            override val surfaceContainerLightHighContrast = Color(0xFFEFDFE1)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D1D3)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD2C3C5)
            override val primaryDark = Color(0xFFFFB1C7)
            override val onPrimaryDark = Color(0xFF541D32)
            override val primaryContainerDark = Color(0xFF703348)
            override val onPrimaryContainerDark = Color(0xFFFFD9E2)
            override val secondaryDark = Color(0xFFFAB1DA)
            override val onSecondaryDark = Color(0xFF501E3F)
            override val secondaryContainerDark = Color(0xFF6B3457)
            override val onSecondaryContainerDark = Color(0xFFFFD8EB)
            override val tertiaryDark = Color(0xFFE4C36C)
            override val onTertiaryDark = Color(0xFF3D2E00)
            override val tertiaryContainerDark = Color(0xFF584400)
            override val onTertiaryContainerDark = Color(0xFFFFDF90)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF191113)
            override val onBackgroundDark = Color(0xFFEFDFE1)
            override val surfaceDark = Color(0xFF191113)
            override val onSurfaceDark = Color(0xFFEFDFE1)
            override val surfaceVariantDark = Color(0xFF514347)
            override val onSurfaceVariantDark = Color(0xFFD5C2C6)
            override val outlineDark = Color(0xFF9E8C90)
            override val outlineVariantDark = Color(0xFF514347)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDark = Color(0xFF372E30)
            override val inversePrimaryDark = Color(0xFF8C4A60)
            override val surfaceDimDark = Color(0xFF191113)
            override val surfaceBrightDark = Color(0xFF413739)
            override val surfaceContainerLowestDark = Color(0xFF140C0E)
            override val surfaceContainerLowDark = Color(0xFF22191B)
            override val surfaceContainerDark = Color(0xFF261D1F)
            override val surfaceContainerHighDark = Color(0xFF31282A)
            override val surfaceContainerHighestDark = Color(0xFF3C3235)
            override val primaryDarkMediumContrast = Color(0xFFFFD0DC)
            override val onPrimaryDarkMediumContrast = Color(0xFF471227)
            override val primaryContainerDarkMediumContrast = Color(0xFFC67B92)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCFE8)
            override val onSecondaryDarkMediumContrast = Color(0xFF431234)
            override val secondaryContainerDarkMediumContrast = Color(0xFFBE7CA3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFBD980)
            override val onTertiaryDarkMediumContrast = Color(0xFF302400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFAB8D3D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF191113)
            override val onBackgroundDarkMediumContrast = Color(0xFFEFDFE1)
            override val surfaceDarkMediumContrast = Color(0xFF191113)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFECD7DB)
            override val outlineDarkMediumContrast = Color(0xFFC0ADB1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8C90)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF31282A)
            override val inversePrimaryDarkMediumContrast = Color(0xFF713449)
            override val surfaceDimDarkMediumContrast = Color(0xFF191113)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C4244)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0607)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF241B1D)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2628)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3A3032)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453B3D)
            override val primaryDarkHighContrast = Color(0xFFFFEBEF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFEABC4)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF20000C)
            override val secondaryDarkHighContrast = Color(0xFFFFEBF3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFF5ADD6)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1F0015)
            override val tertiaryDarkHighContrast = Color(0xFFFFEECC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE0BF69)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF100A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF191113)
            override val onBackgroundDarkHighContrast = Color(0xFFEFDFE1)
            override val surfaceDarkHighContrast = Color(0xFF191113)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF514347)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEBEF)
            override val outlineVariantDarkHighContrast = Color(0xFFD1BEC2)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEFDFE1)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF713449)
            override val surfaceDimDarkHighContrast = Color(0xFF191113)
            override val surfaceBrightDarkHighContrast = Color(0xFF584D50)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF261D1F)
            override val surfaceContainerDarkHighContrast = Color(0xFF372E30)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF43393B)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4F4446)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("magenta", "Magenta")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}