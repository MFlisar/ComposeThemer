package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroEmerald : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF406836)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0EFB0)
            override val onPrimaryContainerLight = Color(0xFF285020)
            override val secondaryLight = Color(0xFF406836)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFC0EFB0)
            override val onSecondaryContainerLight = Color(0xFF285020)
            override val tertiaryLight = Color(0xFF006A6A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF9CF1F0)
            override val onTertiaryContainerLight = Color(0xFF004F4F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBF1)
            override val onBackgroundLight = Color(0xFF191D17)
            override val surfaceLight = Color(0xFFF8FBF1)
            override val onSurfaceLight = Color(0xFF191D17)
            override val surfaceVariantLight = Color(0xFFDFE4D7)
            override val onSurfaceVariantLight = Color(0xFF43483F)
            override val outlineLight = Color(0xFF73796E)
            override val outlineVariantLight = Color(0xFFC3C8BC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E322B)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E8)
            override val inversePrimaryLight = Color(0xFFA5D396)
            override val surfaceDimLight = Color(0xFFD8DBD2)
            override val surfaceBrightLight = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5EB)
            override val surfaceContainerLight = Color(0xFFECEFE5)
            override val surfaceContainerHighLight = Color(0xFFE6E9E0)
            override val surfaceContainerHighestLight = Color(0xFFE1E4DA)
            override val primaryLightMediumContrast = Color(0xFF173E11)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF173E11)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003D3D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF167979)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightMediumContrast = Color(0xFF191D17)
            override val surfaceLightMediumContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0E120D)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF32382F)
            override val outlineLightMediumContrast = Color(0xFF4E544A)
            override val outlineVariantLightMediumContrast = Color(0xFF696F64)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E8)
            override val inversePrimaryLightMediumContrast = Color(0xFFA5D396)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E9E0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C9)
            override val primaryLightHighContrast = Color(0xFF0C3407)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0C3407)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003232)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF005252)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightHighContrast = Color(0xFF191D17)
            override val surfaceLightHighContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E25)
            override val outlineVariantLightHighContrast = Color(0xFF454B41)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFA5D396)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E8)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8BE)
            override val primaryDark = Color(0xFFA5D396)
            override val onPrimaryDark = Color(0xFF11380B)
            override val primaryContainerDark = Color(0xFF285020)
            override val onPrimaryContainerDark = Color(0xFFC0EFB0)
            override val secondaryDark = Color(0xFFA5D396)
            override val onSecondaryDark = Color(0xFF11380B)
            override val secondaryContainerDark = Color(0xFF285020)
            override val onSecondaryContainerDark = Color(0xFFC0EFB0)
            override val tertiaryDark = Color(0xFF80D5D4)
            override val onTertiaryDark = Color(0xFF003737)
            override val tertiaryContainerDark = Color(0xFF004F4F)
            override val onTertiaryContainerDark = Color(0xFF9CF1F0)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11140F)
            override val onBackgroundDark = Color(0xFFE1E4DA)
            override val surfaceDark = Color(0xFF11140F)
            override val onSurfaceDark = Color(0xFFE1E4DA)
            override val surfaceVariantDark = Color(0xFF43483F)
            override val onSurfaceVariantDark = Color(0xFFC3C8BC)
            override val outlineDark = Color(0xFF8D9387)
            override val outlineVariantDark = Color(0xFF43483F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDark = Color(0xFF2E322B)
            override val inversePrimaryDark = Color(0xFF406836)
            override val surfaceDimDark = Color(0xFF11140F)
            override val surfaceBrightDark = Color(0xFF363A34)
            override val surfaceContainerLowestDark = Color(0xFF0B0F0A)
            override val surfaceContainerLowDark = Color(0xFF191D17)
            override val surfaceContainerDark = Color(0xFF1D211B)
            override val surfaceContainerHighDark = Color(0xFF272B25)
            override val surfaceContainerHighestDark = Color(0xFF32362F)
            override val primaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onPrimaryDarkMediumContrast = Color(0xFF052D03)
            override val primaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onSecondaryDarkMediumContrast = Color(0xFF052D03)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF96EBEA)
            override val onTertiaryDarkMediumContrast = Color(0xFF002B2B)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF479E9D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11140F)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4DA)
            override val surfaceDarkMediumContrast = Color(0xFF11140F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DED1)
            override val outlineDarkMediumContrast = Color(0xFFAEB4A8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9287)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272B25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2A5121)
            override val surfaceDimDarkMediumContrast = Color(0xFF11140F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050804)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252923)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F38)
            override val primaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F00)
            override val secondaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F00)
            override val tertiaryDarkHighContrast = Color(0xFFAAFFFE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF7CD1D0)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000E0E)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11140F)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4DA)
            override val surfaceDarkHighContrast = Color(0xFF11140F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF2E5)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC5B8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2A5121)
            override val surfaceDimDarkHighContrast = Color(0xFF11140F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D514A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF444841)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF406836)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0EFB0)
            override val onPrimaryContainerLight = Color(0xFF285020)
            override val secondaryLight = Color(0xFF406836)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFC0EFB0)
            override val onSecondaryContainerLight = Color(0xFF285020)
            override val tertiaryLight = Color(0xFF37693D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB9F0B8)
            override val onTertiaryContainerLight = Color(0xFF1F5027)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBF1)
            override val onBackgroundLight = Color(0xFF191D17)
            override val surfaceLight = Color(0xFFF8FBF1)
            override val onSurfaceLight = Color(0xFF191D17)
            override val surfaceVariantLight = Color(0xFFDFE4D7)
            override val onSurfaceVariantLight = Color(0xFF43483F)
            override val outlineLight = Color(0xFF73796E)
            override val outlineVariantLight = Color(0xFFC3C8BC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E322B)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E8)
            override val inversePrimaryLight = Color(0xFFA5D396)
            override val surfaceDimLight = Color(0xFFD8DBD2)
            override val surfaceBrightLight = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5EB)
            override val surfaceContainerLight = Color(0xFFECEFE5)
            override val surfaceContainerHighLight = Color(0xFFE6E9E0)
            override val surfaceContainerHighestLight = Color(0xFFE1E4DA)
            override val primaryLightMediumContrast = Color(0xFF173E11)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF173E11)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF0B3F18)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF46784A)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightMediumContrast = Color(0xFF191D17)
            override val surfaceLightMediumContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0E120D)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF32382F)
            override val outlineLightMediumContrast = Color(0xFF4E544A)
            override val outlineVariantLightMediumContrast = Color(0xFF696F64)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E8)
            override val inversePrimaryLightMediumContrast = Color(0xFFA5D396)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E9E0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C9)
            override val primaryLightHighContrast = Color(0xFF0C3407)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0C3407)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF00340F)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF215329)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightHighContrast = Color(0xFF191D17)
            override val surfaceLightHighContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E25)
            override val outlineVariantLightHighContrast = Color(0xFF454B41)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFA5D396)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E8)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8BE)
            override val primaryDark = Color(0xFFA5D396)
            override val onPrimaryDark = Color(0xFF11380B)
            override val primaryContainerDark = Color(0xFF285020)
            override val onPrimaryContainerDark = Color(0xFFC0EFB0)
            override val secondaryDark = Color(0xFFA5D396)
            override val onSecondaryDark = Color(0xFF11380B)
            override val secondaryContainerDark = Color(0xFF285020)
            override val onSecondaryContainerDark = Color(0xFFC0EFB0)
            override val tertiaryDark = Color(0xFF9DD49E)
            override val onTertiaryDark = Color(0xFF033912)
            override val tertiaryContainerDark = Color(0xFF1F5027)
            override val onTertiaryContainerDark = Color(0xFFB9F0B8)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11140F)
            override val onBackgroundDark = Color(0xFFE1E4DA)
            override val surfaceDark = Color(0xFF11140F)
            override val onSurfaceDark = Color(0xFFE1E4DA)
            override val surfaceVariantDark = Color(0xFF43483F)
            override val onSurfaceVariantDark = Color(0xFFC3C8BC)
            override val outlineDark = Color(0xFF8D9387)
            override val outlineVariantDark = Color(0xFF43483F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDark = Color(0xFF2E322B)
            override val inversePrimaryDark = Color(0xFF406836)
            override val surfaceDimDark = Color(0xFF11140F)
            override val surfaceBrightDark = Color(0xFF363A34)
            override val surfaceContainerLowestDark = Color(0xFF0B0F0A)
            override val surfaceContainerLowDark = Color(0xFF191D17)
            override val surfaceContainerDark = Color(0xFF1D211B)
            override val surfaceContainerHighDark = Color(0xFF272B25)
            override val surfaceContainerHighestDark = Color(0xFF32362F)
            override val primaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onPrimaryDarkMediumContrast = Color(0xFF052D03)
            override val primaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onSecondaryDarkMediumContrast = Color(0xFF052D03)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFB3EAB2)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D0C)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF699D6B)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11140F)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4DA)
            override val surfaceDarkMediumContrast = Color(0xFF11140F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DED1)
            override val outlineDarkMediumContrast = Color(0xFFAEB4A8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9287)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272B25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2A5121)
            override val surfaceDimDarkMediumContrast = Color(0xFF11140F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050804)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252923)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F38)
            override val primaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F00)
            override val secondaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F00)
            override val tertiaryDarkHighContrast = Color(0xFFC6FEC5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF9AD09A)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F02)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11140F)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4DA)
            override val surfaceDarkHighContrast = Color(0xFF11140F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF2E5)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC5B8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2A5121)
            override val surfaceDimDarkHighContrast = Color(0xFF11140F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D514A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF444841)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF406836)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0EFB0)
            override val onPrimaryContainerLight = Color(0xFF285020)
            override val secondaryLight = Color(0xFF904B40)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDAD4)
            override val onSecondaryContainerLight = Color(0xFF73342B)
            override val tertiaryLight = Color(0xFF904B40)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDAD4)
            override val onTertiaryContainerLight = Color(0xFF73342B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBF1)
            override val onBackgroundLight = Color(0xFF191D17)
            override val surfaceLight = Color(0xFFF8FBF1)
            override val onSurfaceLight = Color(0xFF191D17)
            override val surfaceVariantLight = Color(0xFFDFE4D7)
            override val onSurfaceVariantLight = Color(0xFF43483F)
            override val outlineLight = Color(0xFF73796E)
            override val outlineVariantLight = Color(0xFFC3C8BC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E322B)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E8)
            override val inversePrimaryLight = Color(0xFFA5D396)
            override val surfaceDimLight = Color(0xFFD8DBD2)
            override val surfaceBrightLight = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5EB)
            override val surfaceContainerLight = Color(0xFFECEFE5)
            override val surfaceContainerHighLight = Color(0xFFE6E9E0)
            override val surfaceContainerHighestLight = Color(0xFFE1E4DA)
            override val primaryLightMediumContrast = Color(0xFF173E11)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF5E241C)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFA1594E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5E241C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFFA1594E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightMediumContrast = Color(0xFF191D17)
            override val surfaceLightMediumContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0E120D)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF32382F)
            override val outlineLightMediumContrast = Color(0xFF4E544A)
            override val outlineVariantLightMediumContrast = Color(0xFF696F64)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E8)
            override val inversePrimaryLightMediumContrast = Color(0xFFA5D396)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E9E0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C9)
            override val primaryLightHighContrast = Color(0xFF0C3407)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF511A13)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF76362D)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF511A13)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF76362D)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightHighContrast = Color(0xFF191D17)
            override val surfaceLightHighContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E25)
            override val outlineVariantLightHighContrast = Color(0xFF454B41)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFA5D396)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E8)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8BE)
            override val primaryDark = Color(0xFFA5D396)
            override val onPrimaryDark = Color(0xFF11380B)
            override val primaryContainerDark = Color(0xFF285020)
            override val onPrimaryContainerDark = Color(0xFFC0EFB0)
            override val secondaryDark = Color(0xFFFFB4A8)
            override val onSecondaryDark = Color(0xFF561E16)
            override val secondaryContainerDark = Color(0xFF73342B)
            override val onSecondaryContainerDark = Color(0xFFFFDAD4)
            override val tertiaryDark = Color(0xFFFFB4A8)
            override val onTertiaryDark = Color(0xFF561E17)
            override val tertiaryContainerDark = Color(0xFF73342B)
            override val onTertiaryContainerDark = Color(0xFFFFDAD4)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11140F)
            override val onBackgroundDark = Color(0xFFE1E4DA)
            override val surfaceDark = Color(0xFF11140F)
            override val onSurfaceDark = Color(0xFFE1E4DA)
            override val surfaceVariantDark = Color(0xFF43483F)
            override val onSurfaceVariantDark = Color(0xFFC3C8BC)
            override val outlineDark = Color(0xFF8D9387)
            override val outlineVariantDark = Color(0xFF43483F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDark = Color(0xFF2E322B)
            override val inversePrimaryDark = Color(0xFF406836)
            override val surfaceDimDark = Color(0xFF11140F)
            override val surfaceBrightDark = Color(0xFF363A34)
            override val surfaceContainerLowestDark = Color(0xFF0B0F0A)
            override val surfaceContainerLowDark = Color(0xFF191D17)
            override val surfaceContainerDark = Color(0xFF1D211B)
            override val surfaceContainerHighDark = Color(0xFF272B25)
            override val surfaceContainerHighestDark = Color(0xFF32362F)
            override val primaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onPrimaryDarkMediumContrast = Color(0xFF052D03)
            override val primaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onSecondaryDarkMediumContrast = Color(0xFF48140D)
            override val secondaryContainerDarkMediumContrast = Color(0xFFCC7B6F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD2CB)
            override val onTertiaryDarkMediumContrast = Color(0xFF48140D)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFCC7B6F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11140F)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4DA)
            override val surfaceDarkMediumContrast = Color(0xFF11140F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DED1)
            override val outlineDarkMediumContrast = Color(0xFFAEB4A8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9287)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272B25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2A5121)
            override val surfaceDimDarkMediumContrast = Color(0xFF11140F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050804)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252923)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F38)
            override val primaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F00)
            override val secondaryDarkHighContrast = Color(0xFFFFECE9)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF220000)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE9)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFAEA2)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF220000)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11140F)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4DA)
            override val surfaceDarkHighContrast = Color(0xFF11140F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF2E5)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC5B8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2A5121)
            override val surfaceDimDarkHighContrast = Color(0xFF11140F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D514A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF444841)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF406836)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFC0EFB0)
            override val onPrimaryContainerLight = Color(0xFF285020)
            override val secondaryLight = Color(0xFF406836)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFC0EFB0)
            override val onSecondaryContainerLight = Color(0xFF285020)
            override val tertiaryLight = Color(0xFF735187)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF5D9FF)
            override val onTertiaryContainerLight = Color(0xFF5A396D)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF8FBF1)
            override val onBackgroundLight = Color(0xFF191D17)
            override val surfaceLight = Color(0xFFF8FBF1)
            override val onSurfaceLight = Color(0xFF191D17)
            override val surfaceVariantLight = Color(0xFFDFE4D7)
            override val onSurfaceVariantLight = Color(0xFF43483F)
            override val outlineLight = Color(0xFF73796E)
            override val outlineVariantLight = Color(0xFFC3C8BC)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2E322B)
            override val inverseOnSurfaceLight = Color(0xFFEFF2E8)
            override val inversePrimaryLight = Color(0xFFA5D396)
            override val surfaceDimLight = Color(0xFFD8DBD2)
            override val surfaceBrightLight = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF2F5EB)
            override val surfaceContainerLight = Color(0xFFECEFE5)
            override val surfaceContainerHighLight = Color(0xFFE6E9E0)
            override val surfaceContainerHighestLight = Color(0xFFE1E4DA)
            override val primaryLightMediumContrast = Color(0xFF173E11)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF173E11)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF4E7743)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF48285B)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF835F96)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightMediumContrast = Color(0xFF191D17)
            override val surfaceLightMediumContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightMediumContrast = Color(0xFF0E120D)
            override val surfaceVariantLightMediumContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF32382F)
            override val outlineLightMediumContrast = Color(0xFF4E544A)
            override val outlineVariantLightMediumContrast = Color(0xFF696F64)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF2E8)
            override val inversePrimaryLightMediumContrast = Color(0xFFA5D396)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C8BE)
            override val surfaceBrightLightMediumContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF2F5EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E9E0)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDBDED4)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD0D3C9)
            override val primaryLightHighContrast = Color(0xFF0C3407)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF0C3407)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF2B5222)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3E1E51)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5D3C70)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF8FBF1)
            override val onBackgroundLightHighContrast = Color(0xFF191D17)
            override val surfaceLightHighContrast = Color(0xFFF8FBF1)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDFE4D7)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF282E25)
            override val outlineVariantLightHighContrast = Color(0xFF454B41)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2E322B)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFA5D396)
            override val surfaceDimLightHighContrast = Color(0xFFB7BAB1)
            override val surfaceBrightLightHighContrast = Color(0xFFF8FBF1)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEFF2E8)
            override val surfaceContainerLightHighContrast = Color(0xFFE1E4DA)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D6CC)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C8BE)
            override val primaryDark = Color(0xFFA5D396)
            override val onPrimaryDark = Color(0xFF11380B)
            override val primaryContainerDark = Color(0xFF285020)
            override val onPrimaryContainerDark = Color(0xFFC0EFB0)
            override val secondaryDark = Color(0xFFA5D396)
            override val onSecondaryDark = Color(0xFF11380B)
            override val secondaryContainerDark = Color(0xFF285020)
            override val onSecondaryContainerDark = Color(0xFFC0EFB0)
            override val tertiaryDark = Color(0xFFE1B8F5)
            override val onTertiaryDark = Color(0xFF422255)
            override val tertiaryContainerDark = Color(0xFF5A396D)
            override val onTertiaryContainerDark = Color(0xFFF5D9FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF11140F)
            override val onBackgroundDark = Color(0xFFE1E4DA)
            override val surfaceDark = Color(0xFF11140F)
            override val onSurfaceDark = Color(0xFFE1E4DA)
            override val surfaceVariantDark = Color(0xFF43483F)
            override val onSurfaceVariantDark = Color(0xFFC3C8BC)
            override val outlineDark = Color(0xFF8D9387)
            override val outlineVariantDark = Color(0xFF43483F)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDark = Color(0xFF2E322B)
            override val inversePrimaryDark = Color(0xFF406836)
            override val surfaceDimDark = Color(0xFF11140F)
            override val surfaceBrightDark = Color(0xFF363A34)
            override val surfaceContainerLowestDark = Color(0xFF0B0F0A)
            override val surfaceContainerLowDark = Color(0xFF191D17)
            override val surfaceContainerDark = Color(0xFF1D211B)
            override val surfaceContainerHighDark = Color(0xFF272B25)
            override val surfaceContainerHighestDark = Color(0xFF32362F)
            override val primaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onPrimaryDarkMediumContrast = Color(0xFF052D03)
            override val primaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFBAE9AA)
            override val onSecondaryDarkMediumContrast = Color(0xFF052D03)
            override val secondaryContainerDarkMediumContrast = Color(0xFF719C64)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF1D1FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF37174A)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA883BC)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF11140F)
            override val onBackgroundDarkMediumContrast = Color(0xFFE1E4DA)
            override val surfaceDarkMediumContrast = Color(0xFF11140F)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD9DED1)
            override val outlineDarkMediumContrast = Color(0xFFAEB4A8)
            override val outlineVariantDarkMediumContrast = Color(0xFF8C9287)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272B25)
            override val inversePrimaryDarkMediumContrast = Color(0xFF2A5121)
            override val surfaceDimDarkMediumContrast = Color(0xFF11140F)
            override val surfaceBrightDarkMediumContrast = Color(0xFF42463F)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF050804)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1F19)
            override val surfaceContainerDarkMediumContrast = Color(0xFF252923)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF30342D)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3B3F38)
            override val primaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000F00)
            override val secondaryDarkHighContrast = Color(0xFFCDFDBC)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFA1CF92)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000F00)
            override val tertiaryDarkHighContrast = Color(0xFFFCEBFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFDDB4F1)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF180028)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF11140F)
            override val onBackgroundDarkHighContrast = Color(0xFFE1E4DA)
            override val surfaceDarkHighContrast = Color(0xFF11140F)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF43483F)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFECF2E5)
            override val outlineVariantDarkHighContrast = Color(0xFFBFC5B8)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE1E4DA)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF2A5121)
            override val surfaceDimDarkHighContrast = Color(0xFF11140F)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D514A)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1D211B)
            override val surfaceContainerDarkHighContrast = Color(0xFF2E322B)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF393D36)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF444841)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("emerald", "Emerald")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}