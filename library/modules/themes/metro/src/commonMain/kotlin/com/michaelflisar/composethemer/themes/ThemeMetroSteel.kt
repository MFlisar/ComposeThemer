package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroSteel : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF2A638B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFCCE5FF)
            override val onPrimaryContainerLight = Color(0xFF044B71)
            override val secondaryLight = Color(0xFF07677F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB7EAFF)
            override val onSecondaryContainerLight = Color(0xFF004E60)
            override val tertiaryLight = Color(0xFF535A92)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDFE0FF)
            override val onTertiaryContainerLight = Color(0xFF3B4279)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FF)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FF)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDEE3EA)
            override val onSurfaceVariantLight = Color(0xFF42474E)
            override val outlineLight = Color(0xFF72787E)
            override val outlineVariantLight = Color(0xFFC2C7CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F6)
            override val inversePrimaryLight = Color(0xFF98CCF9)
            override val surfaceDimLight = Color(0xFFD7DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFEBEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8EE)
            override val surfaceContainerHighestLight = Color(0xFFE0E3E8)
            override val primaryLightMediumContrast = Color(0xFF003959)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF3C729A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003C4B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF24768E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2A3167)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6169A2)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373D)
            override val outlineLightMediumContrast = Color(0xFF4D5359)
            override val outlineVariantLightMediumContrast = Color(0xFF686E74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF98CCF9)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C7CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF094D74)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005064)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF1F275C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3D457B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D32)
            override val outlineVariantLightHighContrast = Color(0xFF444A50)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF98CCF9)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E3E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C7CC)
            override val primaryDark = Color(0xFF98CCF9)
            override val onPrimaryDark = Color(0xFF003350)
            override val primaryContainerDark = Color(0xFF044B71)
            override val onPrimaryContainerDark = Color(0xFFCCE5FF)
            override val secondaryDark = Color(0xFF88D1EC)
            override val onSecondaryDark = Color(0xFF003543)
            override val secondaryContainerDark = Color(0xFF004E60)
            override val onSecondaryContainerDark = Color(0xFFB7EAFF)
            override val tertiaryDark = Color(0xFFBCC3FF)
            override val onTertiaryDark = Color(0xFF242B61)
            override val tertiaryContainerDark = Color(0xFF3B4279)
            override val onTertiaryContainerDark = Color(0xFFDFE0FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E3E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E3E8)
            override val surfaceVariantDark = Color(0xFF42474E)
            override val onSurfaceVariantDark = Color(0xFFC2C7CE)
            override val outlineDark = Color(0xFF8C9198)
            override val outlineVariantDark = Color(0xFF42474E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF2A638B)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF363A3E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF313539)
            override val primaryDarkMediumContrast = Color(0xFFBFE0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF6196C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFA5E6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A35)
            override val secondaryContainerDarkMediumContrast = Color(0xFF509AB4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF182055)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF858DC8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E3E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7DDE4)
            override val outlineDarkMediumContrast = Color(0xFFADB2BA)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9198)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF064C73)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF94C8F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C18)
            override val secondaryDarkHighContrast = Color(0xFFDBF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF84CDE8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB7BEFD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000435)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E3E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF0F8)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF064C73)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474B)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF2A638B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFCCE5FF)
            override val onPrimaryContainerLight = Color(0xFF044B71)
            override val secondaryLight = Color(0xFF07677F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB7EAFF)
            override val onSecondaryContainerLight = Color(0xFF004E60)
            override val tertiaryLight = Color(0xFF00677C)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB2EBFF)
            override val onTertiaryContainerLight = Color(0xFF004E5E)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FF)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FF)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDEE3EA)
            override val onSurfaceVariantLight = Color(0xFF42474E)
            override val outlineLight = Color(0xFF72787E)
            override val outlineVariantLight = Color(0xFFC2C7CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F6)
            override val inversePrimaryLight = Color(0xFF98CCF9)
            override val surfaceDimLight = Color(0xFFD7DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFEBEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8EE)
            override val surfaceContainerHighestLight = Color(0xFFE0E3E8)
            override val primaryLightMediumContrast = Color(0xFF003959)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF3C729A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003C4B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF24768E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003C49)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF21768C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373D)
            override val outlineLightMediumContrast = Color(0xFF4D5359)
            override val outlineVariantLightMediumContrast = Color(0xFF686E74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF98CCF9)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C7CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF094D74)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005064)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF00313C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF005061)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D32)
            override val outlineVariantLightHighContrast = Color(0xFF444A50)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF98CCF9)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E3E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C7CC)
            override val primaryDark = Color(0xFF98CCF9)
            override val onPrimaryDark = Color(0xFF003350)
            override val primaryContainerDark = Color(0xFF044B71)
            override val onPrimaryContainerDark = Color(0xFFCCE5FF)
            override val secondaryDark = Color(0xFF88D1EC)
            override val onSecondaryDark = Color(0xFF003543)
            override val secondaryContainerDark = Color(0xFF004E60)
            override val onSecondaryContainerDark = Color(0xFFB7EAFF)
            override val tertiaryDark = Color(0xFF86D1E9)
            override val onTertiaryDark = Color(0xFF003642)
            override val tertiaryContainerDark = Color(0xFF004E5E)
            override val onTertiaryContainerDark = Color(0xFFB2EBFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E3E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E3E8)
            override val surfaceVariantDark = Color(0xFF42474E)
            override val onSurfaceVariantDark = Color(0xFFC2C7CE)
            override val outlineDark = Color(0xFF8C9198)
            override val outlineVariantDark = Color(0xFF42474E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF2A638B)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF363A3E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF313539)
            override val primaryDarkMediumContrast = Color(0xFFBFE0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF6196C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFA5E6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A35)
            override val secondaryContainerDarkMediumContrast = Color(0xFF509AB4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF9EE7FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF002A34)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF4E9BB1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E3E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7DDE4)
            override val outlineDarkMediumContrast = Color(0xFFADB2BA)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9198)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF064C73)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF94C8F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C18)
            override val secondaryDarkHighContrast = Color(0xFFDBF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF84CDE8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFD9F5FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF82CDE5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000D12)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E3E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF0F8)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF064C73)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474B)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF2A638B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFCCE5FF)
            override val onPrimaryContainerLight = Color(0xFF044B71)
            override val secondaryLight = Color(0xFF845416)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDCBC)
            override val onSecondaryContainerLight = Color(0xFF683D00)
            override val tertiaryLight = Color(0xFF835414)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDDB9)
            override val onTertiaryContainerLight = Color(0xFF663E00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FF)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FF)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDEE3EA)
            override val onSurfaceVariantLight = Color(0xFF42474E)
            override val outlineLight = Color(0xFF72787E)
            override val outlineVariantLight = Color(0xFFC2C7CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F6)
            override val inversePrimaryLight = Color(0xFF98CCF9)
            override val surfaceDimLight = Color(0xFFD7DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFEBEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8EE)
            override val surfaceContainerHighestLight = Color(0xFFE0E3E8)
            override val primaryLightMediumContrast = Color(0xFF003959)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF3C729A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF512E00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF956224)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF4F2F00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF946322)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373D)
            override val outlineLightMediumContrast = Color(0xFF4D5359)
            override val outlineVariantLightMediumContrast = Color(0xFF686E74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF98CCF9)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C7CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF094D74)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF432500)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF6B3F00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF422600)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF694000)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D32)
            override val outlineVariantLightHighContrast = Color(0xFF444A50)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF98CCF9)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E3E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C7CC)
            override val primaryDark = Color(0xFF98CCF9)
            override val onPrimaryDark = Color(0xFF003350)
            override val primaryContainerDark = Color(0xFF044B71)
            override val onPrimaryContainerDark = Color(0xFFCCE5FF)
            override val secondaryDark = Color(0xFFFBBA73)
            override val onSecondaryDark = Color(0xFF492900)
            override val secondaryContainerDark = Color(0xFF683D00)
            override val onSecondaryContainerDark = Color(0xFFFFDCBC)
            override val tertiaryDark = Color(0xFFF9BB72)
            override val onTertiaryDark = Color(0xFF472A00)
            override val tertiaryContainerDark = Color(0xFF663E00)
            override val onTertiaryContainerDark = Color(0xFFFFDDB9)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E3E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E3E8)
            override val surfaceVariantDark = Color(0xFF42474E)
            override val onSurfaceVariantDark = Color(0xFFC2C7CE)
            override val outlineDark = Color(0xFF8C9198)
            override val outlineVariantDark = Color(0xFF42474E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF2A638B)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF363A3E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF313539)
            override val primaryDarkMediumContrast = Color(0xFFBFE0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF6196C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD5AB)
            override val onSecondaryDarkMediumContrast = Color(0xFF3A2000)
            override val secondaryContainerDarkMediumContrast = Color(0xFFBE8544)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD5A8)
            override val onTertiaryDarkMediumContrast = Color(0xFF392000)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBD8642)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E3E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7DDE4)
            override val outlineDarkMediumContrast = Color(0xFFADB2BA)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9198)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF064C73)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF94C8F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C18)
            override val secondaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFF6B670)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF150800)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDD)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF5B76E)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF150900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E3E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF0F8)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF064C73)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474B)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF2A638B)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFCCE5FF)
            override val onPrimaryContainerLight = Color(0xFF044B71)
            override val secondaryLight = Color(0xFF07677F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFB7EAFF)
            override val onSecondaryContainerLight = Color(0xFF004E60)
            override val tertiaryLight = Color(0xFF874B6D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD8EA)
            override val onTertiaryContainerLight = Color(0xFF6B3455)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFF7F9FF)
            override val onBackgroundLight = Color(0xFF181C20)
            override val surfaceLight = Color(0xFFF7F9FF)
            override val onSurfaceLight = Color(0xFF181C20)
            override val surfaceVariantLight = Color(0xFFDEE3EA)
            override val onSurfaceVariantLight = Color(0xFF42474E)
            override val outlineLight = Color(0xFF72787E)
            override val outlineVariantLight = Color(0xFFC2C7CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2D3135)
            override val inverseOnSurfaceLight = Color(0xFFEEF1F6)
            override val inversePrimaryLight = Color(0xFF98CCF9)
            override val surfaceDimLight = Color(0xFFD7DADF)
            override val surfaceBrightLight = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF1F4F9)
            override val surfaceContainerLight = Color(0xFFEBEEF3)
            override val surfaceContainerHighLight = Color(0xFFE6E8EE)
            override val surfaceContainerHighestLight = Color(0xFFE0E3E8)
            override val primaryLightMediumContrast = Color(0xFF003959)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF3C729A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF003C4B)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF24768E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF582344)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF97597D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightMediumContrast = Color(0xFF181C20)
            override val surfaceLightMediumContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightMediumContrast = Color(0xFF0E1215)
            override val surfaceVariantLightMediumContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF31373D)
            override val outlineLightMediumContrast = Color(0xFF4D5359)
            override val outlineVariantLightMediumContrast = Color(0xFF686E74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF1F6)
            override val inversePrimaryLightMediumContrast = Color(0xFF98CCF9)
            override val surfaceDimLightMediumContrast = Color(0xFFC4C7CC)
            override val surfaceBrightLightMediumContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF1F4F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFE6E8EE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDADDE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFCFD2D7)
            override val primaryLightHighContrast = Color(0xFF002F4A)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF094D74)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF00313E)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF005064)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4C1939)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6E3658)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFF7F9FF)
            override val onBackgroundLightHighContrast = Color(0xFF181C20)
            override val surfaceLightHighContrast = Color(0xFFF7F9FF)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFDEE3EA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF272D32)
            override val outlineVariantLightHighContrast = Color(0xFF444A50)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2D3135)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFF98CCF9)
            override val surfaceDimLightHighContrast = Color(0xFFB6B9BE)
            override val surfaceBrightLightHighContrast = Color(0xFFF7F9FF)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFEEF1F6)
            override val surfaceContainerLightHighContrast = Color(0xFFE0E3E8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD2D4DA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC4C7CC)
            override val primaryDark = Color(0xFF98CCF9)
            override val onPrimaryDark = Color(0xFF003350)
            override val primaryContainerDark = Color(0xFF044B71)
            override val onPrimaryContainerDark = Color(0xFFCCE5FF)
            override val secondaryDark = Color(0xFF88D1EC)
            override val onSecondaryDark = Color(0xFF003543)
            override val secondaryContainerDark = Color(0xFF004E60)
            override val onSecondaryContainerDark = Color(0xFFB7EAFF)
            override val tertiaryDark = Color(0xFFFBB1D8)
            override val onTertiaryDark = Color(0xFF511D3E)
            override val tertiaryContainerDark = Color(0xFF6B3455)
            override val onTertiaryContainerDark = Color(0xFFFFD8EA)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF101417)
            override val onBackgroundDark = Color(0xFFE0E3E8)
            override val surfaceDark = Color(0xFF101417)
            override val onSurfaceDark = Color(0xFFE0E3E8)
            override val surfaceVariantDark = Color(0xFF42474E)
            override val onSurfaceVariantDark = Color(0xFFC2C7CE)
            override val outlineDark = Color(0xFF8C9198)
            override val outlineVariantDark = Color(0xFF42474E)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDark = Color(0xFF2D3135)
            override val inversePrimaryDark = Color(0xFF2A638B)
            override val surfaceDimDark = Color(0xFF101417)
            override val surfaceBrightDark = Color(0xFF363A3E)
            override val surfaceContainerLowestDark = Color(0xFF0B0F12)
            override val surfaceContainerLowDark = Color(0xFF181C20)
            override val surfaceContainerDark = Color(0xFF1C2024)
            override val surfaceContainerHighDark = Color(0xFF272A2E)
            override val surfaceContainerHighestDark = Color(0xFF313539)
            override val primaryDarkMediumContrast = Color(0xFFBFE0FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF002840)
            override val primaryContainerDarkMediumContrast = Color(0xFF6196C0)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFA5E6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002A35)
            override val secondaryContainerDarkMediumContrast = Color(0xFF509AB4)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCFE6)
            override val onTertiaryDarkMediumContrast = Color(0xFF441232)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBF7CA1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF101417)
            override val onBackgroundDarkMediumContrast = Color(0xFFE0E3E8)
            override val surfaceDarkMediumContrast = Color(0xFF101417)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFD7DDE4)
            override val outlineDarkMediumContrast = Color(0xFFADB2BA)
            override val outlineVariantDarkMediumContrast = Color(0xFF8B9198)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF064C73)
            override val surfaceDimDarkMediumContrast = Color(0xFF101417)
            override val surfaceBrightDarkMediumContrast = Color(0xFF414549)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF05080B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1A1E22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF24282C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF2F3337)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3A3E42)
            override val primaryDarkHighContrast = Color(0xFFE5F1FF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFF94C8F5)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF000C18)
            override val secondaryDarkHighContrast = Color(0xFFDBF4FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF84CDE8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000D13)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBF2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF6ADD4)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1F0014)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF101417)
            override val onBackgroundDarkHighContrast = Color(0xFFE0E3E8)
            override val surfaceDarkHighContrast = Color(0xFF101417)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF42474E)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEBF0F8)
            override val outlineVariantDarkHighContrast = Color(0xFFBEC3CA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE0E3E8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF064C73)
            override val surfaceDimDarkHighContrast = Color(0xFF101417)
            override val surfaceBrightDarkHighContrast = Color(0xFF4D5055)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1C2024)
            override val surfaceContainerDarkHighContrast = Color(0xFF2D3135)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF383C40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF43474B)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("steel", "Steel")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}