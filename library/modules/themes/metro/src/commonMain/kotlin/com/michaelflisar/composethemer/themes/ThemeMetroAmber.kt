package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroAmber : ComposeTheme.Group {

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("amber", "Amber")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF7F560F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDDB2)
            override val onPrimaryContainerLight = Color(0xFF624000)
            override val secondaryLight = Color(0xFF725C0C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFE086)
            override val onSecondaryContainerLight = Color(0xFF574500)
            override val tertiaryLight = Color(0xFF616118)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE8E78F)
            override val onTertiaryContainerLight = Color(0xFF494900)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF201B13)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF201B13)
            override val surfaceVariantLight = Color(0xFFEFE0CF)
            override val onSurfaceVariantLight = Color(0xFF4F4539)
            override val outlineLight = Color(0xFF817567)
            override val outlineVariantLight = Color(0xFFD3C4B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362F27)
            override val inverseOnSurfaceLight = Color(0xFFFBEFE2)
            override val inversePrimaryLight = Color(0xFFF3BD6E)
            override val surfaceDimLight = Color(0xFFE4D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E5)
            override val surfaceContainerLight = Color(0xFFF8ECDF)
            override val surfaceContainerHighLight = Color(0xFFF3E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEDE0D4)
            override val primaryLightMediumContrast = Color(0xFF4C3100)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF90651E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF433500)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF826B1C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF383800)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF707026)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF201B13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF151009)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3529)
            override val outlineLightMediumContrast = Color(0xFF5B5144)
            override val outlineVariantLightMediumContrast = Color(0xFF776B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFE2)
            override val inversePrimaryLightMediumContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCD0C4)
            override val primaryLightHighContrast = Color(0xFF3F2700)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF654200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF372B00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF594700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2E2E00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4C4C01)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF201B13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF332B20)
            override val outlineVariantLightHighContrast = Color(0xFF51483B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFE2)
            override val surfaceContainerLightHighContrast = Color(0xFFEDE0D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED2C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B9)
            override val primaryDark = Color(0xFFF3BD6E)
            override val onPrimaryDark = Color(0xFF442B00)
            override val primaryContainerDark = Color(0xFF624000)
            override val onPrimaryContainerDark = Color(0xFFFFDDB2)
            override val secondaryDark = Color(0xFFE1C46D)
            override val onSecondaryDark = Color(0xFF3C2F00)
            override val secondaryContainerDark = Color(0xFF574500)
            override val onSecondaryContainerDark = Color(0xFFFFE086)
            override val tertiaryDark = Color(0xFFCBCB76)
            override val onTertiaryDark = Color(0xFF323200)
            override val tertiaryContainerDark = Color(0xFF494900)
            override val onTertiaryContainerDark = Color(0xFFE8E78F)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF18120B)
            override val onBackgroundDark = Color(0xFFEDE0D4)
            override val surfaceDark = Color(0xFF18120B)
            override val onSurfaceDark = Color(0xFFEDE0D4)
            override val surfaceVariantDark = Color(0xFF4F4539)
            override val onSurfaceVariantDark = Color(0xFFD3C4B4)
            override val outlineDark = Color(0xFF9B8F80)
            override val outlineVariantDark = Color(0xFF4F4539)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDark = Color(0xFF362F27)
            override val inversePrimaryDark = Color(0xFF7F560F)
            override val surfaceDimDark = Color(0xFF18120B)
            override val surfaceBrightDark = Color(0xFF3F382F)
            override val surfaceContainerLowestDark = Color(0xFF120D07)
            override val surfaceContainerLowDark = Color(0xFF201B13)
            override val surfaceContainerDark = Color(0xFF251F17)
            override val surfaceContainerHighDark = Color(0xFF2F2921)
            override val surfaceContainerHighestDark = Color(0xFF3B342B)
            override val primaryDarkMediumContrast = Color(0xFFFFD69E)
            override val onPrimaryDarkMediumContrast = Color(0xFF362100)
            override val primaryContainerDarkMediumContrast = Color(0xFFB8883F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF8DA80)
            override val onSecondaryDarkMediumContrast = Color(0xFF2F2400)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA88E3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE2E18A)
            override val onTertiaryDarkMediumContrast = Color(0xFF272700)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF959446)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF18120B)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDE0D4)
            override val surfaceDarkMediumContrast = Color(0xFF18120B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9DAC9)
            override val outlineDarkMediumContrast = Color(0xFFBEB0A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF634100)
            override val surfaceDimDarkMediumContrast = Color(0xFF18120B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B433A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383129)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDD9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEFB96B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF130900)
            override val secondaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDDC069)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF100B00)
            override val tertiaryDarkHighContrast = Color(0xFFF6F59B)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC8C773)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0C0C00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF18120B)
            override val onBackgroundDarkHighContrast = Color(0xFFEDE0D4)
            override val surfaceDarkHighContrast = Color(0xFF18120B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFCFC0B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF634100)
            override val surfaceDimDarkHighContrast = Color(0xFF18120B)
            override val surfaceBrightDarkHighContrast = Color(0xFF574F46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251F17)
            override val surfaceContainerDarkHighContrast = Color(0xFF362F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF7F560F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDDB2)
            override val onPrimaryContainerLight = Color(0xFF624000)
            override val secondaryLight = Color(0xFF725C0C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFE086)
            override val onSecondaryContainerLight = Color(0xFF574500)
            override val tertiaryLight = Color(0xFF6B5E10)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF6E388)
            override val onTertiaryContainerLight = Color(0xFF524700)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF201B13)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF201B13)
            override val surfaceVariantLight = Color(0xFFEFE0CF)
            override val onSurfaceVariantLight = Color(0xFF4F4539)
            override val outlineLight = Color(0xFF817567)
            override val outlineVariantLight = Color(0xFFD3C4B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362F27)
            override val inverseOnSurfaceLight = Color(0xFFFBEFE2)
            override val inversePrimaryLight = Color(0xFFF3BD6E)
            override val surfaceDimLight = Color(0xFFE4D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E5)
            override val surfaceContainerLight = Color(0xFFF8ECDF)
            override val surfaceContainerHighLight = Color(0xFFF3E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEDE0D4)
            override val primaryLightMediumContrast = Color(0xFF4C3100)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF90651E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF433500)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF826B1C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3F3600)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7B6D1F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF201B13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF151009)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3529)
            override val outlineLightMediumContrast = Color(0xFF5B5144)
            override val outlineVariantLightMediumContrast = Color(0xFF776B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFE2)
            override val inversePrimaryLightMediumContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCD0C4)
            override val primaryLightHighContrast = Color(0xFF3F2700)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF654200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF372B00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF594700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF342C00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF544900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF201B13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF332B20)
            override val outlineVariantLightHighContrast = Color(0xFF51483B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFE2)
            override val surfaceContainerLightHighContrast = Color(0xFFEDE0D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED2C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B9)
            override val primaryDark = Color(0xFFF3BD6E)
            override val onPrimaryDark = Color(0xFF442B00)
            override val primaryContainerDark = Color(0xFF624000)
            override val onPrimaryContainerDark = Color(0xFFFFDDB2)
            override val secondaryDark = Color(0xFFE1C46D)
            override val onSecondaryDark = Color(0xFF3C2F00)
            override val secondaryContainerDark = Color(0xFF574500)
            override val onSecondaryContainerDark = Color(0xFFFFE086)
            override val tertiaryDark = Color(0xFFD8C76F)
            override val onTertiaryDark = Color(0xFF383000)
            override val tertiaryContainerDark = Color(0xFF524700)
            override val onTertiaryContainerDark = Color(0xFFF6E388)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF18120B)
            override val onBackgroundDark = Color(0xFFEDE0D4)
            override val surfaceDark = Color(0xFF18120B)
            override val onSurfaceDark = Color(0xFFEDE0D4)
            override val surfaceVariantDark = Color(0xFF4F4539)
            override val onSurfaceVariantDark = Color(0xFFD3C4B4)
            override val outlineDark = Color(0xFF9B8F80)
            override val outlineVariantDark = Color(0xFF4F4539)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDark = Color(0xFF362F27)
            override val inversePrimaryDark = Color(0xFF7F560F)
            override val surfaceDimDark = Color(0xFF18120B)
            override val surfaceBrightDark = Color(0xFF3F382F)
            override val surfaceContainerLowestDark = Color(0xFF120D07)
            override val surfaceContainerLowDark = Color(0xFF201B13)
            override val surfaceContainerDark = Color(0xFF251F17)
            override val surfaceContainerHighDark = Color(0xFF2F2921)
            override val surfaceContainerHighestDark = Color(0xFF3B342B)
            override val primaryDarkMediumContrast = Color(0xFFFFD69E)
            override val onPrimaryDarkMediumContrast = Color(0xFF362100)
            override val primaryContainerDarkMediumContrast = Color(0xFFB8883F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF8DA80)
            override val onSecondaryDarkMediumContrast = Color(0xFF2F2400)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA88E3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEFDD83)
            override val onTertiaryDarkMediumContrast = Color(0xFF2C2600)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA09140)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF18120B)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDE0D4)
            override val surfaceDarkMediumContrast = Color(0xFF18120B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9DAC9)
            override val outlineDarkMediumContrast = Color(0xFFBEB0A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF634100)
            override val surfaceDimDarkMediumContrast = Color(0xFF18120B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B433A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383129)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDD9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEFB96B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF130900)
            override val secondaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDDC069)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF100B00)
            override val tertiaryDarkHighContrast = Color(0xFFFFF0B0)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD4C36C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF18120B)
            override val onBackgroundDarkHighContrast = Color(0xFFEDE0D4)
            override val surfaceDarkHighContrast = Color(0xFF18120B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFCFC0B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF634100)
            override val surfaceDimDarkHighContrast = Color(0xFF18120B)
            override val surfaceBrightDarkHighContrast = Color(0xFF574F46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251F17)
            override val surfaceContainerDarkHighContrast = Color(0xFF362F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF7F560F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDDB2)
            override val onPrimaryContainerLight = Color(0xFF624000)
            override val secondaryLight = Color(0xFF615690)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE7DEFF)
            override val onSecondaryContainerLight = Color(0xFF493E76)
            override val tertiaryLight = Color(0xFF625690)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE7DEFF)
            override val onTertiaryContainerLight = Color(0xFF4A3E76)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF201B13)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF201B13)
            override val surfaceVariantLight = Color(0xFFEFE0CF)
            override val onSurfaceVariantLight = Color(0xFF4F4539)
            override val outlineLight = Color(0xFF817567)
            override val outlineVariantLight = Color(0xFFD3C4B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362F27)
            override val inverseOnSurfaceLight = Color(0xFFFBEFE2)
            override val inversePrimaryLight = Color(0xFFF3BD6E)
            override val surfaceDimLight = Color(0xFFE4D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E5)
            override val surfaceContainerLight = Color(0xFFF8ECDF)
            override val surfaceContainerHighLight = Color(0xFFF3E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEDE0D4)
            override val primaryLightMediumContrast = Color(0xFF4C3100)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF90651E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF382E64)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7065A0)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF392D64)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7165A0)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF201B13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF151009)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3529)
            override val outlineLightMediumContrast = Color(0xFF5B5144)
            override val outlineVariantLightMediumContrast = Color(0xFF776B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFE2)
            override val inversePrimaryLightMediumContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCD0C4)
            override val primaryLightHighContrast = Color(0xFF3F2700)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF654200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF2E235A)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4C4179)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2F235A)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4C4179)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF201B13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF332B20)
            override val outlineVariantLightHighContrast = Color(0xFF51483B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFE2)
            override val surfaceContainerLightHighContrast = Color(0xFFEDE0D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED2C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B9)
            override val primaryDark = Color(0xFFF3BD6E)
            override val onPrimaryDark = Color(0xFF442B00)
            override val primaryContainerDark = Color(0xFF624000)
            override val onPrimaryContainerDark = Color(0xFFFFDDB2)
            override val secondaryDark = Color(0xFFCBBEFF)
            override val onSecondaryDark = Color(0xFF33285E)
            override val secondaryContainerDark = Color(0xFF493E76)
            override val onSecondaryContainerDark = Color(0xFFE7DEFF)
            override val tertiaryDark = Color(0xFFCCBEFF)
            override val onTertiaryDark = Color(0xFF33275E)
            override val tertiaryContainerDark = Color(0xFF4A3E76)
            override val onTertiaryContainerDark = Color(0xFFE7DEFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF18120B)
            override val onBackgroundDark = Color(0xFFEDE0D4)
            override val surfaceDark = Color(0xFF18120B)
            override val onSurfaceDark = Color(0xFFEDE0D4)
            override val surfaceVariantDark = Color(0xFF4F4539)
            override val onSurfaceVariantDark = Color(0xFFD3C4B4)
            override val outlineDark = Color(0xFF9B8F80)
            override val outlineVariantDark = Color(0xFF4F4539)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDark = Color(0xFF362F27)
            override val inversePrimaryDark = Color(0xFF7F560F)
            override val surfaceDimDark = Color(0xFF18120B)
            override val surfaceBrightDark = Color(0xFF3F382F)
            override val surfaceContainerLowestDark = Color(0xFF120D07)
            override val surfaceContainerLowDark = Color(0xFF201B13)
            override val surfaceContainerDark = Color(0xFF251F17)
            override val surfaceContainerHighDark = Color(0xFF2F2921)
            override val surfaceContainerHighestDark = Color(0xFF3B342B)
            override val primaryDarkMediumContrast = Color(0xFFFFD69E)
            override val onPrimaryDarkMediumContrast = Color(0xFF362100)
            override val primaryContainerDarkMediumContrast = Color(0xFFB8883F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE0D7FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF281C53)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9488C6)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE1D7FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF281C53)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9588C6)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF18120B)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDE0D4)
            override val surfaceDarkMediumContrast = Color(0xFF18120B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9DAC9)
            override val outlineDarkMediumContrast = Color(0xFFBEB0A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF634100)
            override val surfaceDimDarkMediumContrast = Color(0xFF18120B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B433A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383129)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDD9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEFB96B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF130900)
            override val secondaryDarkHighContrast = Color(0xFFF4EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFC7BAFB)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0C0035)
            override val tertiaryDarkHighContrast = Color(0xFFF4EDFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC8BAFB)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0D0035)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF18120B)
            override val onBackgroundDarkHighContrast = Color(0xFFEDE0D4)
            override val surfaceDarkHighContrast = Color(0xFF18120B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFCFC0B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF634100)
            override val surfaceDimDarkHighContrast = Color(0xFF18120B)
            override val surfaceBrightDarkHighContrast = Color(0xFF574F46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251F17)
            override val surfaceContainerDarkHighContrast = Color(0xFF362F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF7F560F)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDDB2)
            override val onPrimaryContainerLight = Color(0xFF624000)
            override val secondaryLight = Color(0xFF725C0C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFE086)
            override val onSecondaryContainerLight = Color(0xFF574500)
            override val tertiaryLight = Color(0xFF006A6A)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF9CF1F0)
            override val onTertiaryContainerLight = Color(0xFF004F4F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF201B13)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF201B13)
            override val surfaceVariantLight = Color(0xFFEFE0CF)
            override val onSurfaceVariantLight = Color(0xFF4F4539)
            override val outlineLight = Color(0xFF817567)
            override val outlineVariantLight = Color(0xFFD3C4B4)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362F27)
            override val inverseOnSurfaceLight = Color(0xFFFBEFE2)
            override val inversePrimaryLight = Color(0xFFF3BD6E)
            override val surfaceDimLight = Color(0xFFE4D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF2E5)
            override val surfaceContainerLight = Color(0xFFF8ECDF)
            override val surfaceContainerHighLight = Color(0xFFF3E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEDE0D4)
            override val primaryLightMediumContrast = Color(0xFF4C3100)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF90651E)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF433500)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF826B1C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF003D3D)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF167979)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF201B13)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF151009)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3529)
            override val outlineLightMediumContrast = Color(0xFF5B5144)
            override val outlineVariantLightMediumContrast = Color(0xFF776B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEFE2)
            override val inversePrimaryLightMediumContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C5B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF2E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF3E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7DBCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDCD0C4)
            override val primaryLightHighContrast = Color(0xFF3F2700)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF654200)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF372B00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF594700)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003232)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF005252)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF201B13)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFE0CF)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF332B20)
            override val outlineVariantLightHighContrast = Color(0xFF51483B)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF3BD6E)
            override val surfaceDimLightHighContrast = Color(0xFFC2B7AB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEFE2)
            override val surfaceContainerLightHighContrast = Color(0xFFEDE0D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED2C6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C5B9)
            override val primaryDark = Color(0xFFF3BD6E)
            override val onPrimaryDark = Color(0xFF442B00)
            override val primaryContainerDark = Color(0xFF624000)
            override val onPrimaryContainerDark = Color(0xFFFFDDB2)
            override val secondaryDark = Color(0xFFE1C46D)
            override val onSecondaryDark = Color(0xFF3C2F00)
            override val secondaryContainerDark = Color(0xFF574500)
            override val onSecondaryContainerDark = Color(0xFFFFE086)
            override val tertiaryDark = Color(0xFF80D5D4)
            override val onTertiaryDark = Color(0xFF003737)
            override val tertiaryContainerDark = Color(0xFF004F4F)
            override val onTertiaryContainerDark = Color(0xFF9CF1F0)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF18120B)
            override val onBackgroundDark = Color(0xFFEDE0D4)
            override val surfaceDark = Color(0xFF18120B)
            override val onSurfaceDark = Color(0xFFEDE0D4)
            override val surfaceVariantDark = Color(0xFF4F4539)
            override val onSurfaceVariantDark = Color(0xFFD3C4B4)
            override val outlineDark = Color(0xFF9B8F80)
            override val outlineVariantDark = Color(0xFF4F4539)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDark = Color(0xFF362F27)
            override val inversePrimaryDark = Color(0xFF7F560F)
            override val surfaceDimDark = Color(0xFF18120B)
            override val surfaceBrightDark = Color(0xFF3F382F)
            override val surfaceContainerLowestDark = Color(0xFF120D07)
            override val surfaceContainerLowDark = Color(0xFF201B13)
            override val surfaceContainerDark = Color(0xFF251F17)
            override val surfaceContainerHighDark = Color(0xFF2F2921)
            override val surfaceContainerHighestDark = Color(0xFF3B342B)
            override val primaryDarkMediumContrast = Color(0xFFFFD69E)
            override val onPrimaryDarkMediumContrast = Color(0xFF362100)
            override val primaryContainerDarkMediumContrast = Color(0xFFB8883F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF8DA80)
            override val onSecondaryDarkMediumContrast = Color(0xFF2F2400)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA88E3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF96EBEA)
            override val onTertiaryDarkMediumContrast = Color(0xFF002B2B)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF479E9D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF18120B)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDE0D4)
            override val surfaceDarkMediumContrast = Color(0xFF18120B)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9DAC9)
            override val outlineDarkMediumContrast = Color(0xFFBEB0A0)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F2921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF634100)
            override val surfaceDimDarkMediumContrast = Color(0xFF18120B)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B433A)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF221D15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D271F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383129)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDD9)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFEFB96B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF130900)
            override val secondaryDarkHighContrast = Color(0xFFFFEFC7)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFDDC069)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF100B00)
            override val tertiaryDarkHighContrast = Color(0xFFAAFFFE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF7CD1D0)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000E0E)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF18120B)
            override val onBackgroundDarkHighContrast = Color(0xFFEDE0D4)
            override val surfaceDarkHighContrast = Color(0xFF18120B)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F4539)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEDDC)
            override val outlineVariantDarkHighContrast = Color(0xFFCFC0B0)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDE0D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF634100)
            override val surfaceDimDarkHighContrast = Color(0xFF18120B)
            override val surfaceBrightDarkHighContrast = Color(0xFF574F46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251F17)
            override val surfaceContainerDarkHighContrast = Color(0xFF362F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF413A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D463D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}