package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroBrown : ComposeTheme.Group {

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("brown", "Brown")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF845416)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDCBB)
            override val onPrimaryContainerLight = Color(0xFF673D00)
            override val secondaryLight = Color(0xFF7B580C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDEA8)
            override val onSecondaryContainerLight = Color(0xFF5E4200)
            override val tertiaryLight = Color(0xFF6B5E10)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF5E388)
            override val onTertiaryContainerLight = Color(0xFF514700)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF211A14)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF211A14)
            override val surfaceVariantLight = Color(0xFFF1DFD0)
            override val onSurfaceVariantLight = Color(0xFF50453A)
            override val outlineLight = Color(0xFF827568)
            override val outlineVariantLight = Color(0xFFD4C4B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372F27)
            override val inverseOnSurfaceLight = Color(0xFFFDEEE3)
            override val inversePrimaryLight = Color(0xFFFABA73)
            override val surfaceDimLight = Color(0xFFE6D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E7)
            override val surfaceContainerLight = Color(0xFFFAEBE0)
            override val surfaceContainerHighLight = Color(0xFFF4E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEEE0D5)
            override val primaryLightMediumContrast = Color(0xFF502E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF956224)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF493200)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8B671C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3F3600)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7B6D1F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF211A14)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF16100A)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F342A)
            override val outlineLightMediumContrast = Color(0xFF5C5045)
            override val outlineVariantLightMediumContrast = Color(0xFF786B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEEE3)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABA73)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C4B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFF4E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8DACF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDDCFC4)
            override val primaryLightHighContrast = Color(0xFF422500)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6B3F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3C2900)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF614400)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF332C00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF544900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF211A14)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A20)
            override val outlineVariantLightHighContrast = Color(0xFF53473C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABA73)
            override val surfaceDimLightHighContrast = Color(0xFFC3B6AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEEE3)
            override val surfaceContainerLightHighContrast = Color(0xFFEEE0D5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D2C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C4B9)
            override val primaryDark = Color(0xFFFABA73)
            override val onPrimaryDark = Color(0xFF482900)
            override val primaryContainerDark = Color(0xFF673D00)
            override val onPrimaryContainerDark = Color(0xFFFFDCBB)
            override val secondaryDark = Color(0xFFEEBF6D)
            override val onSecondaryDark = Color(0xFF422D00)
            override val secondaryContainerDark = Color(0xFF5E4200)
            override val onSecondaryContainerDark = Color(0xFFFFDEA8)
            override val tertiaryDark = Color(0xFFD8C770)
            override val onTertiaryDark = Color(0xFF383000)
            override val tertiaryContainerDark = Color(0xFF514700)
            override val onTertiaryContainerDark = Color(0xFFF5E388)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120C)
            override val onBackgroundDark = Color(0xFFEEE0D5)
            override val surfaceDark = Color(0xFF19120C)
            override val onSurfaceDark = Color(0xFFEEE0D5)
            override val surfaceVariantDark = Color(0xFF50453A)
            override val onSurfaceVariantDark = Color(0xFFD4C4B5)
            override val outlineDark = Color(0xFF9D8E81)
            override val outlineVariantDark = Color(0xFF50453A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDark = Color(0xFF372F27)
            override val inversePrimaryDark = Color(0xFF845416)
            override val surfaceDimDark = Color(0xFF19120C)
            override val surfaceBrightDark = Color(0xFF403830)
            override val surfaceContainerLowestDark = Color(0xFF130D07)
            override val surfaceContainerLowDark = Color(0xFF211A14)
            override val surfaceContainerDark = Color(0xFF251E17)
            override val surfaceContainerHighDark = Color(0xFF302921)
            override val surfaceContainerHighestDark = Color(0xFF3B332C)
            override val primaryDarkMediumContrast = Color(0xFFFFD5AB)
            override val onPrimaryDarkMediumContrast = Color(0xFF392000)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE8544)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD792)
            override val onSecondaryDarkMediumContrast = Color(0xFF342200)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB38A3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEFDD83)
            override val onTertiaryDarkMediumContrast = Color(0xFF2C2600)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA09140)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120C)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEE0D5)
            override val surfaceDarkMediumContrast = Color(0xFF19120C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD9CA)
            override val outlineDarkMediumContrast = Color(0xFFBFAFA1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF693E00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C433B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF39312A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF6B66F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF150800)
            override val secondaryDarkHighContrast = Color(0xFFFFEED5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFE9BC69)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF120A00)
            override val tertiaryDarkHighContrast = Color(0xFFFFF1AE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD4C36C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120C)
            override val onBackgroundDarkHighContrast = Color(0xFFEEE0D5)
            override val surfaceDarkHighContrast = Color(0xFF19120C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDE)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C0B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF693E00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120C)
            override val surfaceBrightDarkHighContrast = Color(0xFF584E46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF372F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E453D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF845416)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDCBB)
            override val onPrimaryContainerLight = Color(0xFF673D00)
            override val secondaryLight = Color(0xFF7B580C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDEA8)
            override val onSecondaryContainerLight = Color(0xFF5E4200)
            override val tertiaryLight = Color(0xFF765B0B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDF98)
            override val onTertiaryContainerLight = Color(0xFF5A4300)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF211A14)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF211A14)
            override val surfaceVariantLight = Color(0xFFF1DFD0)
            override val onSurfaceVariantLight = Color(0xFF50453A)
            override val outlineLight = Color(0xFF827568)
            override val outlineVariantLight = Color(0xFFD4C4B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372F27)
            override val inverseOnSurfaceLight = Color(0xFFFDEEE3)
            override val inversePrimaryLight = Color(0xFFFABA73)
            override val surfaceDimLight = Color(0xFFE6D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E7)
            override val surfaceContainerLight = Color(0xFFFAEBE0)
            override val surfaceContainerHighLight = Color(0xFFF4E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEEE0D5)
            override val primaryLightMediumContrast = Color(0xFF502E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF956224)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF493200)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8B671C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF453400)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF86691C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF211A14)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF16100A)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F342A)
            override val outlineLightMediumContrast = Color(0xFF5C5045)
            override val outlineVariantLightMediumContrast = Color(0xFF786B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEEE3)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABA73)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C4B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFF4E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8DACF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDDCFC4)
            override val primaryLightHighContrast = Color(0xFF422500)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6B3F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3C2900)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF614400)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF392A00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5D4600)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF211A14)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A20)
            override val outlineVariantLightHighContrast = Color(0xFF53473C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABA73)
            override val surfaceDimLightHighContrast = Color(0xFFC3B6AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEEE3)
            override val surfaceContainerLightHighContrast = Color(0xFFEEE0D5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D2C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C4B9)
            override val primaryDark = Color(0xFFFABA73)
            override val onPrimaryDark = Color(0xFF482900)
            override val primaryContainerDark = Color(0xFF673D00)
            override val onPrimaryContainerDark = Color(0xFFFFDCBB)
            override val secondaryDark = Color(0xFFEEBF6D)
            override val onSecondaryDark = Color(0xFF422D00)
            override val secondaryContainerDark = Color(0xFF5E4200)
            override val onSecondaryContainerDark = Color(0xFFFFDEA8)
            override val tertiaryDark = Color(0xFFE7C26C)
            override val onTertiaryDark = Color(0xFF3E2E00)
            override val tertiaryContainerDark = Color(0xFF5A4300)
            override val onTertiaryContainerDark = Color(0xFFFFDF98)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120C)
            override val onBackgroundDark = Color(0xFFEEE0D5)
            override val surfaceDark = Color(0xFF19120C)
            override val onSurfaceDark = Color(0xFFEEE0D5)
            override val surfaceVariantDark = Color(0xFF50453A)
            override val onSurfaceVariantDark = Color(0xFFD4C4B5)
            override val outlineDark = Color(0xFF9D8E81)
            override val outlineVariantDark = Color(0xFF50453A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDark = Color(0xFF372F27)
            override val inversePrimaryDark = Color(0xFF845416)
            override val surfaceDimDark = Color(0xFF19120C)
            override val surfaceBrightDark = Color(0xFF403830)
            override val surfaceContainerLowestDark = Color(0xFF130D07)
            override val surfaceContainerLowDark = Color(0xFF211A14)
            override val surfaceContainerDark = Color(0xFF251E17)
            override val surfaceContainerHighDark = Color(0xFF302921)
            override val surfaceContainerHighestDark = Color(0xFF3B332C)
            override val primaryDarkMediumContrast = Color(0xFFFFD5AB)
            override val onPrimaryDarkMediumContrast = Color(0xFF392000)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE8544)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD792)
            override val onSecondaryDarkMediumContrast = Color(0xFF342200)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB38A3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFED87F)
            override val onTertiaryDarkMediumContrast = Color(0xFF312400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFAD8D3D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120C)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEE0D5)
            override val surfaceDarkMediumContrast = Color(0xFF19120C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD9CA)
            override val outlineDarkMediumContrast = Color(0xFFBFAFA1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF693E00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C433B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF39312A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF6B66F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF150800)
            override val secondaryDarkHighContrast = Color(0xFFFFEED5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFE9BC69)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF120A00)
            override val tertiaryDarkHighContrast = Color(0xFFFFEECF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE2BE69)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF110A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120C)
            override val onBackgroundDarkHighContrast = Color(0xFFEEE0D5)
            override val surfaceDarkHighContrast = Color(0xFF19120C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDE)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C0B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF693E00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120C)
            override val surfaceBrightDarkHighContrast = Color(0xFF584E46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF372F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E453D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF845416)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDCBB)
            override val onPrimaryContainerLight = Color(0xFF673D00)
            override val secondaryLight = Color(0xFF525A92)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFDEE0FF)
            override val onSecondaryContainerLight = Color(0xFF3A4379)
            override val tertiaryLight = Color(0xFF525A92)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDEE0FF)
            override val onTertiaryContainerLight = Color(0xFF3A4379)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF211A14)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF211A14)
            override val surfaceVariantLight = Color(0xFFF1DFD0)
            override val onSurfaceVariantLight = Color(0xFF50453A)
            override val outlineLight = Color(0xFF827568)
            override val outlineVariantLight = Color(0xFFD4C4B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372F27)
            override val inverseOnSurfaceLight = Color(0xFFFDEEE3)
            override val inversePrimaryLight = Color(0xFFFABA73)
            override val surfaceDimLight = Color(0xFFE6D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E7)
            override val surfaceContainerLight = Color(0xFFFAEBE0)
            override val surfaceContainerHighLight = Color(0xFFF4E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEEE0D5)
            override val primaryLightMediumContrast = Color(0xFF502E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF956224)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF293267)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF6169A2)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF293267)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6069A2)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF211A14)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF16100A)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F342A)
            override val outlineLightMediumContrast = Color(0xFF5C5045)
            override val outlineVariantLightMediumContrast = Color(0xFF786B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEEE3)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABA73)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C4B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFF4E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8DACF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDDCFC4)
            override val primaryLightHighContrast = Color(0xFF422500)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6B3F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF1F275C)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF3D457B)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF1E275C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3C457B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF211A14)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A20)
            override val outlineVariantLightHighContrast = Color(0xFF53473C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABA73)
            override val surfaceDimLightHighContrast = Color(0xFFC3B6AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEEE3)
            override val surfaceContainerLightHighContrast = Color(0xFFEEE0D5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D2C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C4B9)
            override val primaryDark = Color(0xFFFABA73)
            override val onPrimaryDark = Color(0xFF482900)
            override val primaryContainerDark = Color(0xFF673D00)
            override val onPrimaryContainerDark = Color(0xFFFFDCBB)
            override val secondaryDark = Color(0xFFBBC3FF)
            override val onSecondaryDark = Color(0xFF232C61)
            override val secondaryContainerDark = Color(0xFF3A4379)
            override val onSecondaryContainerDark = Color(0xFFDEE0FF)
            override val tertiaryDark = Color(0xFFBBC3FF)
            override val onTertiaryDark = Color(0xFF232C61)
            override val tertiaryContainerDark = Color(0xFF3A4379)
            override val onTertiaryContainerDark = Color(0xFFDEE0FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120C)
            override val onBackgroundDark = Color(0xFFEEE0D5)
            override val surfaceDark = Color(0xFF19120C)
            override val onSurfaceDark = Color(0xFFEEE0D5)
            override val surfaceVariantDark = Color(0xFF50453A)
            override val onSurfaceVariantDark = Color(0xFFD4C4B5)
            override val outlineDark = Color(0xFF9D8E81)
            override val outlineVariantDark = Color(0xFF50453A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDark = Color(0xFF372F27)
            override val inversePrimaryDark = Color(0xFF845416)
            override val surfaceDimDark = Color(0xFF19120C)
            override val surfaceBrightDark = Color(0xFF403830)
            override val surfaceContainerLowestDark = Color(0xFF130D07)
            override val surfaceContainerLowDark = Color(0xFF211A14)
            override val surfaceContainerDark = Color(0xFF251E17)
            override val surfaceContainerHighDark = Color(0xFF302921)
            override val surfaceContainerHighestDark = Color(0xFF3B332C)
            override val primaryDarkMediumContrast = Color(0xFFFFD5AB)
            override val onPrimaryDarkMediumContrast = Color(0xFF392000)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE8544)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onSecondaryDarkMediumContrast = Color(0xFF182055)
            override val secondaryContainerDarkMediumContrast = Color(0xFF858DC8)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD7DAFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF172055)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF848DC8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120C)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEE0D5)
            override val surfaceDarkMediumContrast = Color(0xFF19120C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD9CA)
            override val outlineDarkMediumContrast = Color(0xFFBFAFA1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF693E00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C433B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF39312A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF6B66F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF150800)
            override val secondaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB7BFFD)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000433)
            override val tertiaryDarkHighContrast = Color(0xFFEFEEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB6BFFD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000533)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120C)
            override val onBackgroundDarkHighContrast = Color(0xFFEEE0D5)
            override val surfaceDarkHighContrast = Color(0xFF19120C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDE)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C0B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF693E00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120C)
            override val surfaceBrightDarkHighContrast = Color(0xFF584E46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF372F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E453D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF845416)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDCBB)
            override val onPrimaryContainerLight = Color(0xFF673D00)
            override val secondaryLight = Color(0xFF7B580C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDEA8)
            override val onSecondaryContainerLight = Color(0xFF5E4200)
            override val tertiaryLight = Color(0xFF34693F)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFB6F1BB)
            override val onTertiaryContainerLight = Color(0xFF1B5129)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F4)
            override val onBackgroundLight = Color(0xFF211A14)
            override val surfaceLight = Color(0xFFFFF8F4)
            override val onSurfaceLight = Color(0xFF211A14)
            override val surfaceVariantLight = Color(0xFFF1DFD0)
            override val onSurfaceVariantLight = Color(0xFF50453A)
            override val outlineLight = Color(0xFF827568)
            override val outlineVariantLight = Color(0xFFD4C4B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF372F27)
            override val inverseOnSurfaceLight = Color(0xFFFDEEE3)
            override val inversePrimaryLight = Color(0xFFFABA73)
            override val surfaceDimLight = Color(0xFFE6D8CC)
            override val surfaceBrightLight = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1E7)
            override val surfaceContainerLight = Color(0xFFFAEBE0)
            override val surfaceContainerHighLight = Color(0xFFF4E6DA)
            override val surfaceContainerHighestLight = Color(0xFFEEE0D5)
            override val primaryLightMediumContrast = Color(0xFF502E00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF956224)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF493200)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8B671C)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF053F1A)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF43784C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightMediumContrast = Color(0xFF211A14)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightMediumContrast = Color(0xFF16100A)
            override val surfaceVariantLightMediumContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3F342A)
            override val outlineLightMediumContrast = Color(0xFF5C5045)
            override val outlineVariantLightMediumContrast = Color(0xFF786B5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFDEEE3)
            override val inversePrimaryLightMediumContrast = Color(0xFFFABA73)
            override val surfaceDimLightMediumContrast = Color(0xFFD1C4B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1E7)
            override val surfaceContainerLightMediumContrast = Color(0xFFF4E6DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE8DACF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDDCFC4)
            override val primaryLightHighContrast = Color(0xFF422500)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6B3F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF3C2900)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF614400)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF003413)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF1E532B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F4)
            override val onBackgroundLightHighContrast = Color(0xFF211A14)
            override val surfaceLightHighContrast = Color(0xFFFFF8F4)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF1DFD0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF342A20)
            override val outlineVariantLightHighContrast = Color(0xFF53473C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF372F27)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFABA73)
            override val surfaceDimLightHighContrast = Color(0xFFC3B6AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F4)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFDEEE3)
            override val surfaceContainerLightHighContrast = Color(0xFFEEE0D5)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE0D2C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD1C4B9)
            override val primaryDark = Color(0xFFFABA73)
            override val onPrimaryDark = Color(0xFF482900)
            override val primaryContainerDark = Color(0xFF673D00)
            override val onPrimaryContainerDark = Color(0xFFFFDCBB)
            override val secondaryDark = Color(0xFFEEBF6D)
            override val onSecondaryDark = Color(0xFF422D00)
            override val secondaryContainerDark = Color(0xFF5E4200)
            override val onSecondaryContainerDark = Color(0xFFFFDEA8)
            override val tertiaryDark = Color(0xFF9BD4A0)
            override val onTertiaryDark = Color(0xFF003915)
            override val tertiaryContainerDark = Color(0xFF1B5129)
            override val onTertiaryContainerDark = Color(0xFFB6F1BB)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF19120C)
            override val onBackgroundDark = Color(0xFFEEE0D5)
            override val surfaceDark = Color(0xFF19120C)
            override val onSurfaceDark = Color(0xFFEEE0D5)
            override val surfaceVariantDark = Color(0xFF50453A)
            override val onSurfaceVariantDark = Color(0xFFD4C4B5)
            override val outlineDark = Color(0xFF9D8E81)
            override val outlineVariantDark = Color(0xFF50453A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDark = Color(0xFF372F27)
            override val inversePrimaryDark = Color(0xFF845416)
            override val surfaceDimDark = Color(0xFF19120C)
            override val surfaceBrightDark = Color(0xFF403830)
            override val surfaceContainerLowestDark = Color(0xFF130D07)
            override val surfaceContainerLowDark = Color(0xFF211A14)
            override val surfaceContainerDark = Color(0xFF251E17)
            override val surfaceContainerHighDark = Color(0xFF302921)
            override val surfaceContainerHighestDark = Color(0xFF3B332C)
            override val primaryDarkMediumContrast = Color(0xFFFFD5AB)
            override val onPrimaryDarkMediumContrast = Color(0xFF392000)
            override val primaryContainerDarkMediumContrast = Color(0xFFBE8544)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD792)
            override val onSecondaryDarkMediumContrast = Color(0xFF342200)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB38A3D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFB0EAB5)
            override val onTertiaryDarkMediumContrast = Color(0xFF002D0F)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF669D6E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF19120C)
            override val onBackgroundDarkMediumContrast = Color(0xFFEEE0D5)
            override val surfaceDarkMediumContrast = Color(0xFF19120C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEBD9CA)
            override val outlineDarkMediumContrast = Color(0xFFBFAFA1)
            override val outlineVariantDarkMediumContrast = Color(0xFF9D8E80)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF302921)
            override val inversePrimaryDarkMediumContrast = Color(0xFF693E00)
            override val surfaceDimDarkMediumContrast = Color(0xFF19120C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4C433B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0C0603)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2E261F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF39312A)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF453C34)
            override val primaryDarkHighContrast = Color(0xFFFFEDDE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF6B66F)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF150800)
            override val secondaryDarkHighContrast = Color(0xFFFFEED5)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFE9BC69)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF120A00)
            override val tertiaryDarkHighContrast = Color(0xFFC3FFC8)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF97D09D)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000F03)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF19120C)
            override val onBackgroundDarkHighContrast = Color(0xFFEEE0D5)
            override val surfaceDarkHighContrast = Color(0xFF19120C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF50453A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFEDDE)
            override val outlineVariantDarkHighContrast = Color(0xFFD0C0B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEEE0D5)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF693E00)
            override val surfaceDimDarkHighContrast = Color(0xFF19120C)
            override val surfaceBrightDarkHighContrast = Color(0xFF584E46)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E17)
            override val surfaceContainerDarkHighContrast = Color(0xFF372F27)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF423A32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4E453D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}