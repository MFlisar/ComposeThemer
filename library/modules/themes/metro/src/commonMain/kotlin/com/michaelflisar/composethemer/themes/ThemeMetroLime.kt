package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroLime : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF576422)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDAEA99)
            override val onPrimaryContainerLight = Color(0xFF3F4C0A)
            override val secondaryLight = Color(0xFF596420)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFDDEA96)
            override val onSecondaryContainerLight = Color(0xFF414B07)
            override val tertiaryLight = Color(0xFF436833)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC3EFAC)
            override val onTertiaryContainerLight = Color(0xFF2C4F1E)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBFAED)
            override val onBackgroundLight = Color(0xFF1B1C15)
            override val surfaceLight = Color(0xFFFBFAED)
            override val onSurfaceLight = Color(0xFF1B1C15)
            override val surfaceVariantLight = Color(0xFFE3E4D3)
            override val onSurfaceVariantLight = Color(0xFF46483C)
            override val outlineLight = Color(0xFF77786A)
            override val outlineVariantLight = Color(0xFFC7C8B8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303129)
            override val inverseOnSurfaceLight = Color(0xFFF2F1E5)
            override val inversePrimaryLight = Color(0xFFBECE7F)
            override val surfaceDimLight = Color(0xFFDBDBCE)
            override val surfaceBrightLight = Color(0xFFFBFAED)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F4E8)
            override val surfaceContainerLight = Color(0xFFEFEEE2)
            override val surfaceContainerHighLight = Color(0xFFEAE9DC)
            override val surfaceContainerHighestLight = Color(0xFFE4E3D7)
            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF65732F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF67732D)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF1B3E0E)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF517740)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBFAED)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C15)
            override val surfaceLightMediumContrast = Color(0xFFFBFAED)
            override val onSurfaceLightMediumContrast = Color(0xFF11120B)
            override val surfaceVariantLightMediumContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF35372C)
            override val outlineLightMediumContrast = Color(0xFF525447)
            override val outlineVariantLightMediumContrast = Color(0xFF6D6E61)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F1E5)
            override val inversePrimaryLightMediumContrast = Color(0xFFBECE7F)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C7BB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F4E8)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE9DC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDDD1)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D2C6)
            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF424E0D)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF444E0A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF113305)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF2E5220)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBFAED)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C15)
            override val surfaceLightHighContrast = Color(0xFFFBFAED)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2B2D22)
            override val outlineVariantLightHighContrast = Color(0xFF484A3E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBECE7F)
            override val surfaceDimLightHighContrast = Color(0xFFBAB9AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F1E5)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E3D7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D5C9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C7BB)
            override val primaryDark = Color(0xFFBECE7F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFF3F4C0A)
            override val onPrimaryContainerDark = Color(0xFFDAEA99)
            override val secondaryDark = Color(0xFFC1CD7D)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF414B07)
            override val onSecondaryContainerDark = Color(0xFFDDEA96)
            override val tertiaryDark = Color(0xFFA8D292)
            override val onTertiaryDark = Color(0xFF153808)
            override val tertiaryContainerDark = Color(0xFF2C4F1E)
            override val onTertiaryContainerDark = Color(0xFFC3EFAC)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF13140D)
            override val onBackgroundDark = Color(0xFFE4E3D7)
            override val surfaceDark = Color(0xFF13140D)
            override val onSurfaceDark = Color(0xFFE4E3D7)
            override val surfaceVariantDark = Color(0xFF46483C)
            override val onSurfaceVariantDark = Color(0xFFC7C8B8)
            override val outlineDark = Color(0xFF919283)
            override val outlineVariantDark = Color(0xFF46483C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDark = Color(0xFF303129)
            override val inversePrimaryDark = Color(0xFF576422)
            override val surfaceDimDark = Color(0xFF13140D)
            override val surfaceBrightDark = Color(0xFF393A31)
            override val surfaceContainerLowestDark = Color(0xFF0E0F08)
            override val surfaceContainerLowDark = Color(0xFF1B1C15)
            override val surfaceContainerDark = Color(0xFF1F2019)
            override val surfaceContainerHighDark = Color(0xFF292B23)
            override val surfaceContainerHighestDark = Color(0xFF34352D)
            override val primaryDarkMediumContrast = Color(0xFFD4E493)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFF89974F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD7E491)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8B974D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFBDE9A7)
            override val onTertiaryDarkMediumContrast = Color(0xFF0A2C01)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF749B61)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF13140D)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E3D7)
            override val surfaceDarkMediumContrast = Color(0xFF13140D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDDDDCD)
            override val outlineDarkMediumContrast = Color(0xFFB2B3A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF909183)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2B23)
            override val inversePrimaryDarkMediumContrast = Color(0xFF414D0B)
            override val surfaceDimDarkMediumContrast = Color(0xFF13140D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44453C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E17)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272921)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF32332B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E36)
            override val primaryDarkHighContrast = Color(0xFFE7F8A5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFBACA7C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFEAF7A3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFBDCA7A)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFD1FDB9)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFA4CE8F)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF020F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF13140D)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E3D7)
            override val surfaceDarkHighContrast = Color(0xFF13140D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF1F1E0)
            override val outlineVariantDarkHighContrast = Color(0xFFC3C4B4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF414D0B)
            override val surfaceDimDarkHighContrast = Color(0xFF13140D)
            override val surfaceBrightDarkHighContrast = Color(0xFF505148)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2019)
            override val surfaceContainerDarkHighContrast = Color(0xFF303129)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3C33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF47473E)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF576422)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDAEA99)
            override val onPrimaryContainerLight = Color(0xFF3F4C0A)
            override val secondaryLight = Color(0xFF596420)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFDDEA96)
            override val onSecondaryContainerLight = Color(0xFF414B07)
            override val tertiaryLight = Color(0xFF5A631F)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDEEA96)
            override val onTertiaryContainerLight = Color(0xFF424B06)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBFAED)
            override val onBackgroundLight = Color(0xFF1B1C15)
            override val surfaceLight = Color(0xFFFBFAED)
            override val onSurfaceLight = Color(0xFF1B1C15)
            override val surfaceVariantLight = Color(0xFFE3E4D3)
            override val onSurfaceVariantLight = Color(0xFF46483C)
            override val outlineLight = Color(0xFF77786A)
            override val outlineVariantLight = Color(0xFFC7C8B8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303129)
            override val inverseOnSurfaceLight = Color(0xFFF2F1E5)
            override val inversePrimaryLight = Color(0xFFBECE7F)
            override val surfaceDimLight = Color(0xFFDBDBCE)
            override val surfaceBrightLight = Color(0xFFFBFAED)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F4E8)
            override val surfaceContainerLight = Color(0xFFEFEEE2)
            override val surfaceContainerHighLight = Color(0xFFEAE9DC)
            override val surfaceContainerHighestLight = Color(0xFFE4E3D7)
            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF65732F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF67732D)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF323A00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF68722C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBFAED)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C15)
            override val surfaceLightMediumContrast = Color(0xFFFBFAED)
            override val onSurfaceLightMediumContrast = Color(0xFF11120B)
            override val surfaceVariantLightMediumContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF35372C)
            override val outlineLightMediumContrast = Color(0xFF525447)
            override val outlineVariantLightMediumContrast = Color(0xFF6D6E61)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F1E5)
            override val inversePrimaryLightMediumContrast = Color(0xFFBECE7F)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C7BB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F4E8)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE9DC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDDD1)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D2C6)
            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF424E0D)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF444E0A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF292F00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF454E09)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBFAED)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C15)
            override val surfaceLightHighContrast = Color(0xFFFBFAED)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2B2D22)
            override val outlineVariantLightHighContrast = Color(0xFF484A3E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBECE7F)
            override val surfaceDimLightHighContrast = Color(0xFFBAB9AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F1E5)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E3D7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D5C9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C7BB)
            override val primaryDark = Color(0xFFBECE7F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFF3F4C0A)
            override val onPrimaryContainerDark = Color(0xFFDAEA99)
            override val secondaryDark = Color(0xFFC1CD7D)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF414B07)
            override val onSecondaryContainerDark = Color(0xFFDDEA96)
            override val tertiaryDark = Color(0xFFC2CD7C)
            override val onTertiaryDark = Color(0xFF2D3400)
            override val tertiaryContainerDark = Color(0xFF424B06)
            override val onTertiaryContainerDark = Color(0xFFDEEA96)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF13140D)
            override val onBackgroundDark = Color(0xFFE4E3D7)
            override val surfaceDark = Color(0xFF13140D)
            override val onSurfaceDark = Color(0xFFE4E3D7)
            override val surfaceVariantDark = Color(0xFF46483C)
            override val onSurfaceVariantDark = Color(0xFFC7C8B8)
            override val outlineDark = Color(0xFF919283)
            override val outlineVariantDark = Color(0xFF46483C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDark = Color(0xFF303129)
            override val inversePrimaryDark = Color(0xFF576422)
            override val surfaceDimDark = Color(0xFF13140D)
            override val surfaceBrightDark = Color(0xFF393A31)
            override val surfaceContainerLowestDark = Color(0xFF0E0F08)
            override val surfaceContainerLowDark = Color(0xFF1B1C15)
            override val surfaceContainerDark = Color(0xFF1F2019)
            override val surfaceContainerHighDark = Color(0xFF292B23)
            override val surfaceContainerHighestDark = Color(0xFF34352D)
            override val primaryDarkMediumContrast = Color(0xFFD4E493)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFF89974F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD7E491)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8B974D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD8E390)
            override val onTertiaryDarkMediumContrast = Color(0xFF232800)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF8C974C)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF13140D)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E3D7)
            override val surfaceDarkMediumContrast = Color(0xFF13140D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDDDDCD)
            override val outlineDarkMediumContrast = Color(0xFFB2B3A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF909183)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2B23)
            override val inversePrimaryDarkMediumContrast = Color(0xFF414D0B)
            override val surfaceDimDarkMediumContrast = Color(0xFF13140D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44453C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E17)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272921)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF32332B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E36)
            override val primaryDarkHighContrast = Color(0xFFE7F8A5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFBACA7C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFEAF7A3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFBDCA7A)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFEBF7A2)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFBEC979)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0A0D00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF13140D)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E3D7)
            override val surfaceDarkHighContrast = Color(0xFF13140D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF1F1E0)
            override val outlineVariantDarkHighContrast = Color(0xFFC3C4B4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF414D0B)
            override val surfaceDimDarkHighContrast = Color(0xFF13140D)
            override val surfaceBrightDarkHighContrast = Color(0xFF505148)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2019)
            override val surfaceContainerDarkHighContrast = Color(0xFF303129)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3C33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF47473E)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF576422)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDAEA99)
            override val onPrimaryContainerLight = Color(0xFF3F4C0A)
            override val secondaryLight = Color(0xFF7C4E7E)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD6FC)
            override val onSecondaryContainerLight = Color(0xFF623765)
            override val tertiaryLight = Color(0xFF7C4E7E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD6FC)
            override val onTertiaryContainerLight = Color(0xFF623765)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBFAED)
            override val onBackgroundLight = Color(0xFF1B1C15)
            override val surfaceLight = Color(0xFFFBFAED)
            override val onSurfaceLight = Color(0xFF1B1C15)
            override val surfaceVariantLight = Color(0xFFE3E4D3)
            override val onSurfaceVariantLight = Color(0xFF46483C)
            override val outlineLight = Color(0xFF77786A)
            override val outlineVariantLight = Color(0xFFC7C8B8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303129)
            override val inverseOnSurfaceLight = Color(0xFFF2F1E5)
            override val inversePrimaryLight = Color(0xFFBECE7F)
            override val surfaceDimLight = Color(0xFFDBDBCE)
            override val surfaceBrightLight = Color(0xFFFBFAED)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F4E8)
            override val surfaceContainerLight = Color(0xFFEFEEE2)
            override val surfaceContainerHighLight = Color(0xFFEAE9DC)
            override val surfaceContainerHighestLight = Color(0xFFE4E3D7)
            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF65732F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF502653)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8C5C8E)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF502653)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8C5C8D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBFAED)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C15)
            override val surfaceLightMediumContrast = Color(0xFFFBFAED)
            override val onSurfaceLightMediumContrast = Color(0xFF11120B)
            override val surfaceVariantLightMediumContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF35372C)
            override val outlineLightMediumContrast = Color(0xFF525447)
            override val outlineVariantLightMediumContrast = Color(0xFF6D6E61)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F1E5)
            override val inversePrimaryLightMediumContrast = Color(0xFFBECE7F)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C7BB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F4E8)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE9DC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDDD1)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D2C6)
            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF424E0D)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF441B48)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF653968)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF451B48)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF653967)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBFAED)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C15)
            override val surfaceLightHighContrast = Color(0xFFFBFAED)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2B2D22)
            override val outlineVariantLightHighContrast = Color(0xFF484A3E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBECE7F)
            override val surfaceDimLightHighContrast = Color(0xFFBAB9AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F1E5)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E3D7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D5C9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C7BB)
            override val primaryDark = Color(0xFFBECE7F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFF3F4C0A)
            override val onPrimaryContainerDark = Color(0xFFDAEA99)
            override val secondaryDark = Color(0xFFECB4EB)
            override val onSecondaryDark = Color(0xFF49204D)
            override val secondaryContainerDark = Color(0xFF623765)
            override val onSecondaryContainerDark = Color(0xFFFFD6FC)
            override val tertiaryDark = Color(0xFFEDB4EB)
            override val onTertiaryDark = Color(0xFF49204D)
            override val tertiaryContainerDark = Color(0xFF623765)
            override val onTertiaryContainerDark = Color(0xFFFFD6FC)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF13140D)
            override val onBackgroundDark = Color(0xFFE4E3D7)
            override val surfaceDark = Color(0xFF13140D)
            override val onSurfaceDark = Color(0xFFE4E3D7)
            override val surfaceVariantDark = Color(0xFF46483C)
            override val onSurfaceVariantDark = Color(0xFFC7C8B8)
            override val outlineDark = Color(0xFF919283)
            override val outlineVariantDark = Color(0xFF46483C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDark = Color(0xFF303129)
            override val inversePrimaryDark = Color(0xFF576422)
            override val surfaceDimDark = Color(0xFF13140D)
            override val surfaceBrightDark = Color(0xFF393A31)
            override val surfaceContainerLowestDark = Color(0xFF0E0F08)
            override val surfaceContainerLowDark = Color(0xFF1B1C15)
            override val surfaceContainerDark = Color(0xFF1F2019)
            override val surfaceContainerHighDark = Color(0xFF292B23)
            override val surfaceContainerHighestDark = Color(0xFF34352D)
            override val primaryDarkMediumContrast = Color(0xFFD4E493)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFF89974F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCCFD)
            override val onSecondaryDarkMediumContrast = Color(0xFF3D1541)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB380B3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCCFC)
            override val onTertiaryDarkMediumContrast = Color(0xFF3D1441)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB37FB3)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF13140D)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E3D7)
            override val surfaceDarkMediumContrast = Color(0xFF13140D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDDDDCD)
            override val outlineDarkMediumContrast = Color(0xFFB2B3A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF909183)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2B23)
            override val inversePrimaryDarkMediumContrast = Color(0xFF414D0B)
            override val surfaceDimDarkMediumContrast = Color(0xFF13140D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44453C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E17)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272921)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF32332B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E36)
            override val primaryDarkHighContrast = Color(0xFFE7F8A5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFBACA7C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFFFEAFA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFE8B1E7)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1B0020)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAFA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE8B0E7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1B0020)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF13140D)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E3D7)
            override val surfaceDarkHighContrast = Color(0xFF13140D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF1F1E0)
            override val outlineVariantDarkHighContrast = Color(0xFFC3C4B4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF414D0B)
            override val surfaceDimDarkHighContrast = Color(0xFF13140D)
            override val surfaceBrightDarkHighContrast = Color(0xFF505148)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2019)
            override val surfaceContainerDarkHighContrast = Color(0xFF303129)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3C33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF47473E)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF576422)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFDAEA99)
            override val onPrimaryContainerLight = Color(0xFF3F4C0A)
            override val secondaryLight = Color(0xFF596420)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFDDEA96)
            override val onSecondaryContainerLight = Color(0xFF414B07)
            override val tertiaryLight = Color(0xFF545A92)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDFE0FF)
            override val onTertiaryContainerLight = Color(0xFF3C4279)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFBFAED)
            override val onBackgroundLight = Color(0xFF1B1C15)
            override val surfaceLight = Color(0xFFFBFAED)
            override val onSurfaceLight = Color(0xFF1B1C15)
            override val surfaceVariantLight = Color(0xFFE3E4D3)
            override val onSurfaceVariantLight = Color(0xFF46483C)
            override val outlineLight = Color(0xFF77786A)
            override val outlineVariantLight = Color(0xFFC7C8B8)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF303129)
            override val inverseOnSurfaceLight = Color(0xFFF2F1E5)
            override val inversePrimaryLight = Color(0xFFBECE7F)
            override val surfaceDimLight = Color(0xFFDBDBCE)
            override val surfaceBrightLight = Color(0xFFFBFAED)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF5F4E8)
            override val surfaceContainerLight = Color(0xFFEFEEE2)
            override val surfaceContainerHighLight = Color(0xFFEAE9DC)
            override val surfaceContainerHighestLight = Color(0xFFE4E3D7)
            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF65732F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF67732D)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2B3167)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6369A2)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFBFAED)
            override val onBackgroundLightMediumContrast = Color(0xFF1B1C15)
            override val surfaceLightMediumContrast = Color(0xFFFBFAED)
            override val onSurfaceLightMediumContrast = Color(0xFF11120B)
            override val surfaceVariantLightMediumContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF35372C)
            override val outlineLightMediumContrast = Color(0xFF525447)
            override val outlineVariantLightMediumContrast = Color(0xFF6D6E61)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F1E5)
            override val inversePrimaryLightMediumContrast = Color(0xFFBECE7F)
            override val surfaceDimLightMediumContrast = Color(0xFFC8C7BB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF5F4E8)
            override val surfaceContainerLightMediumContrast = Color(0xFFEAE9DC)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDEDDD1)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD3D2C6)
            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF424E0D)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF444E0A)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF21275C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3F447B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFBFAED)
            override val onBackgroundLightHighContrast = Color(0xFF1B1C15)
            override val surfaceLightHighContrast = Color(0xFFFBFAED)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE3E4D3)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2B2D22)
            override val outlineVariantLightHighContrast = Color(0xFF484A3E)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF303129)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFBECE7F)
            override val surfaceDimLightHighContrast = Color(0xFFBAB9AE)
            override val surfaceBrightLightHighContrast = Color(0xFFFBFAED)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF2F1E5)
            override val surfaceContainerLightHighContrast = Color(0xFFE4E3D7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD6D5C9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC8C7BB)
            override val primaryDark = Color(0xFFBECE7F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFF3F4C0A)
            override val onPrimaryContainerDark = Color(0xFFDAEA99)
            override val secondaryDark = Color(0xFFC1CD7D)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF414B07)
            override val onSecondaryContainerDark = Color(0xFFDDEA96)
            override val tertiaryDark = Color(0xFFBDC2FF)
            override val onTertiaryDark = Color(0xFF252B61)
            override val tertiaryContainerDark = Color(0xFF3C4279)
            override val onTertiaryContainerDark = Color(0xFFDFE0FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF13140D)
            override val onBackgroundDark = Color(0xFFE4E3D7)
            override val surfaceDark = Color(0xFF13140D)
            override val onSurfaceDark = Color(0xFFE4E3D7)
            override val surfaceVariantDark = Color(0xFF46483C)
            override val onSurfaceVariantDark = Color(0xFFC7C8B8)
            override val outlineDark = Color(0xFF919283)
            override val outlineVariantDark = Color(0xFF46483C)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDark = Color(0xFF303129)
            override val inversePrimaryDark = Color(0xFF576422)
            override val surfaceDimDark = Color(0xFF13140D)
            override val surfaceBrightDark = Color(0xFF393A31)
            override val surfaceContainerLowestDark = Color(0xFF0E0F08)
            override val surfaceContainerLowDark = Color(0xFF1B1C15)
            override val surfaceContainerDark = Color(0xFF1F2019)
            override val surfaceContainerHighDark = Color(0xFF292B23)
            override val surfaceContainerHighestDark = Color(0xFF34352D)
            override val primaryDarkMediumContrast = Color(0xFFD4E493)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFF89974F)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD7E491)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF8B974D)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD8D9FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF1A2055)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF878CC8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF13140D)
            override val onBackgroundDarkMediumContrast = Color(0xFFE4E3D7)
            override val surfaceDarkMediumContrast = Color(0xFF13140D)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDDDDCD)
            override val outlineDarkMediumContrast = Color(0xFFB2B3A4)
            override val outlineVariantDarkMediumContrast = Color(0xFF909183)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2A2B23)
            override val inversePrimaryDarkMediumContrast = Color(0xFF414D0B)
            override val surfaceDimDarkMediumContrast = Color(0xFF13140D)
            override val surfaceBrightDarkMediumContrast = Color(0xFF44453C)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF070803)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1E17)
            override val surfaceContainerDarkMediumContrast = Color(0xFF272921)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF32332B)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3E36)
            override val primaryDarkHighContrast = Color(0xFFE7F8A5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFBACA7C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFEAF7A3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFBDCA7A)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFF0EEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB9BEFD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000238)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF13140D)
            override val onBackgroundDarkHighContrast = Color(0xFFE4E3D7)
            override val surfaceDarkHighContrast = Color(0xFF13140D)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF46483C)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF1F1E0)
            override val outlineVariantDarkHighContrast = Color(0xFFC3C4B4)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE4E3D7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF414D0B)
            override val surfaceDimDarkHighContrast = Color(0xFF13140D)
            override val surfaceBrightDarkHighContrast = Color(0xFF505148)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2019)
            override val surfaceContainerDarkHighContrast = Color(0xFF303129)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3B3C33)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF47473E)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("lime", "Lime")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)
}