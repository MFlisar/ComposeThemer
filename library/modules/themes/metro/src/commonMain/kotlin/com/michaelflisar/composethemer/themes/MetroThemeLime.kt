package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.MetroTheme
import com.michaelflisar.composethemer.MetroThemeGroup
import com.michaelflisar.composethemer.MetroThemeVariant

object MetroThemeLime : MetroThemeGroup() {

    override val name = "Lime"
    override val themes = listOf(Analogic, Mono, Triade, Complementary, Tetrade)

    private object Colors {

        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF546500)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFA4C400)
            override val onPrimaryContainerLight = Color(0xFF404E00)
            override val secondaryLight = Color(0xFF556200)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF6C7C00)
            override val onSecondaryContainerLight = Color(0xFFFDFFDF)
            override val tertiaryLight = Color(0xFF216D00)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF41C400)
            override val onTertiaryContainerLight = Color(0xFF134A00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAFBE8)
            override val onBackgroundLight = Color(0xFF1A1D11)
            override val surfaceLight = Color(0xFFFAFBE8)
            override val onSurfaceLight = Color(0xFF1A1D11)
            override val surfaceVariantLight = Color(0xFFE2E5CA)
            override val onSurfaceVariantLight = Color(0xFF454935)
            override val outlineLight = Color(0xFF767963)
            override val outlineVariantLight = Color(0xFFC6C9AF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3225)
            override val inverseOnSurfaceLight = Color(0xFFF1F2DF)
            override val inversePrimaryLight = Color(0xFFB3D420)
            override val surfaceDimLight = Color(0xFFDADBC9)
            override val surfaceBrightLight = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F5E2)
            override val surfaceContainerLight = Color(0xFFEFEFDD)
            override val surfaceContainerHighLight = Color(0xFFE9E9D7)
            override val surfaceContainerHighestLight = Color(0xFFE3E4D2)

            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF617500)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF657400)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF0F3F00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF277E00)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1D11)
            override val surfaceLightMediumContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightMediumContrast = Color(0xFF101208)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF343825)
            override val outlineLightMediumContrast = Color(0xFF515440)
            override val outlineVariantLightMediumContrast = Color(0xFF6B6F59)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F2DF)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3D420)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C8B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F5E2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E9D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDECC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D3C1)

            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF414F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF0B3400)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF185500)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightHighContrast = Color(0xFF1A1D11)
            override val surfaceLightHighContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2E1C)
            override val outlineVariantLightHighContrast = Color(0xFF474B37)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3D420)
            override val surfaceDimLightHighContrast = Color(0xFFB9BAA9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F2DF)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E4D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D6C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C8B6)

            override val primaryDark = Color(0xFFBFE12F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFFA4C400)
            override val onPrimaryContainerDark = Color(0xFF404E00)
            override val secondaryDark = Color(0xFFBCD14F)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF87991A)
            override val onSecondaryContainerDark = Color(0xFF151A00)
            override val tertiaryDark = Color(0xFF5FE12E)
            override val onTertiaryDark = Color(0xFF0D3900)
            override val tertiaryContainerDark = Color(0xFF41C400)
            override val onTertiaryContainerDark = Color(0xFF134A00)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF12140A)
            override val onBackgroundDark = Color(0xFFE3E4D2)
            override val surfaceDark = Color(0xFF12140A)
            override val onSurfaceDark = Color(0xFFE3E4D2)
            override val surfaceVariantDark = Color(0xFF454935)
            override val onSurfaceVariantDark = Color(0xFFC6C9AF)
            override val outlineDark = Color(0xFF8F937B)
            override val outlineVariantDark = Color(0xFF454935)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDark = Color(0xFF2F3225)
            override val inversePrimaryDark = Color(0xFF546500)
            override val surfaceDimDark = Color(0xFF12140A)
            override val surfaceBrightDark = Color(0xFF383A2E)
            override val surfaceContainerLowestDark = Color(0xFF0D0F06)
            override val surfaceContainerLowDark = Color(0xFF1A1D11)
            override val surfaceContainerDark = Color(0xFF1F2115)
            override val surfaceContainerHighDark = Color(0xFF292B1F)
            override val surfaceContainerHighestDark = Color(0xFF343629)

            override val primaryDarkMediumContrast = Color(0xFFC8EA3A)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFFA4C400)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF252F00)
            override val secondaryDarkMediumContrast = Color(0xFFD2E763)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF87991A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFF76F945)
            override val onTertiaryDarkMediumContrast = Color(0xFF082D00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF41C400)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF062600)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF12140A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E4D2)
            override val surfaceDarkMediumContrast = Color(0xFF12140A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDFC4)
            override val outlineDarkMediumContrast = Color(0xFFB1B49B)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F927B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292B1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF404D00)
            override val surfaceDimDarkMediumContrast = Color(0xFF12140A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444638)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060802)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1F13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27291D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323427)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3F32)

            override val primaryDarkHighContrast = Color(0xFFDCFF4D)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFD01A)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFE5FB74)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB8CD4C)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFC9FFAE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF5BDD2A)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF020F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF12140A)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E4D2)
            override val surfaceDarkHighContrast = Color(0xFF12140A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEFF2D7)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C5AB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF404D00)
            override val surfaceDimDarkHighContrast = Color(0xFF12140A)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5144)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2115)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3225)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3D30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46483B)
        }

        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF546500)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFA4C400)
            override val onPrimaryContainerLight = Color(0xFF404E00)
            override val secondaryLight = Color(0xFF556200)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF6C7C00)
            override val onSecondaryContainerLight = Color(0xFFFDFFDF)
            override val tertiaryLight = Color(0xFF5B6231)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF7FFBF)
            override val onTertiaryContainerLight = Color(0xFF6F7743)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAFBE8)
            override val onBackgroundLight = Color(0xFF1A1D11)
            override val surfaceLight = Color(0xFFFAFBE8)
            override val onSurfaceLight = Color(0xFF1A1D11)
            override val surfaceVariantLight = Color(0xFFE2E5CA)
            override val onSurfaceVariantLight = Color(0xFF454935)
            override val outlineLight = Color(0xFF767963)
            override val outlineVariantLight = Color(0xFFC6C9AF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3225)
            override val inverseOnSurfaceLight = Color(0xFFF1F2DF)
            override val inversePrimaryLight = Color(0xFFB3D420)
            override val surfaceDimLight = Color(0xFFDADBC9)
            override val surfaceBrightLight = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F5E2)
            override val surfaceContainerLight = Color(0xFFEFEFDD)
            override val surfaceContainerHighLight = Color(0xFFE9E9D7)
            override val surfaceContainerHighestLight = Color(0xFFE3E4D2)

            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF617500)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF657400)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF33390C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6A713E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1D11)
            override val surfaceLightMediumContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightMediumContrast = Color(0xFF101208)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF343825)
            override val outlineLightMediumContrast = Color(0xFF515440)
            override val outlineVariantLightMediumContrast = Color(0xFF6B6F59)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F2DF)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3D420)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C8B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F5E2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E9D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDECC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D3C1)

            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF414F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF292F03)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF464D1E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightHighContrast = Color(0xFF1A1D11)
            override val surfaceLightHighContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2E1C)
            override val outlineVariantLightHighContrast = Color(0xFF474B37)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3D420)
            override val surfaceDimLightHighContrast = Color(0xFFB9BAA9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F2DF)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E4D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D6C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C8B6)

            override val primaryDark = Color(0xFFBFE12F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFFA4C400)
            override val onPrimaryContainerDark = Color(0xFF404E00)
            override val secondaryDark = Color(0xFFBCD14F)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF87991A)
            override val onSecondaryContainerDark = Color(0xFF151A00)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF2D3307)
            override val tertiaryContainerDark = Color(0xFFE0E8AA)
            override val onTertiaryContainerDark = Color(0xFF616836)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF12140A)
            override val onBackgroundDark = Color(0xFFE3E4D2)
            override val surfaceDark = Color(0xFF12140A)
            override val onSurfaceDark = Color(0xFFE3E4D2)
            override val surfaceVariantDark = Color(0xFF454935)
            override val onSurfaceVariantDark = Color(0xFFC6C9AF)
            override val outlineDark = Color(0xFF8F937B)
            override val outlineVariantDark = Color(0xFF454935)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDark = Color(0xFF2F3225)
            override val inversePrimaryDark = Color(0xFF546500)
            override val surfaceDimDark = Color(0xFF12140A)
            override val surfaceBrightDark = Color(0xFF383A2E)
            override val surfaceContainerLowestDark = Color(0xFF0D0F06)
            override val surfaceContainerLowDark = Color(0xFF1A1D11)
            override val surfaceContainerDark = Color(0xFF1F2115)
            override val surfaceContainerHighDark = Color(0xFF292B1F)
            override val surfaceContainerHighestDark = Color(0xFF343629)

            override val primaryDarkMediumContrast = Color(0xFFC8EA3A)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFFA4C400)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF252F00)
            override val secondaryDarkMediumContrast = Color(0xFFD2E763)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF87991A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D3307)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE0E8AA)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF454C1D)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF12140A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E4D2)
            override val surfaceDarkMediumContrast = Color(0xFF12140A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDFC4)
            override val outlineDarkMediumContrast = Color(0xFFB1B49B)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F927B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292B1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF404D00)
            override val surfaceDimDarkMediumContrast = Color(0xFF12140A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444638)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060802)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1F13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27291D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323427)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3F32)

            override val primaryDarkHighContrast = Color(0xFFDCFF4D)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFD01A)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFE5FB74)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB8CD4C)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE0E8AA)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF272D02)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF12140A)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E4D2)
            override val surfaceDarkHighContrast = Color(0xFF12140A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEFF2D7)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C5AB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF404D00)
            override val surfaceDimDarkHighContrast = Color(0xFF12140A)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5144)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2115)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3225)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3D30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46483B)
        }

        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF546500)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFA4C400)
            override val onPrimaryContainerLight = Color(0xFF404E00)
            override val secondaryLight = Color(0xFF556200)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF6C7C00)
            override val onSecondaryContainerLight = Color(0xFFFDFFDF)
            override val tertiaryLight = Color(0xFF000F94)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF1224C4)
            override val onTertiaryContainerLight = Color(0xFF9EA7FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAFBE8)
            override val onBackgroundLight = Color(0xFF1A1D11)
            override val surfaceLight = Color(0xFFFAFBE8)
            override val onSurfaceLight = Color(0xFF1A1D11)
            override val surfaceVariantLight = Color(0xFFE2E5CA)
            override val onSurfaceVariantLight = Color(0xFF454935)
            override val outlineLight = Color(0xFF767963)
            override val outlineVariantLight = Color(0xFFC6C9AF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3225)
            override val inverseOnSurfaceLight = Color(0xFFF1F2DF)
            override val inversePrimaryLight = Color(0xFFB3D420)
            override val surfaceDimLight = Color(0xFFDADBC9)
            override val surfaceBrightLight = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F5E2)
            override val surfaceContainerLight = Color(0xFFEFEFDD)
            override val surfaceContainerHighLight = Color(0xFFE9E9D7)
            override val surfaceContainerHighestLight = Color(0xFFE3E4D2)

            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF617500)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF657400)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF000F94)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF1224C4)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFD2D5FF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1D11)
            override val surfaceLightMediumContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightMediumContrast = Color(0xFF101208)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF343825)
            override val outlineLightMediumContrast = Color(0xFF515440)
            override val outlineVariantLightMediumContrast = Color(0xFF6B6F59)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F2DF)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3D420)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C8B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F5E2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E9D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDECC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D3C1)

            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF414F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF000F94)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF1224C4)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightHighContrast = Color(0xFF1A1D11)
            override val surfaceLightHighContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2E1C)
            override val outlineVariantLightHighContrast = Color(0xFF474B37)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3D420)
            override val surfaceDimLightHighContrast = Color(0xFFB9BAA9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F2DF)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E4D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D6C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C8B6)

            override val primaryDark = Color(0xFFBFE12F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFFA4C400)
            override val onPrimaryContainerDark = Color(0xFF404E00)
            override val secondaryDark = Color(0xFFBCD14F)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF87991A)
            override val onSecondaryContainerDark = Color(0xFF151A00)
            override val tertiaryDark = Color(0xFFBDC2FF)
            override val onTertiaryDark = Color(0xFF0012A1)
            override val tertiaryContainerDark = Color(0xFF1224C4)
            override val onTertiaryContainerDark = Color(0xFF9EA7FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF12140A)
            override val onBackgroundDark = Color(0xFFE3E4D2)
            override val surfaceDark = Color(0xFF12140A)
            override val onSurfaceDark = Color(0xFFE3E4D2)
            override val surfaceVariantDark = Color(0xFF454935)
            override val onSurfaceVariantDark = Color(0xFFC6C9AF)
            override val outlineDark = Color(0xFF8F937B)
            override val outlineVariantDark = Color(0xFF454935)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDark = Color(0xFF2F3225)
            override val inversePrimaryDark = Color(0xFF546500)
            override val surfaceDimDark = Color(0xFF12140A)
            override val surfaceBrightDark = Color(0xFF383A2E)
            override val surfaceContainerLowestDark = Color(0xFF0D0F06)
            override val surfaceContainerLowDark = Color(0xFF1A1D11)
            override val surfaceContainerDark = Color(0xFF1F2115)
            override val surfaceContainerHighDark = Color(0xFF292B1F)
            override val surfaceContainerHighestDark = Color(0xFF343629)

            override val primaryDarkMediumContrast = Color(0xFFC8EA3A)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFFA4C400)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF252F00)
            override val secondaryDarkMediumContrast = Color(0xFFD2E763)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF87991A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD8D9FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF000C83)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7885FF)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF12140A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E4D2)
            override val surfaceDarkMediumContrast = Color(0xFF12140A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDFC4)
            override val outlineDarkMediumContrast = Color(0xFFB1B49B)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F927B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292B1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF404D00)
            override val surfaceDimDarkMediumContrast = Color(0xFF12140A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444638)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060802)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1F13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27291D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323427)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3F32)

            override val primaryDarkHighContrast = Color(0xFFDCFF4D)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFD01A)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFE5FB74)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB8CD4C)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFF0EEFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB8BEFF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000238)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF12140A)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E4D2)
            override val surfaceDarkHighContrast = Color(0xFF12140A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEFF2D7)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C5AB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF404D00)
            override val surfaceDimDarkHighContrast = Color(0xFF12140A)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5144)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2115)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3225)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3D30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46483B)
        }

        object Complementary : ComposeThemeColors {
            override val primaryLight = Color(0xFF546500)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFA4C400)
            override val onPrimaryContainerLight = Color(0xFF404E00)
            override val secondaryLight = Color(0xFF556200)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFF6C7C00)
            override val onSecondaryContainerLight = Color(0xFFFDFFDF)
            override val tertiaryLight = Color(0xFF5B6231)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF7FFBF)
            override val onTertiaryContainerLight = Color(0xFF6F7743)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAFBE8)
            override val onBackgroundLight = Color(0xFF1A1D11)
            override val surfaceLight = Color(0xFFFAFBE8)
            override val onSurfaceLight = Color(0xFF1A1D11)
            override val surfaceVariantLight = Color(0xFFE2E5CA)
            override val onSurfaceVariantLight = Color(0xFF454935)
            override val outlineLight = Color(0xFF767963)
            override val outlineVariantLight = Color(0xFFC6C9AF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3225)
            override val inverseOnSurfaceLight = Color(0xFFF1F2DF)
            override val inversePrimaryLight = Color(0xFFB3D420)
            override val surfaceDimLight = Color(0xFFDADBC9)
            override val surfaceBrightLight = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F5E2)
            override val surfaceContainerLight = Color(0xFFEFEFDD)
            override val surfaceContainerHighLight = Color(0xFFE9E9D7)
            override val surfaceContainerHighestLight = Color(0xFFE3E4D2)

            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF617500)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF313A00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF657400)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF33390C)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF6A713E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1D11)
            override val surfaceLightMediumContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightMediumContrast = Color(0xFF101208)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF343825)
            override val outlineLightMediumContrast = Color(0xFF515440)
            override val outlineVariantLightMediumContrast = Color(0xFF6B6F59)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F2DF)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3D420)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C8B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F5E2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E9D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDECC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D3C1)

            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF414F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF282F00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF434E00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF292F03)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF464D1E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightHighContrast = Color(0xFF1A1D11)
            override val surfaceLightHighContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2E1C)
            override val outlineVariantLightHighContrast = Color(0xFF474B37)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3D420)
            override val surfaceDimLightHighContrast = Color(0xFFB9BAA9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F2DF)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E4D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D6C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C8B6)

            override val primaryDark = Color(0xFFBFE12F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFFA4C400)
            override val onPrimaryContainerDark = Color(0xFF404E00)
            override val secondaryDark = Color(0xFFBCD14F)
            override val onSecondaryDark = Color(0xFF2C3400)
            override val secondaryContainerDark = Color(0xFF87991A)
            override val onSecondaryContainerDark = Color(0xFF151A00)
            override val tertiaryDark = Color(0xFFFFFFFF)
            override val onTertiaryDark = Color(0xFF2D3307)
            override val tertiaryContainerDark = Color(0xFFE0E8AA)
            override val onTertiaryContainerDark = Color(0xFF616836)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF12140A)
            override val onBackgroundDark = Color(0xFFE3E4D2)
            override val surfaceDark = Color(0xFF12140A)
            override val onSurfaceDark = Color(0xFFE3E4D2)
            override val surfaceVariantDark = Color(0xFF454935)
            override val onSurfaceVariantDark = Color(0xFFC6C9AF)
            override val outlineDark = Color(0xFF8F937B)
            override val outlineVariantDark = Color(0xFF454935)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDark = Color(0xFF2F3225)
            override val inversePrimaryDark = Color(0xFF546500)
            override val surfaceDimDark = Color(0xFF12140A)
            override val surfaceBrightDark = Color(0xFF383A2E)
            override val surfaceContainerLowestDark = Color(0xFF0D0F06)
            override val surfaceContainerLowDark = Color(0xFF1A1D11)
            override val surfaceContainerDark = Color(0xFF1F2115)
            override val surfaceContainerHighDark = Color(0xFF292B1F)
            override val surfaceContainerHighestDark = Color(0xFF343629)

            override val primaryDarkMediumContrast = Color(0xFFC8EA3A)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFFA4C400)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF252F00)
            override val secondaryDarkMediumContrast = Color(0xFFD2E763)
            override val onSecondaryDarkMediumContrast = Color(0xFF222900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF87991A)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D3307)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFE0E8AA)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF454C1D)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF12140A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E4D2)
            override val surfaceDarkMediumContrast = Color(0xFF12140A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDFC4)
            override val outlineDarkMediumContrast = Color(0xFFB1B49B)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F927B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292B1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF404D00)
            override val surfaceDimDarkMediumContrast = Color(0xFF12140A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444638)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060802)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1F13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27291D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323427)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3F32)

            override val primaryDarkHighContrast = Color(0xFFDCFF4D)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFD01A)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFE5FB74)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB8CD4C)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF090D00)
            override val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE0E8AA)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF272D02)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF12140A)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E4D2)
            override val surfaceDarkHighContrast = Color(0xFF12140A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEFF2D7)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C5AB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF404D00)
            override val surfaceDimDarkHighContrast = Color(0xFF12140A)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5144)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2115)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3225)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3D30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46483B)
        }

        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF546500)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFA4C400)
            override val onPrimaryContainerLight = Color(0xFF404E00)
            override val secondaryLight = Color(0xFF870098)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFAE00C4)
            override val onSecondaryContainerLight = Color(0xFFFFD7FC)
            override val tertiaryLight = Color(0xFF560060)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFF7A0089)
            override val onTertiaryContainerLight = Color(0xFFF789FF)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFAFBE8)
            override val onBackgroundLight = Color(0xFF1A1D11)
            override val surfaceLight = Color(0xFFFAFBE8)
            override val onSurfaceLight = Color(0xFF1A1D11)
            override val surfaceVariantLight = Color(0xFFE2E5CA)
            override val onSurfaceVariantLight = Color(0xFF454935)
            override val outlineLight = Color(0xFF767963)
            override val outlineVariantLight = Color(0xFFC6C9AF)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF2F3225)
            override val inverseOnSurfaceLight = Color(0xFFF1F2DF)
            override val inversePrimaryLight = Color(0xFFB3D420)
            override val surfaceDimLight = Color(0xFFDADBC9)
            override val surfaceBrightLight = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF4F5E2)
            override val surfaceContainerLight = Color(0xFFEFEFDD)
            override val surfaceContainerHighLight = Color(0xFFE9E9D7)
            override val surfaceContainerHighestLight = Color(0xFFE3E4D2)

            override val primaryLightMediumContrast = Color(0xFF303B00)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF617500)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF61006E)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFFAE00C4)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF560060)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7A0089)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFCEFC)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightMediumContrast = Color(0xFF1A1D11)
            override val surfaceLightMediumContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightMediumContrast = Color(0xFF101208)
            override val surfaceVariantLightMediumContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF343825)
            override val outlineLightMediumContrast = Color(0xFF515440)
            override val outlineVariantLightMediumContrast = Color(0xFF6B6F59)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF1F2DF)
            override val inversePrimaryLightMediumContrast = Color(0xFFB3D420)
            override val surfaceDimLightMediumContrast = Color(0xFFC7C8B6)
            override val surfaceBrightLightMediumContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF4F5E2)
            override val surfaceContainerLightMediumContrast = Color(0xFFE9E9D7)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFDDDECC)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD2D3C1)

            override val primaryLightHighContrast = Color(0xFF263000)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF414F00)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF51005C)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF800091)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF51005C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF7A0089)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFAFBE8)
            override val onBackgroundLightHighContrast = Color(0xFF1A1D11)
            override val surfaceLightHighContrast = Color(0xFFFAFBE8)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE2E5CA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2A2E1C)
            override val outlineVariantLightHighContrast = Color(0xFF474B37)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF2F3225)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFB3D420)
            override val surfaceDimLightHighContrast = Color(0xFFB9BAA9)
            override val surfaceBrightLightHighContrast = Color(0xFFFAFBE8)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF1F2DF)
            override val surfaceContainerLightHighContrast = Color(0xFFE3E4D2)
            override val surfaceContainerHighLightHighContrast = Color(0xFFD5D6C4)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFC7C8B6)

            override val primaryDark = Color(0xFFBFE12F)
            override val onPrimaryDark = Color(0xFF2A3400)
            override val primaryContainerDark = Color(0xFFA4C400)
            override val onPrimaryContainerDark = Color(0xFF404E00)
            override val secondaryDark = Color(0xFFFCAAFF)
            override val onSecondaryDark = Color(0xFF580064)
            override val secondaryContainerDark = Color(0xFFAE00C4)
            override val onSecondaryContainerDark = Color(0xFFFFD7FC)
            override val tertiaryDark = Color(0xFFFDAAFF)
            override val onTertiaryDark = Color(0xFF580063)
            override val tertiaryContainerDark = Color(0xFF7A0089)
            override val onTertiaryContainerDark = Color(0xFFF789FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF12140A)
            override val onBackgroundDark = Color(0xFFE3E4D2)
            override val surfaceDark = Color(0xFF12140A)
            override val onSurfaceDark = Color(0xFFE3E4D2)
            override val surfaceVariantDark = Color(0xFF454935)
            override val onSurfaceVariantDark = Color(0xFFC6C9AF)
            override val outlineDark = Color(0xFF8F937B)
            override val outlineVariantDark = Color(0xFF454935)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDark = Color(0xFF2F3225)
            override val inversePrimaryDark = Color(0xFF546500)
            override val surfaceDimDark = Color(0xFF12140A)
            override val surfaceBrightDark = Color(0xFF383A2E)
            override val surfaceContainerLowestDark = Color(0xFF0D0F06)
            override val surfaceContainerLowDark = Color(0xFF1A1D11)
            override val surfaceContainerDark = Color(0xFF1F2115)
            override val surfaceContainerHighDark = Color(0xFF292B1F)
            override val surfaceContainerHighestDark = Color(0xFF343629)

            override val primaryDarkMediumContrast = Color(0xFFC8EA3A)
            override val onPrimaryDarkMediumContrast = Color(0xFF212900)
            override val primaryContainerDarkMediumContrast = Color(0xFFA4C400)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF252F00)
            override val secondaryDarkMediumContrast = Color(0xFFFFCCFD)
            override val onSecondaryDarkMediumContrast = Color(0xFF460050)
            override val secondaryContainerDarkMediumContrast = Color(0xFFE24DF5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCCFC)
            override val onTertiaryDarkMediumContrast = Color(0xFF470050)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFD364DD)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF12140A)
            override val onBackgroundDarkMediumContrast = Color(0xFFE3E4D2)
            override val surfaceDarkMediumContrast = Color(0xFF12140A)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFDCDFC4)
            override val outlineDarkMediumContrast = Color(0xFFB1B49B)
            override val outlineVariantDarkMediumContrast = Color(0xFF8F927B)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF292B1F)
            override val inversePrimaryDarkMediumContrast = Color(0xFF404D00)
            override val surfaceDimDarkMediumContrast = Color(0xFF12140A)
            override val surfaceBrightDarkMediumContrast = Color(0xFF444638)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF060802)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF1D1F13)
            override val surfaceContainerDarkMediumContrast = Color(0xFF27291D)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF323427)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3F32)

            override val primaryDarkHighContrast = Color(0xFFDCFF4D)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFAFD01A)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF090D00)
            override val secondaryDarkHighContrast = Color(0xFFFFEAFA)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFBA4FF)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1B0020)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAFA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFCA3FF)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1B0020)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF12140A)
            override val onBackgroundDarkHighContrast = Color(0xFFE3E4D2)
            override val surfaceDarkHighContrast = Color(0xFF12140A)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF454935)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFEFF2D7)
            override val outlineVariantDarkHighContrast = Color(0xFFC2C5AB)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE3E4D2)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF404D00)
            override val surfaceDimDarkHighContrast = Color(0xFF12140A)
            override val surfaceBrightDarkHighContrast = Color(0xFF4F5144)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF1F2115)
            override val surfaceContainerDarkHighContrast = Color(0xFF2F3225)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3A3D30)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF46483B)
        }
    }

    object Analogic : MetroTheme(MetroThemeLime, MetroThemeVariant.Analogic, Colors.Analogic)
    object Mono : MetroTheme(MetroThemeLime, MetroThemeVariant.Mono, Colors.Mono)
    object Triade : MetroTheme(MetroThemeLime, MetroThemeVariant.Triade, Colors.Triade)
    object Complementary :
        MetroTheme(MetroThemeLime, MetroThemeVariant.Complementary, Colors.Complementary)

    object Tetrade : MetroTheme(MetroThemeLime, MetroThemeVariant.Tetrade, Colors.Tetrade)

}

