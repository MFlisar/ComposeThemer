package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroYellow : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF6B5E10)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF5E388)
            override val onPrimaryContainerLight = Color(0xFF514700)
            override val secondaryLight = Color(0xFF666014)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEEE58C)
            override val onSecondaryContainerLight = Color(0xFF4D4800)
            override val tertiaryLight = Color(0xFF4F6628)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFD1ECA0)
            override val onTertiaryContainerLight = Color(0xFF384D12)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9EC)
            override val onBackgroundLight = Color(0xFF1E1C13)
            override val surfaceLight = Color(0xFFFFF9EC)
            override val onSurfaceLight = Color(0xFF1E1C13)
            override val surfaceVariantLight = Color(0xFFE9E2D0)
            override val onSurfaceVariantLight = Color(0xFF4A4739)
            override val outlineLight = Color(0xFF7B7768)
            override val outlineVariantLight = Color(0xFFCCC6B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333027)
            override val inverseOnSurfaceLight = Color(0xFFF6F0E2)
            override val inversePrimaryLight = Color(0xFFD8C770)
            override val surfaceDimLight = Color(0xFFDFDACC)
            override val surfaceBrightLight = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E5)
            override val surfaceContainerLight = Color(0xFFF3EDE0)
            override val surfaceContainerHighLight = Color(0xFFEEE8DA)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D4)
            override val primaryLightMediumContrast = Color(0xFF3F3600)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7A6D1F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF756F23)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF283C02)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF5E7535)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1C13)
            override val surfaceLightMediumContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightMediumContrast = Color(0xFF131109)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393629)
            override val outlineLightMediumContrast = Color(0xFF565244)
            override val outlineVariantLightMediumContrast = Color(0xFF716D5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F0E2)
            override val inversePrimaryLightMediumContrast = Color(0xFFD8C770)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DCCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D1C4)
            override val primaryLightHighContrast = Color(0xFF332C00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF544900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF203100)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF3B5014)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1C13)
            override val surfaceLightHighContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C20)
            override val outlineVariantLightHighContrast = Color(0xFF4D493C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD8C770)
            override val surfaceDimLightHighContrast = Color(0xFFBDB8AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F0E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B9)
            override val primaryDark = Color(0xFFD8C770)
            override val onPrimaryDark = Color(0xFF383000)
            override val primaryContainerDark = Color(0xFF514700)
            override val onPrimaryContainerDark = Color(0xFFF5E388)
            override val secondaryDark = Color(0xFFD1C973)
            override val onSecondaryDark = Color(0xFF353100)
            override val secondaryContainerDark = Color(0xFF4D4800)
            override val onSecondaryContainerDark = Color(0xFFEEE58C)
            override val tertiaryDark = Color(0xFFB5D086)
            override val onTertiaryDark = Color(0xFF233600)
            override val tertiaryContainerDark = Color(0xFF384D12)
            override val onTertiaryContainerDark = Color(0xFFD1ECA0)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15130C)
            override val onBackgroundDark = Color(0xFFE8E2D4)
            override val surfaceDark = Color(0xFF15130C)
            override val onSurfaceDark = Color(0xFFE8E2D4)
            override val surfaceVariantDark = Color(0xFF4A4739)
            override val onSurfaceVariantDark = Color(0xFFCCC6B5)
            override val outlineDark = Color(0xFF969180)
            override val outlineVariantDark = Color(0xFF4A4739)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDark = Color(0xFF333027)
            override val inversePrimaryDark = Color(0xFF6B5E10)
            override val surfaceDimDark = Color(0xFF15130C)
            override val surfaceBrightDark = Color(0xFF3C3930)
            override val surfaceContainerLowestDark = Color(0xFF100E07)
            override val surfaceContainerLowDark = Color(0xFF1E1C13)
            override val surfaceContainerDark = Color(0xFF222017)
            override val surfaceContainerHighDark = Color(0xFF2C2A21)
            override val surfaceContainerHighestDark = Color(0xFF37352B)
            override val primaryDarkMediumContrast = Color(0xFFEFDD83)
            override val onPrimaryDarkMediumContrast = Color(0xFF2C2600)
            override val primaryContainerDarkMediumContrast = Color(0xFFA09140)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE7DF86)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9A9343)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFCBE69A)
            override val onTertiaryDarkMediumContrast = Color(0xFF1B2A00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF809956)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15130C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D4)
            override val surfaceDarkMediumContrast = Color(0xFF15130C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DCCA)
            override val outlineDarkMediumContrast = Color(0xFFB7B2A1)
            override val outlineVariantDarkMediumContrast = Color(0xFF959080)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF534800)
            override val surfaceDimDarkMediumContrast = Color(0xFF15130C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47443B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353329)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E34)
            override val primaryDarkHighContrast = Color(0xFFFFF1AE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD4C36C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val secondaryDarkHighContrast = Color(0xFFFBF398)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCDC56F)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFDEFAAC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB2CC83)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF060D00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15130C)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D4)
            override val surfaceDarkHighContrast = Color(0xFF15130C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0DD)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C2B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF534800)
            override val surfaceDimDarkHighContrast = Color(0xFF15130C)
            override val surfaceBrightDarkHighContrast = Color(0xFF535046)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222017)
            override val surfaceContainerDarkHighContrast = Color(0xFF333027)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3B32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A473D)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF6B5E10)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF5E388)
            override val onPrimaryContainerLight = Color(0xFF514700)
            override val secondaryLight = Color(0xFF666014)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEEE58C)
            override val onSecondaryContainerLight = Color(0xFF4D4800)
            override val tertiaryLight = Color(0xFF626117)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFE9E78E)
            override val onTertiaryContainerLight = Color(0xFF4A4900)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9EC)
            override val onBackgroundLight = Color(0xFF1E1C13)
            override val surfaceLight = Color(0xFFFFF9EC)
            override val onSurfaceLight = Color(0xFF1E1C13)
            override val surfaceVariantLight = Color(0xFFE9E2D0)
            override val onSurfaceVariantLight = Color(0xFF4A4739)
            override val outlineLight = Color(0xFF7B7768)
            override val outlineVariantLight = Color(0xFFCCC6B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333027)
            override val inverseOnSurfaceLight = Color(0xFFF6F0E2)
            override val inversePrimaryLight = Color(0xFFD8C770)
            override val surfaceDimLight = Color(0xFFDFDACC)
            override val surfaceBrightLight = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E5)
            override val surfaceContainerLight = Color(0xFFF3EDE0)
            override val surfaceContainerHighLight = Color(0xFFEEE8DA)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D4)
            override val primaryLightMediumContrast = Color(0xFF3F3600)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7A6D1F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF756F23)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF393800)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF717025)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1C13)
            override val surfaceLightMediumContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightMediumContrast = Color(0xFF131109)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393629)
            override val outlineLightMediumContrast = Color(0xFF565244)
            override val outlineVariantLightMediumContrast = Color(0xFF716D5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F0E2)
            override val inversePrimaryLightMediumContrast = Color(0xFFD8C770)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DCCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D1C4)
            override val primaryLightHighContrast = Color(0xFF332C00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF544900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF2E2E00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF4D4C00)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1C13)
            override val surfaceLightHighContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C20)
            override val outlineVariantLightHighContrast = Color(0xFF4D493C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD8C770)
            override val surfaceDimLightHighContrast = Color(0xFFBDB8AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F0E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B9)
            override val primaryDark = Color(0xFFD8C770)
            override val onPrimaryDark = Color(0xFF383000)
            override val primaryContainerDark = Color(0xFF514700)
            override val onPrimaryContainerDark = Color(0xFFF5E388)
            override val secondaryDark = Color(0xFFD1C973)
            override val onSecondaryDark = Color(0xFF353100)
            override val secondaryContainerDark = Color(0xFF4D4800)
            override val onSecondaryContainerDark = Color(0xFFEEE58C)
            override val tertiaryDark = Color(0xFFCDCA75)
            override val onTertiaryDark = Color(0xFF333200)
            override val tertiaryContainerDark = Color(0xFF4A4900)
            override val onTertiaryContainerDark = Color(0xFFE9E78E)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15130C)
            override val onBackgroundDark = Color(0xFFE8E2D4)
            override val surfaceDark = Color(0xFF15130C)
            override val onSurfaceDark = Color(0xFFE8E2D4)
            override val surfaceVariantDark = Color(0xFF4A4739)
            override val onSurfaceVariantDark = Color(0xFFCCC6B5)
            override val outlineDark = Color(0xFF969180)
            override val outlineVariantDark = Color(0xFF4A4739)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDark = Color(0xFF333027)
            override val inversePrimaryDark = Color(0xFF6B5E10)
            override val surfaceDimDark = Color(0xFF15130C)
            override val surfaceBrightDark = Color(0xFF3C3930)
            override val surfaceContainerLowestDark = Color(0xFF100E07)
            override val surfaceContainerLowDark = Color(0xFF1E1C13)
            override val surfaceContainerDark = Color(0xFF222017)
            override val surfaceContainerHighDark = Color(0xFF2C2A21)
            override val surfaceContainerHighestDark = Color(0xFF37352B)
            override val primaryDarkMediumContrast = Color(0xFFEFDD83)
            override val onPrimaryDarkMediumContrast = Color(0xFF2C2600)
            override val primaryContainerDarkMediumContrast = Color(0xFFA09140)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE7DF86)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9A9343)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE3E089)
            override val onTertiaryDarkMediumContrast = Color(0xFF282700)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF969445)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15130C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D4)
            override val surfaceDarkMediumContrast = Color(0xFF15130C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DCCA)
            override val outlineDarkMediumContrast = Color(0xFFB7B2A1)
            override val outlineVariantDarkMediumContrast = Color(0xFF959080)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF534800)
            override val surfaceDimDarkMediumContrast = Color(0xFF15130C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47443B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353329)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E34)
            override val primaryDarkHighContrast = Color(0xFFFFF1AE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD4C36C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val secondaryDarkHighContrast = Color(0xFFFBF398)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCDC56F)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFF7F49A)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFC9C772)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0C0C00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15130C)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D4)
            override val surfaceDarkHighContrast = Color(0xFF15130C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0DD)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C2B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF534800)
            override val surfaceDimDarkHighContrast = Color(0xFF15130C)
            override val surfaceBrightDarkHighContrast = Color(0xFF535046)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222017)
            override val surfaceContainerDarkHighContrast = Color(0xFF333027)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3B32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A473D)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF6B5E10)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF5E388)
            override val onPrimaryContainerLight = Color(0xFF514700)
            override val secondaryLight = Color(0xFF6C538C)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEEDCFF)
            override val onSecondaryContainerLight = Color(0xFF533B72)
            override val tertiaryLight = Color(0xFF6C538B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFEEDBFF)
            override val onTertiaryContainerLight = Color(0xFF543B72)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9EC)
            override val onBackgroundLight = Color(0xFF1E1C13)
            override val surfaceLight = Color(0xFFFFF9EC)
            override val onSurfaceLight = Color(0xFF1E1C13)
            override val surfaceVariantLight = Color(0xFFE9E2D0)
            override val onSurfaceVariantLight = Color(0xFF4A4739)
            override val outlineLight = Color(0xFF7B7768)
            override val outlineVariantLight = Color(0xFFCCC6B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333027)
            override val inverseOnSurfaceLight = Color(0xFFF6F0E2)
            override val inversePrimaryLight = Color(0xFFD8C770)
            override val surfaceDimLight = Color(0xFFDFDACC)
            override val surfaceBrightLight = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E5)
            override val surfaceContainerLight = Color(0xFFF3EDE0)
            override val surfaceContainerHighLight = Color(0xFFEEE8DA)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D4)
            override val primaryLightMediumContrast = Color(0xFF3F3600)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7A6D1F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF422B60)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7B629B)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF422A60)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7B629B)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1C13)
            override val surfaceLightMediumContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightMediumContrast = Color(0xFF131109)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393629)
            override val outlineLightMediumContrast = Color(0xFF565244)
            override val outlineVariantLightMediumContrast = Color(0xFF716D5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F0E2)
            override val inversePrimaryLightMediumContrast = Color(0xFFD8C770)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DCCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D1C4)
            override val primaryLightHighContrast = Color(0xFF332C00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF544900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF372055)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF563E75)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF382055)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF563E75)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1C13)
            override val surfaceLightHighContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C20)
            override val outlineVariantLightHighContrast = Color(0xFF4D493C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD8C770)
            override val surfaceDimLightHighContrast = Color(0xFFBDB8AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F0E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B9)
            override val primaryDark = Color(0xFFD8C770)
            override val onPrimaryDark = Color(0xFF383000)
            override val primaryContainerDark = Color(0xFF514700)
            override val onPrimaryContainerDark = Color(0xFFF5E388)
            override val secondaryDark = Color(0xFFD7BAFB)
            override val onSecondaryDark = Color(0xFF3C255A)
            override val secondaryContainerDark = Color(0xFF533B72)
            override val onSecondaryContainerDark = Color(0xFFEEDCFF)
            override val tertiaryDark = Color(0xFFD8BAFA)
            override val onTertiaryDark = Color(0xFF3C245A)
            override val tertiaryContainerDark = Color(0xFF543B72)
            override val onTertiaryContainerDark = Color(0xFFEEDBFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15130C)
            override val onBackgroundDark = Color(0xFFE8E2D4)
            override val surfaceDark = Color(0xFF15130C)
            override val onSurfaceDark = Color(0xFFE8E2D4)
            override val surfaceVariantDark = Color(0xFF4A4739)
            override val onSurfaceVariantDark = Color(0xFFCCC6B5)
            override val outlineDark = Color(0xFF969180)
            override val outlineVariantDark = Color(0xFF4A4739)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDark = Color(0xFF333027)
            override val inversePrimaryDark = Color(0xFF6B5E10)
            override val surfaceDimDark = Color(0xFF15130C)
            override val surfaceBrightDark = Color(0xFF3C3930)
            override val surfaceContainerLowestDark = Color(0xFF100E07)
            override val surfaceContainerLowDark = Color(0xFF1E1C13)
            override val surfaceContainerDark = Color(0xFF222017)
            override val surfaceContainerHighDark = Color(0xFF2C2A21)
            override val surfaceContainerHighestDark = Color(0xFF37352B)
            override val primaryDarkMediumContrast = Color(0xFFEFDD83)
            override val onPrimaryDarkMediumContrast = Color(0xFF2C2600)
            override val primaryContainerDarkMediumContrast = Color(0xFFA09140)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE9D4FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF31194E)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA085C2)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFEAD4FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF31194E)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA085C1)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15130C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D4)
            override val surfaceDarkMediumContrast = Color(0xFF15130C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DCCA)
            override val outlineDarkMediumContrast = Color(0xFFB7B2A1)
            override val outlineVariantDarkMediumContrast = Color(0xFF959080)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF534800)
            override val surfaceDimDarkMediumContrast = Color(0xFF15130C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47443B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353329)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E34)
            override val primaryDarkHighContrast = Color(0xFFFFF1AE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD4C36C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val secondaryDarkHighContrast = Color(0xFFF8ECFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD3B6F7)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF14002E)
            override val tertiaryDarkHighContrast = Color(0xFFF8ECFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD4B6F6)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF14002D)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15130C)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D4)
            override val surfaceDarkHighContrast = Color(0xFF15130C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0DD)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C2B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF534800)
            override val surfaceDimDarkHighContrast = Color(0xFF15130C)
            override val surfaceBrightDarkHighContrast = Color(0xFF535046)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222017)
            override val surfaceContainerDarkHighContrast = Color(0xFF333027)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3B32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A473D)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF6B5E10)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF5E388)
            override val onPrimaryContainerLight = Color(0xFF514700)
            override val secondaryLight = Color(0xFF666014)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFEEE58C)
            override val onSecondaryContainerLight = Color(0xFF4D4800)
            override val tertiaryLight = Color(0xFF495D92)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFDAE2FF)
            override val onTertiaryContainerLight = Color(0xFF304578)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF9EC)
            override val onBackgroundLight = Color(0xFF1E1C13)
            override val surfaceLight = Color(0xFFFFF9EC)
            override val onSurfaceLight = Color(0xFF1E1C13)
            override val surfaceVariantLight = Color(0xFFE9E2D0)
            override val onSurfaceVariantLight = Color(0xFF4A4739)
            override val outlineLight = Color(0xFF7B7768)
            override val outlineVariantLight = Color(0xFFCCC6B5)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF333027)
            override val inverseOnSurfaceLight = Color(0xFFF6F0E2)
            override val inversePrimaryLight = Color(0xFFD8C770)
            override val surfaceDimLight = Color(0xFFDFDACC)
            override val surfaceBrightLight = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFF9F3E5)
            override val surfaceContainerLight = Color(0xFFF3EDE0)
            override val surfaceContainerHighLight = Color(0xFFEEE8DA)
            override val surfaceContainerHighestLight = Color(0xFFE8E2D4)
            override val primaryLightMediumContrast = Color(0xFF3F3600)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF7A6D1F)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B3700)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF756F23)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF1E3466)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF586BA2)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1C13)
            override val surfaceLightMediumContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightMediumContrast = Color(0xFF131109)
            override val surfaceVariantLightMediumContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF393629)
            override val outlineLightMediumContrast = Color(0xFF565244)
            override val outlineVariantLightMediumContrast = Color(0xFF716D5E)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF6F0E2)
            override val inversePrimaryLightMediumContrast = Color(0xFFD8C770)
            override val surfaceDimLightMediumContrast = Color(0xFFCBC6B9)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFF9F3E5)
            override val surfaceContainerLightMediumContrast = Color(0xFFEEE8DA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE2DCCF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD7D1C4)
            override val primaryLightHighContrast = Color(0xFF332C00)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF544900)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF302D00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4F4B00)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF12295C)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF33477B)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF9EC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1C13)
            override val surfaceLightHighContrast = Color(0xFFFFF9EC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFE9E2D0)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF2F2C20)
            override val outlineVariantLightHighContrast = Color(0xFF4D493C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF333027)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFD8C770)
            override val surfaceDimLightHighContrast = Color(0xFFBDB8AC)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF9EC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF6F0E2)
            override val surfaceContainerLightHighContrast = Color(0xFFE8E2D4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD4C7)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCBC6B9)
            override val primaryDark = Color(0xFFD8C770)
            override val onPrimaryDark = Color(0xFF383000)
            override val primaryContainerDark = Color(0xFF514700)
            override val onPrimaryContainerDark = Color(0xFFF5E388)
            override val secondaryDark = Color(0xFFD1C973)
            override val onSecondaryDark = Color(0xFF353100)
            override val secondaryContainerDark = Color(0xFF4D4800)
            override val onSecondaryContainerDark = Color(0xFFEEE58C)
            override val tertiaryDark = Color(0xFFB2C5FF)
            override val onTertiaryDark = Color(0xFF182E60)
            override val tertiaryContainerDark = Color(0xFF304578)
            override val onTertiaryContainerDark = Color(0xFFDAE2FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF15130C)
            override val onBackgroundDark = Color(0xFFE8E2D4)
            override val surfaceDark = Color(0xFF15130C)
            override val onSurfaceDark = Color(0xFFE8E2D4)
            override val surfaceVariantDark = Color(0xFF4A4739)
            override val onSurfaceVariantDark = Color(0xFFCCC6B5)
            override val outlineDark = Color(0xFF969180)
            override val outlineVariantDark = Color(0xFF4A4739)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDark = Color(0xFF333027)
            override val inversePrimaryDark = Color(0xFF6B5E10)
            override val surfaceDimDark = Color(0xFF15130C)
            override val surfaceBrightDark = Color(0xFF3C3930)
            override val surfaceContainerLowestDark = Color(0xFF100E07)
            override val surfaceContainerLowDark = Color(0xFF1E1C13)
            override val surfaceContainerDark = Color(0xFF222017)
            override val surfaceContainerHighDark = Color(0xFF2C2A21)
            override val surfaceContainerHighestDark = Color(0xFF37352B)
            override val primaryDarkMediumContrast = Color(0xFFEFDD83)
            override val onPrimaryDarkMediumContrast = Color(0xFF2C2600)
            override val primaryContainerDarkMediumContrast = Color(0xFFA09140)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE7DF86)
            override val onSecondaryDarkMediumContrast = Color(0xFF292700)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9A9343)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD1DBFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF092355)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF7B8FC8)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF15130C)
            override val onBackgroundDarkMediumContrast = Color(0xFFE8E2D4)
            override val surfaceDarkMediumContrast = Color(0xFF15130C)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE3DCCA)
            override val outlineDarkMediumContrast = Color(0xFFB7B2A1)
            override val outlineVariantDarkMediumContrast = Color(0xFF959080)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2A21)
            override val inversePrimaryDarkMediumContrast = Color(0xFF534800)
            override val surfaceDimDarkMediumContrast = Color(0xFF15130C)
            override val surfaceBrightDarkMediumContrast = Color(0xFF47443B)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF090703)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201E15)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2A281F)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF353329)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF403E34)
            override val primaryDarkHighContrast = Color(0xFFFFF1AE)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFD4C36C)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF0E0B00)
            override val secondaryDarkHighContrast = Color(0xFFFBF398)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCDC56F)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0D0C00)
            override val tertiaryDarkHighContrast = Color(0xFFEDEFFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFADC1FD)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000926)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF15130C)
            override val onBackgroundDarkHighContrast = Color(0xFFE8E2D4)
            override val surfaceDarkHighContrast = Color(0xFF15130C)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4A4739)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF7F0DD)
            override val outlineVariantDarkHighContrast = Color(0xFFC8C2B1)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF534800)
            override val surfaceDimDarkHighContrast = Color(0xFF15130C)
            override val surfaceBrightDarkHighContrast = Color(0xFF535046)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF222017)
            override val surfaceContainerDarkHighContrast = Color(0xFF333027)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3E3B32)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A473D)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("yellow", "Yellow")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}