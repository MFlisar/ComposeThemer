package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroPink : ComposeTheme.Group {

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("pink", "Pink")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF844C72)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD8EE)
            override val onPrimaryContainerLight = Color(0xFF69345A)
            override val secondaryLight = Color(0xFF7F4D7A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD7F6)
            override val onSecondaryContainerLight = Color(0xFF653661)
            override val tertiaryLight = Color(0xFF8B4A61)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD9E3)
            override val onTertiaryContainerLight = Color(0xFF6F3349)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F9)
            override val onBackgroundLight = Color(0xFF201A1D)
            override val surfaceLight = Color(0xFFFFF8F9)
            override val onSurfaceLight = Color(0xFF201A1D)
            override val surfaceVariantLight = Color(0xFFEFDEE6)
            override val onSurfaceVariantLight = Color(0xFF4F444A)
            override val outlineLight = Color(0xFF81737A)
            override val outlineVariantLight = Color(0xFFD3C2CA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362E32)
            override val inverseOnSurfaceLight = Color(0xFFFBEDF3)
            override val inversePrimaryLight = Color(0xFFF7B1DE)
            override val surfaceDimLight = Color(0xFFE4D7DC)
            override val surfaceBrightLight = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF0F5)
            override val surfaceContainerLight = Color(0xFFF8EAF0)
            override val surfaceContainerHighLight = Color(0xFFF2E5EA)
            override val surfaceContainerHighestLight = Color(0xFFEDDFE4)
            override val primaryLightMediumContrast = Color(0xFF562448)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF955A81)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF522550)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8F5C8A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5B2239)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9C5870)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightMediumContrast = Color(0xFF201A1D)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightMediumContrast = Color(0xFF160F13)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3339)
            override val outlineLightMediumContrast = Color(0xFF5B4F55)
            override val outlineVariantLightMediumContrast = Color(0xFF776970)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEDF3)
            override val inversePrimaryLightMediumContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C3C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF0F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E5EA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7D9DF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBCED3)
            override val primaryLightHighContrast = Color(0xFF4A1A3D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6C375C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF471B45)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF673864)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4F182E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF72354C)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightHighContrast = Color(0xFF201A1D)
            override val surfaceLightHighContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF33292F)
            override val outlineVariantLightHighContrast = Color(0xFF52464C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightHighContrast = Color(0xFFC2B5BB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEDF3)
            override val surfaceContainerLightHighContrast = Color(0xFFEDDFE4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED1D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C3C8)
            override val primaryDark = Color(0xFFF7B1DE)
            override val onPrimaryDark = Color(0xFF4F1E42)
            override val primaryContainerDark = Color(0xFF69345A)
            override val onPrimaryContainerDark = Color(0xFFFFD8EE)
            override val secondaryDark = Color(0xFFF0B3E7)
            override val onSecondaryDark = Color(0xFF4B1F49)
            override val secondaryContainerDark = Color(0xFF653661)
            override val onSecondaryContainerDark = Color(0xFFFFD7F6)
            override val tertiaryDark = Color(0xFFFFB0C9)
            override val onTertiaryDark = Color(0xFF541D33)
            override val tertiaryContainerDark = Color(0xFF6F3349)
            override val onTertiaryContainerDark = Color(0xFFFFD9E3)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181215)
            override val onBackgroundDark = Color(0xFFEDDFE4)
            override val surfaceDark = Color(0xFF181215)
            override val onSurfaceDark = Color(0xFFEDDFE4)
            override val surfaceVariantDark = Color(0xFF4F444A)
            override val onSurfaceVariantDark = Color(0xFFD3C2CA)
            override val outlineDark = Color(0xFF9B8D94)
            override val outlineVariantDark = Color(0xFF4F444A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDark = Color(0xFF362E32)
            override val inversePrimaryDark = Color(0xFF844C72)
            override val surfaceDimDark = Color(0xFF181215)
            override val surfaceBrightDark = Color(0xFF3F373B)
            override val surfaceContainerLowestDark = Color(0xFF130C10)
            override val surfaceContainerLowDark = Color(0xFF201A1D)
            override val surfaceContainerDark = Color(0xFF251E22)
            override val surfaceContainerHighDark = Color(0xFF2F282C)
            override val surfaceContainerHighestDark = Color(0xFF3B3337)
            override val primaryDarkMediumContrast = Color(0xFFFFCFEB)
            override val onPrimaryDarkMediumContrast = Color(0xFF421337)
            override val primaryContainerDarkMediumContrast = Color(0xFFBC7DA6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCDF6)
            override val onSecondaryDarkMediumContrast = Color(0xFF3F143E)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB67FAF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD0DD)
            override val onTertiaryDarkMediumContrast = Color(0xFF471228)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC57B93)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181215)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDDFE4)
            override val surfaceDarkMediumContrast = Color(0xFF181215)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9D8DF)
            override val outlineDarkMediumContrast = Color(0xFFBDAEB5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8C93)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F282C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6B355B)
            override val surfaceDimDarkMediumContrast = Color(0xFF181215)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B4246)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0609)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D262A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383035)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B40)
            override val primaryDarkHighContrast = Color(0xFFFFEBF4)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF3AEDA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0017)
            override val secondaryDarkHighContrast = Color(0xFFFFEAF8)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFECAFE3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1C001D)
            override val tertiaryDarkHighContrast = Color(0xFFFFEBEF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFEABC5)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF20000D)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181215)
            override val onBackgroundDarkHighContrast = Color(0xFFEDDFE4)
            override val surfaceDarkHighContrast = Color(0xFF181215)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEBF3)
            override val outlineVariantDarkHighContrast = Color(0xFFCFBEC6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6B355B)
            override val surfaceDimDarkHighContrast = Color(0xFF181215)
            override val surfaceBrightDarkHighContrast = Color(0xFF574E52)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E22)
            override val surfaceContainerDarkHighContrast = Color(0xFF362E32)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF41393D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D4449)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF844C72)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD8EE)
            override val onPrimaryContainerLight = Color(0xFF69345A)
            override val secondaryLight = Color(0xFF7F4D7A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD7F6)
            override val onSecondaryContainerLight = Color(0xFF653661)
            override val tertiaryLight = Color(0xFF7B4E80)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD6FF)
            override val onTertiaryContainerLight = Color(0xFF613767)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F9)
            override val onBackgroundLight = Color(0xFF201A1D)
            override val surfaceLight = Color(0xFFFFF8F9)
            override val onSurfaceLight = Color(0xFF201A1D)
            override val surfaceVariantLight = Color(0xFFEFDEE6)
            override val onSurfaceVariantLight = Color(0xFF4F444A)
            override val outlineLight = Color(0xFF81737A)
            override val outlineVariantLight = Color(0xFFD3C2CA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362E32)
            override val inverseOnSurfaceLight = Color(0xFFFBEDF3)
            override val inversePrimaryLight = Color(0xFFF7B1DE)
            override val surfaceDimLight = Color(0xFFE4D7DC)
            override val surfaceBrightLight = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF0F5)
            override val surfaceContainerLight = Color(0xFFF8EAF0)
            override val surfaceContainerHighLight = Color(0xFFF2E5EA)
            override val surfaceContainerHighestLight = Color(0xFFEDDFE4)
            override val primaryLightMediumContrast = Color(0xFF562448)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF955A81)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF522550)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8F5C8A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF4E2655)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8A5D90)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightMediumContrast = Color(0xFF201A1D)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightMediumContrast = Color(0xFF160F13)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3339)
            override val outlineLightMediumContrast = Color(0xFF5B4F55)
            override val outlineVariantLightMediumContrast = Color(0xFF776970)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEDF3)
            override val inversePrimaryLightMediumContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C3C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF0F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E5EA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7D9DF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBCED3)
            override val primaryLightHighContrast = Color(0xFF4A1A3D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6C375C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF471B45)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF673864)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF431C4A)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF633969)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightHighContrast = Color(0xFF201A1D)
            override val surfaceLightHighContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF33292F)
            override val outlineVariantLightHighContrast = Color(0xFF52464C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightHighContrast = Color(0xFFC2B5BB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEDF3)
            override val surfaceContainerLightHighContrast = Color(0xFFEDDFE4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED1D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C3C8)
            override val primaryDark = Color(0xFFF7B1DE)
            override val onPrimaryDark = Color(0xFF4F1E42)
            override val primaryContainerDark = Color(0xFF69345A)
            override val onPrimaryContainerDark = Color(0xFFFFD8EE)
            override val secondaryDark = Color(0xFFF0B3E7)
            override val onSecondaryDark = Color(0xFF4B1F49)
            override val secondaryContainerDark = Color(0xFF653661)
            override val onSecondaryContainerDark = Color(0xFFFFD7F6)
            override val tertiaryDark = Color(0xFFEAB5EE)
            override val onTertiaryDark = Color(0xFF48204F)
            override val tertiaryContainerDark = Color(0xFF613767)
            override val onTertiaryContainerDark = Color(0xFFFFD6FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181215)
            override val onBackgroundDark = Color(0xFFEDDFE4)
            override val surfaceDark = Color(0xFF181215)
            override val onSurfaceDark = Color(0xFFEDDFE4)
            override val surfaceVariantDark = Color(0xFF4F444A)
            override val onSurfaceVariantDark = Color(0xFFD3C2CA)
            override val outlineDark = Color(0xFF9B8D94)
            override val outlineVariantDark = Color(0xFF4F444A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDark = Color(0xFF362E32)
            override val inversePrimaryDark = Color(0xFF844C72)
            override val surfaceDimDark = Color(0xFF181215)
            override val surfaceBrightDark = Color(0xFF3F373B)
            override val surfaceContainerLowestDark = Color(0xFF130C10)
            override val surfaceContainerLowDark = Color(0xFF201A1D)
            override val surfaceContainerDark = Color(0xFF251E22)
            override val surfaceContainerHighDark = Color(0xFF2F282C)
            override val surfaceContainerHighestDark = Color(0xFF3B3337)
            override val primaryDarkMediumContrast = Color(0xFFFFCFEB)
            override val onPrimaryDarkMediumContrast = Color(0xFF421337)
            override val primaryContainerDarkMediumContrast = Color(0xFFBC7DA6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCDF6)
            override val onSecondaryDarkMediumContrast = Color(0xFF3F143E)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB67FAF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFDCDFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF3C1543)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB180B5)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181215)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDDFE4)
            override val surfaceDarkMediumContrast = Color(0xFF181215)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9D8DF)
            override val outlineDarkMediumContrast = Color(0xFFBDAEB5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8C93)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F282C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6B355B)
            override val surfaceDimDarkMediumContrast = Color(0xFF181215)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B4246)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0609)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D262A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383035)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B40)
            override val primaryDarkHighContrast = Color(0xFFFFEBF4)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF3AEDA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0017)
            override val secondaryDarkHighContrast = Color(0xFFFFEAF8)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFECAFE3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1C001D)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAFC)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE6B1E9)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1B0021)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181215)
            override val onBackgroundDarkHighContrast = Color(0xFFEDDFE4)
            override val surfaceDarkHighContrast = Color(0xFF181215)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEBF3)
            override val outlineVariantDarkHighContrast = Color(0xFFCFBEC6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6B355B)
            override val surfaceDimDarkHighContrast = Color(0xFF181215)
            override val surfaceBrightDarkHighContrast = Color(0xFF574E52)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E22)
            override val surfaceContainerDarkHighContrast = Color(0xFF362E32)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF41393D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D4449)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF844C72)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD8EE)
            override val onPrimaryContainerLight = Color(0xFF69345A)
            override val secondaryLight = Color(0xFF556423)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFD8EB9A)
            override val onSecondaryContainerLight = Color(0xFF3E4C0B)
            override val tertiaryLight = Color(0xFF556423)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFD8EB9A)
            override val onTertiaryContainerLight = Color(0xFF3E4C0B)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F9)
            override val onBackgroundLight = Color(0xFF201A1D)
            override val surfaceLight = Color(0xFFFFF8F9)
            override val onSurfaceLight = Color(0xFF201A1D)
            override val surfaceVariantLight = Color(0xFFEFDEE6)
            override val onSurfaceVariantLight = Color(0xFF4F444A)
            override val outlineLight = Color(0xFF81737A)
            override val outlineVariantLight = Color(0xFFD3C2CA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362E32)
            override val inverseOnSurfaceLight = Color(0xFFFBEDF3)
            override val inversePrimaryLight = Color(0xFFF7B1DE)
            override val surfaceDimLight = Color(0xFFE4D7DC)
            override val surfaceBrightLight = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF0F5)
            override val surfaceContainerLight = Color(0xFFF8EAF0)
            override val surfaceContainerHighLight = Color(0xFFF2E5EA)
            override val surfaceContainerHighestLight = Color(0xFFEDDFE4)
            override val primaryLightMediumContrast = Color(0xFF562448)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF955A81)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF2E3B00)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF647330)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF2E3B00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF647330)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightMediumContrast = Color(0xFF201A1D)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightMediumContrast = Color(0xFF160F13)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3339)
            override val outlineLightMediumContrast = Color(0xFF5B4F55)
            override val outlineVariantLightMediumContrast = Color(0xFF776970)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEDF3)
            override val inversePrimaryLightMediumContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C3C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF0F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E5EA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7D9DF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBCED3)
            override val primaryLightHighContrast = Color(0xFF4A1A3D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6C375C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF253000)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF414F0E)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF253000)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF414F0E)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightHighContrast = Color(0xFF201A1D)
            override val surfaceLightHighContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF33292F)
            override val outlineVariantLightHighContrast = Color(0xFF52464C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightHighContrast = Color(0xFFC2B5BB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEDF3)
            override val surfaceContainerLightHighContrast = Color(0xFFEDDFE4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED1D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C3C8)
            override val primaryDark = Color(0xFFF7B1DE)
            override val onPrimaryDark = Color(0xFF4F1E42)
            override val primaryContainerDark = Color(0xFF69345A)
            override val onPrimaryContainerDark = Color(0xFFFFD8EE)
            override val secondaryDark = Color(0xFFBDCE80)
            override val onSecondaryDark = Color(0xFF293500)
            override val secondaryContainerDark = Color(0xFF3E4C0B)
            override val onSecondaryContainerDark = Color(0xFFD8EB9A)
            override val tertiaryDark = Color(0xFFBDCE80)
            override val onTertiaryDark = Color(0xFF293500)
            override val tertiaryContainerDark = Color(0xFF3E4C0B)
            override val onTertiaryContainerDark = Color(0xFFD8EB9A)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181215)
            override val onBackgroundDark = Color(0xFFEDDFE4)
            override val surfaceDark = Color(0xFF181215)
            override val onSurfaceDark = Color(0xFFEDDFE4)
            override val surfaceVariantDark = Color(0xFF4F444A)
            override val onSurfaceVariantDark = Color(0xFFD3C2CA)
            override val outlineDark = Color(0xFF9B8D94)
            override val outlineVariantDark = Color(0xFF4F444A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDark = Color(0xFF362E32)
            override val inversePrimaryDark = Color(0xFF844C72)
            override val surfaceDimDark = Color(0xFF181215)
            override val surfaceBrightDark = Color(0xFF3F373B)
            override val surfaceContainerLowestDark = Color(0xFF130C10)
            override val surfaceContainerLowDark = Color(0xFF201A1D)
            override val surfaceContainerDark = Color(0xFF251E22)
            override val surfaceContainerHighDark = Color(0xFF2F282C)
            override val surfaceContainerHighestDark = Color(0xFF3B3337)
            override val primaryDarkMediumContrast = Color(0xFFFFCFEB)
            override val onPrimaryDarkMediumContrast = Color(0xFF421337)
            override val primaryContainerDarkMediumContrast = Color(0xFFBC7DA6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFD2E594)
            override val onSecondaryDarkMediumContrast = Color(0xFF202900)
            override val secondaryContainerDarkMediumContrast = Color(0xFF879850)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFD2E594)
            override val onTertiaryDarkMediumContrast = Color(0xFF202900)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF879850)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181215)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDDFE4)
            override val surfaceDarkMediumContrast = Color(0xFF181215)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9D8DF)
            override val outlineDarkMediumContrast = Color(0xFFBDAEB5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8C93)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F282C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6B355B)
            override val surfaceDimDarkMediumContrast = Color(0xFF181215)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B4246)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0609)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D262A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383035)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B40)
            override val primaryDarkHighContrast = Color(0xFFFFEBF4)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF3AEDA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0017)
            override val secondaryDarkHighContrast = Color(0xFFE6F8A6)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFB9CA7D)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF080D00)
            override val tertiaryDarkHighContrast = Color(0xFFE6F8A6)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFB9CA7D)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF080D00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181215)
            override val onBackgroundDarkHighContrast = Color(0xFFEDDFE4)
            override val surfaceDarkHighContrast = Color(0xFF181215)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEBF3)
            override val outlineVariantDarkHighContrast = Color(0xFFCFBEC6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6B355B)
            override val surfaceDimDarkHighContrast = Color(0xFF181215)
            override val surfaceBrightDarkHighContrast = Color(0xFF574E52)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E22)
            override val surfaceContainerDarkHighContrast = Color(0xFF362E32)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF41393D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D4449)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF844C72)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFD8EE)
            override val onPrimaryContainerLight = Color(0xFF69345A)
            override val secondaryLight = Color(0xFF7F4D7A)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFD7F6)
            override val onSecondaryContainerLight = Color(0xFF653661)
            override val tertiaryLight = Color(0xFF755B0B)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDF96)
            override val onTertiaryContainerLight = Color(0xFF5A4400)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F9)
            override val onBackgroundLight = Color(0xFF201A1D)
            override val surfaceLight = Color(0xFFFFF8F9)
            override val onSurfaceLight = Color(0xFF201A1D)
            override val surfaceVariantLight = Color(0xFFEFDEE6)
            override val onSurfaceVariantLight = Color(0xFF4F444A)
            override val outlineLight = Color(0xFF81737A)
            override val outlineVariantLight = Color(0xFFD3C2CA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF362E32)
            override val inverseOnSurfaceLight = Color(0xFFFBEDF3)
            override val inversePrimaryLight = Color(0xFFF7B1DE)
            override val surfaceDimLight = Color(0xFFE4D7DC)
            override val surfaceBrightLight = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFEF0F5)
            override val surfaceContainerLight = Color(0xFFF8EAF0)
            override val surfaceContainerHighLight = Color(0xFFF2E5EA)
            override val surfaceContainerHighestLight = Color(0xFFEDDFE4)
            override val primaryLightMediumContrast = Color(0xFF562448)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF955A81)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF522550)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF8F5C8A)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF453400)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF85691C)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightMediumContrast = Color(0xFF201A1D)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightMediumContrast = Color(0xFF160F13)
            override val surfaceVariantLightMediumContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3E3339)
            override val outlineLightMediumContrast = Color(0xFF5B4F55)
            override val outlineVariantLightMediumContrast = Color(0xFF776970)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFBEDF3)
            override val inversePrimaryLightMediumContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightMediumContrast = Color(0xFFD0C3C8)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFEF0F5)
            override val surfaceContainerLightMediumContrast = Color(0xFFF2E5EA)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE7D9DF)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDBCED3)
            override val primaryLightHighContrast = Color(0xFF4A1A3D)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF6C375C)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF471B45)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF673864)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF392A00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF5C4600)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F9)
            override val onBackgroundLightHighContrast = Color(0xFF201A1D)
            override val surfaceLightHighContrast = Color(0xFFFFF8F9)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEFDEE6)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF33292F)
            override val outlineVariantLightHighContrast = Color(0xFF52464C)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF362E32)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFF7B1DE)
            override val surfaceDimLightHighContrast = Color(0xFFC2B5BB)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F9)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFBEDF3)
            override val surfaceContainerLightHighContrast = Color(0xFFEDDFE4)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDED1D6)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD0C3C8)
            override val primaryDark = Color(0xFFF7B1DE)
            override val onPrimaryDark = Color(0xFF4F1E42)
            override val primaryContainerDark = Color(0xFF69345A)
            override val onPrimaryContainerDark = Color(0xFFFFD8EE)
            override val secondaryDark = Color(0xFFF0B3E7)
            override val onSecondaryDark = Color(0xFF4B1F49)
            override val secondaryContainerDark = Color(0xFF653661)
            override val onSecondaryContainerDark = Color(0xFFFFD7F6)
            override val tertiaryDark = Color(0xFFE6C26C)
            override val onTertiaryDark = Color(0xFF3E2E00)
            override val tertiaryContainerDark = Color(0xFF5A4400)
            override val onTertiaryContainerDark = Color(0xFFFFDF96)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF181215)
            override val onBackgroundDark = Color(0xFFEDDFE4)
            override val surfaceDark = Color(0xFF181215)
            override val onSurfaceDark = Color(0xFFEDDFE4)
            override val surfaceVariantDark = Color(0xFF4F444A)
            override val onSurfaceVariantDark = Color(0xFFD3C2CA)
            override val outlineDark = Color(0xFF9B8D94)
            override val outlineVariantDark = Color(0xFF4F444A)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDark = Color(0xFF362E32)
            override val inversePrimaryDark = Color(0xFF844C72)
            override val surfaceDimDark = Color(0xFF181215)
            override val surfaceBrightDark = Color(0xFF3F373B)
            override val surfaceContainerLowestDark = Color(0xFF130C10)
            override val surfaceContainerLowDark = Color(0xFF201A1D)
            override val surfaceContainerDark = Color(0xFF251E22)
            override val surfaceContainerHighDark = Color(0xFF2F282C)
            override val surfaceContainerHighestDark = Color(0xFF3B3337)
            override val primaryDarkMediumContrast = Color(0xFFFFCFEB)
            override val onPrimaryDarkMediumContrast = Color(0xFF421337)
            override val primaryContainerDarkMediumContrast = Color(0xFFBC7DA6)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFCDF6)
            override val onSecondaryDarkMediumContrast = Color(0xFF3F143E)
            override val secondaryContainerDarkMediumContrast = Color(0xFFB67FAF)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFDD87F)
            override val onTertiaryDarkMediumContrast = Color(0xFF312400)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFAC8D3D)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF181215)
            override val onBackgroundDarkMediumContrast = Color(0xFFEDDFE4)
            override val surfaceDarkMediumContrast = Color(0xFF181215)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE9D8DF)
            override val outlineDarkMediumContrast = Color(0xFFBDAEB5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9B8C93)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2F282C)
            override val inversePrimaryDarkMediumContrast = Color(0xFF6B355B)
            override val surfaceDimDarkMediumContrast = Color(0xFF181215)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4B4246)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0609)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF231C1F)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2D262A)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF383035)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF443B40)
            override val primaryDarkHighContrast = Color(0xFFFFEBF4)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFF3AEDA)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1E0017)
            override val secondaryDarkHighContrast = Color(0xFFFFEAF8)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFECAFE3)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF1C001D)
            override val tertiaryDarkHighContrast = Color(0xFFFFEECE)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE2BF69)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF110A00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF181215)
            override val onBackgroundDarkHighContrast = Color(0xFFEDDFE4)
            override val surfaceDarkHighContrast = Color(0xFF181215)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4F444A)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFDEBF3)
            override val outlineVariantDarkHighContrast = Color(0xFFCFBEC6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFEDDFE4)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF6B355B)
            override val surfaceDimDarkHighContrast = Color(0xFF181215)
            override val surfaceBrightDarkHighContrast = Color(0xFF574E52)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF251E22)
            override val surfaceContainerDarkHighContrast = Color(0xFF362E32)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF41393D)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4D4449)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}