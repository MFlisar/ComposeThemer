package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroViolet : ComposeTheme.Group {

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF735187)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF4D9FF)
            override val onPrimaryContainerLight = Color(0xFF5A396E)
            override val secondaryLight = Color(0xFF64558F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE8DDFF)
            override val onSecondaryContainerLight = Color(0xFF4C3E76)
            override val tertiaryLight = Color(0xFF7C4E7E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFD6FC)
            override val onTertiaryContainerLight = Color(0xFF623765)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FC)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FC)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFEADFEA)
            override val onSurfaceVariantLight = Color(0xFF4B454D)
            override val outlineLight = Color(0xFF7C747E)
            override val outlineVariantLight = Color(0xFFCDC3CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF7EEF6)
            override val inversePrimaryLight = Color(0xFFE0B8F6)
            override val surfaceDimLight = Color(0xFFE0D7DF)
            override val surfaceBrightLight = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFAF1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEFE5ED)
            override val surfaceContainerHighestLight = Color(0xFFE9E0E7)
            override val primaryLightMediumContrast = Color(0xFF48295C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF825F97)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B2D64)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF73649F)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF502653)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8C5C8E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3A343C)
            override val outlineLightMediumContrast = Color(0xFF575059)
            override val outlineVariantLightMediumContrast = Color(0xFF726B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF7EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFAF1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE5ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE3DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8CFD7)
            override val primaryLightHighContrast = Color(0xFF3D1E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5C3C70)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF312259)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4E4078)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF441B48)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF653967)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF302A32)
            override val outlineVariantLightHighContrast = Color(0xFF4E4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightHighContrast = Color(0xFFBEB6BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF7EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E0E7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CB)
            override val primaryDark = Color(0xFFE0B8F6)
            override val onPrimaryDark = Color(0xFF422356)
            override val primaryContainerDark = Color(0xFF5A396E)
            override val onPrimaryContainerDark = Color(0xFFF4D9FF)
            override val secondaryDark = Color(0xFFCEBDFE)
            override val onSecondaryDark = Color(0xFF35275D)
            override val secondaryContainerDark = Color(0xFF4C3E76)
            override val onSecondaryContainerDark = Color(0xFFE8DDFF)
            override val tertiaryDark = Color(0xFFECB4EB)
            override val onTertiaryDark = Color(0xFF49204D)
            override val tertiaryContainerDark = Color(0xFF623765)
            override val onTertiaryContainerDark = Color(0xFFFFD6FC)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161217)
            override val onBackgroundDark = Color(0xFFE9E0E7)
            override val surfaceDark = Color(0xFF161217)
            override val onSurfaceDark = Color(0xFFE9E0E7)
            override val surfaceVariantDark = Color(0xFF4B454D)
            override val onSurfaceVariantDark = Color(0xFFCDC3CE)
            override val outlineDark = Color(0xFF978E98)
            override val outlineVariantDark = Color(0xFF4B454D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF735187)
            override val surfaceDimDark = Color(0xFF161217)
            override val surfaceBrightDark = Color(0xFF3C383D)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2D282E)
            override val surfaceContainerHighestDark = Color(0xFF383339)
            override val primaryDarkMediumContrast = Color(0xFFF1D2FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF36174A)
            override val primaryContainerDarkMediumContrast = Color(0xFFA883BD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE2D6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2A1B52)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9788C5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFCCFD)
            override val onTertiaryDarkMediumContrast = Color(0xFF3D1541)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB37FB3)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161217)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E0E7)
            override val surfaceDarkMediumContrast = Color(0xFF161217)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE4D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB8AFB9)
            override val outlineVariantDarkMediumContrast = Color(0xFF968E97)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkMediumContrast = Color(0xFF161217)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B262C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413C42)
            override val primaryDarkHighContrast = Color(0xFFFBEBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFDCB4F2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF170028)
            override val secondaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCAB9FA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0033)
            override val tertiaryDarkHighContrast = Color(0xFFFFEAFA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFE8B0E7)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF1B0020)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161217)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E0E7)
            override val surfaceDarkHighContrast = Color(0xFF161217)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF8EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC9BFCA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkHighContrast = Color(0xFF161217)
            override val surfaceBrightDarkHighContrast = Color(0xFF544E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF735187)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF4D9FF)
            override val onPrimaryContainerLight = Color(0xFF5A396E)
            override val secondaryLight = Color(0xFF64558F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE8DDFF)
            override val onSecondaryContainerLight = Color(0xFF4C3E76)
            override val tertiaryLight = Color(0xFF69548D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFECDCFF)
            override val onTertiaryContainerLight = Color(0xFF513C73)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FC)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FC)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFEADFEA)
            override val onSurfaceVariantLight = Color(0xFF4B454D)
            override val outlineLight = Color(0xFF7C747E)
            override val outlineVariantLight = Color(0xFFCDC3CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF7EEF6)
            override val inversePrimaryLight = Color(0xFFE0B8F6)
            override val surfaceDimLight = Color(0xFFE0D7DF)
            override val surfaceBrightLight = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFAF1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEFE5ED)
            override val surfaceContainerHighestLight = Color(0xFFE9E0E7)
            override val primaryLightMediumContrast = Color(0xFF48295C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF825F97)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B2D64)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF73649F)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF402B62)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF78629D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3A343C)
            override val outlineLightMediumContrast = Color(0xFF575059)
            override val outlineVariantLightMediumContrast = Color(0xFF726B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF7EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFAF1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE5ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE3DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8CFD7)
            override val primaryLightHighContrast = Color(0xFF3D1E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5C3C70)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF312259)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4E4078)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF352157)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF533F76)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF302A32)
            override val outlineVariantLightHighContrast = Color(0xFF4E4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightHighContrast = Color(0xFFBEB6BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF7EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E0E7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CB)
            override val primaryDark = Color(0xFFE0B8F6)
            override val onPrimaryDark = Color(0xFF422356)
            override val primaryContainerDark = Color(0xFF5A396E)
            override val onPrimaryContainerDark = Color(0xFFF4D9FF)
            override val secondaryDark = Color(0xFFCEBDFE)
            override val onSecondaryDark = Color(0xFF35275D)
            override val secondaryContainerDark = Color(0xFF4C3E76)
            override val onSecondaryContainerDark = Color(0xFFE8DDFF)
            override val tertiaryDark = Color(0xFFD4BBFC)
            override val onTertiaryDark = Color(0xFF3A255B)
            override val tertiaryContainerDark = Color(0xFF513C73)
            override val onTertiaryContainerDark = Color(0xFFECDCFF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161217)
            override val onBackgroundDark = Color(0xFFE9E0E7)
            override val surfaceDark = Color(0xFF161217)
            override val onSurfaceDark = Color(0xFFE9E0E7)
            override val surfaceVariantDark = Color(0xFF4B454D)
            override val onSurfaceVariantDark = Color(0xFFCDC3CE)
            override val outlineDark = Color(0xFF978E98)
            override val outlineVariantDark = Color(0xFF4B454D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF735187)
            override val surfaceDimDark = Color(0xFF161217)
            override val surfaceBrightDark = Color(0xFF3C383D)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2D282E)
            override val surfaceContainerHighestDark = Color(0xFF383339)
            override val primaryDarkMediumContrast = Color(0xFFF1D2FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF36174A)
            override val primaryContainerDarkMediumContrast = Color(0xFFA883BD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE2D6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2A1B52)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9788C5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFE7D5FF)
            override val onTertiaryDarkMediumContrast = Color(0xFF2F1A50)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF9D86C3)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161217)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E0E7)
            override val surfaceDarkMediumContrast = Color(0xFF161217)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE4D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB8AFB9)
            override val outlineVariantDarkMediumContrast = Color(0xFF968E97)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkMediumContrast = Color(0xFF161217)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B262C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413C42)
            override val primaryDarkHighContrast = Color(0xFFFBEBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFDCB4F2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF170028)
            override val secondaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCAB9FA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0033)
            override val tertiaryDarkHighContrast = Color(0xFFF7ECFF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD0B7F8)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF12002F)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161217)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E0E7)
            override val surfaceDarkHighContrast = Color(0xFF161217)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF8EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC9BFCA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkHighContrast = Color(0xFF161217)
            override val surfaceBrightDarkHighContrast = Color(0xFF544E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF735187)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF4D9FF)
            override val onPrimaryContainerLight = Color(0xFF5A396E)
            override val secondaryLight = Color(0xFF6C5E0F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFF7E388)
            override val onSecondaryContainerLight = Color(0xFF524600)
            override val tertiaryLight = Color(0xFF6C5E0F)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFF7E388)
            override val onTertiaryContainerLight = Color(0xFF524600)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FC)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FC)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFEADFEA)
            override val onSurfaceVariantLight = Color(0xFF4B454D)
            override val outlineLight = Color(0xFF7C747E)
            override val outlineVariantLight = Color(0xFFCDC3CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF7EEF6)
            override val inversePrimaryLight = Color(0xFFE0B8F6)
            override val surfaceDimLight = Color(0xFFE0D7DF)
            override val surfaceBrightLight = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFAF1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEFE5ED)
            override val surfaceContainerHighestLight = Color(0xFFE9E0E7)
            override val primaryLightMediumContrast = Color(0xFF48295C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF825F97)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF403600)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF7C6D1F)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF3F3600)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF7C6D1F)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3A343C)
            override val outlineLightMediumContrast = Color(0xFF575059)
            override val outlineVariantLightMediumContrast = Color(0xFF726B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF7EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFAF1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE5ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE3DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8CFD7)
            override val primaryLightHighContrast = Color(0xFF3D1E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5C3C70)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF342C00)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF554900)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF342C00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF554900)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF302A32)
            override val outlineVariantLightHighContrast = Color(0xFF4E4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightHighContrast = Color(0xFFBEB6BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF7EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E0E7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CB)
            override val primaryDark = Color(0xFFE0B8F6)
            override val onPrimaryDark = Color(0xFF422356)
            override val primaryContainerDark = Color(0xFF5A396E)
            override val onPrimaryContainerDark = Color(0xFFF4D9FF)
            override val secondaryDark = Color(0xFFDAC76F)
            override val onSecondaryDark = Color(0xFF393000)
            override val secondaryContainerDark = Color(0xFF524600)
            override val onSecondaryContainerDark = Color(0xFFF7E388)
            override val tertiaryDark = Color(0xFFDAC76F)
            override val onTertiaryDark = Color(0xFF393000)
            override val tertiaryContainerDark = Color(0xFF524600)
            override val onTertiaryContainerDark = Color(0xFFF7E388)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161217)
            override val onBackgroundDark = Color(0xFFE9E0E7)
            override val surfaceDark = Color(0xFF161217)
            override val onSurfaceDark = Color(0xFFE9E0E7)
            override val surfaceVariantDark = Color(0xFF4B454D)
            override val onSurfaceVariantDark = Color(0xFFCDC3CE)
            override val outlineDark = Color(0xFF978E98)
            override val outlineVariantDark = Color(0xFF4B454D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF735187)
            override val surfaceDimDark = Color(0xFF161217)
            override val surfaceBrightDark = Color(0xFF3C383D)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2D282E)
            override val surfaceContainerHighestDark = Color(0xFF383339)
            override val primaryDarkMediumContrast = Color(0xFFF1D2FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF36174A)
            override val primaryContainerDarkMediumContrast = Color(0xFFA883BD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFF1DC82)
            override val onSecondaryDarkMediumContrast = Color(0xFF2D2500)
            override val secondaryContainerDarkMediumContrast = Color(0xFFA2913F)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFF0DD82)
            override val onTertiaryDarkMediumContrast = Color(0xFF2D2500)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFA1913F)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161217)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E0E7)
            override val surfaceDarkMediumContrast = Color(0xFF161217)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE4D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB8AFB9)
            override val outlineVariantDarkMediumContrast = Color(0xFF968E97)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkMediumContrast = Color(0xFF161217)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B262C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413C42)
            override val primaryDarkHighContrast = Color(0xFFFBEBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFDCB4F2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF170028)
            override val secondaryDarkHighContrast = Color(0xFFFFF0B6)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFD6C36B)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0F0B00)
            override val tertiaryDarkHighContrast = Color(0xFFFFF0B5)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFD6C36C)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF0F0B00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161217)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E0E7)
            override val surfaceDarkHighContrast = Color(0xFF161217)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF8EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC9BFCA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkHighContrast = Color(0xFF161217)
            override val surfaceBrightDarkHighContrast = Color(0xFF544E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF735187)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFF4D9FF)
            override val onPrimaryContainerLight = Color(0xFF5A396E)
            override val secondaryLight = Color(0xFF64558F)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFE8DDFF)
            override val onSecondaryContainerLight = Color(0xFF4C3E76)
            override val tertiaryLight = Color(0xFF8C4E28)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDBC9)
            override val onTertiaryContainerLight = Color(0xFF6F3813)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF7FC)
            override val onBackgroundLight = Color(0xFF1E1A20)
            override val surfaceLight = Color(0xFFFFF7FC)
            override val onSurfaceLight = Color(0xFF1E1A20)
            override val surfaceVariantLight = Color(0xFFEADFEA)
            override val onSurfaceVariantLight = Color(0xFF4B454D)
            override val outlineLight = Color(0xFF7C747E)
            override val outlineVariantLight = Color(0xFFCDC3CE)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF332F35)
            override val inverseOnSurfaceLight = Color(0xFFF7EEF6)
            override val inversePrimaryLight = Color(0xFFE0B8F6)
            override val surfaceDimLight = Color(0xFFE0D7DF)
            override val surfaceBrightLight = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFAF1F9)
            override val surfaceContainerLight = Color(0xFFF4EBF3)
            override val surfaceContainerHighLight = Color(0xFFEFE5ED)
            override val surfaceContainerHighestLight = Color(0xFFE9E0E7)
            override val primaryLightMediumContrast = Color(0xFF48295C)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF825F97)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF3B2D64)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF73649F)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF5A2803)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF9E5D35)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightMediumContrast = Color(0xFF1E1A20)
            override val surfaceLightMediumContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightMediumContrast = Color(0xFF131015)
            override val surfaceVariantLightMediumContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF3A343C)
            override val outlineLightMediumContrast = Color(0xFF575059)
            override val outlineVariantLightMediumContrast = Color(0xFF726B74)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFF7EEF6)
            override val inversePrimaryLightMediumContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightMediumContrast = Color(0xFFCCC4CB)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFAF1F9)
            override val surfaceContainerLightMediumContrast = Color(0xFFEFE5ED)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFE3DAE2)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFD8CFD7)
            override val primaryLightHighContrast = Color(0xFF3D1E51)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF5C3C70)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF312259)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF4E4078)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF4C1F00)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF723A15)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF7FC)
            override val onBackgroundLightHighContrast = Color(0xFF1E1A20)
            override val surfaceLightHighContrast = Color(0xFFFFF7FC)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFEADFEA)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF302A32)
            override val outlineVariantLightHighContrast = Color(0xFF4E4750)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF332F35)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFE0B8F6)
            override val surfaceDimLightHighContrast = Color(0xFFBEB6BE)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF7FC)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFF7EEF6)
            override val surfaceContainerLightHighContrast = Color(0xFFE9E0E7)
            override val surfaceContainerHighLightHighContrast = Color(0xFFDAD2D9)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFCCC4CB)
            override val primaryDark = Color(0xFFE0B8F6)
            override val onPrimaryDark = Color(0xFF422356)
            override val primaryContainerDark = Color(0xFF5A396E)
            override val onPrimaryContainerDark = Color(0xFFF4D9FF)
            override val secondaryDark = Color(0xFFCEBDFE)
            override val onSecondaryDark = Color(0xFF35275D)
            override val secondaryContainerDark = Color(0xFF4C3E76)
            override val onSecondaryContainerDark = Color(0xFFE8DDFF)
            override val tertiaryDark = Color(0xFFFFB68D)
            override val onTertiaryDark = Color(0xFF532200)
            override val tertiaryContainerDark = Color(0xFF6F3813)
            override val onTertiaryContainerDark = Color(0xFFFFDBC9)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF161217)
            override val onBackgroundDark = Color(0xFFE9E0E7)
            override val surfaceDark = Color(0xFF161217)
            override val onSurfaceDark = Color(0xFFE9E0E7)
            override val surfaceVariantDark = Color(0xFF4B454D)
            override val onSurfaceVariantDark = Color(0xFFCDC3CE)
            override val outlineDark = Color(0xFF978E98)
            override val outlineVariantDark = Color(0xFF4B454D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDark = Color(0xFF332F35)
            override val inversePrimaryDark = Color(0xFF735187)
            override val surfaceDimDark = Color(0xFF161217)
            override val surfaceBrightDark = Color(0xFF3C383D)
            override val surfaceContainerLowestDark = Color(0xFF100D12)
            override val surfaceContainerLowDark = Color(0xFF1E1A20)
            override val surfaceContainerDark = Color(0xFF221E24)
            override val surfaceContainerHighDark = Color(0xFF2D282E)
            override val surfaceContainerHighestDark = Color(0xFF383339)
            override val primaryDarkMediumContrast = Color(0xFFF1D2FF)
            override val onPrimaryDarkMediumContrast = Color(0xFF36174A)
            override val primaryContainerDarkMediumContrast = Color(0xFFA883BD)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFE2D6FF)
            override val onSecondaryDarkMediumContrast = Color(0xFF2A1B52)
            override val secondaryContainerDarkMediumContrast = Color(0xFF9788C5)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD3BD)
            override val onTertiaryDarkMediumContrast = Color(0xFF421A00)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFC87F54)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF161217)
            override val onBackgroundDarkMediumContrast = Color(0xFFE9E0E7)
            override val surfaceDarkMediumContrast = Color(0xFF161217)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFE4D9E4)
            override val outlineDarkMediumContrast = Color(0xFFB8AFB9)
            override val outlineVariantDarkMediumContrast = Color(0xFF968E97)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D292E)
            override val inversePrimaryDarkMediumContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkMediumContrast = Color(0xFF161217)
            override val surfaceBrightDarkMediumContrast = Color(0xFF484349)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF09060B)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF201C22)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2B262C)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF363137)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF413C42)
            override val primaryDarkHighContrast = Color(0xFFFBEBFF)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFDCB4F2)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF170028)
            override val secondaryDarkHighContrast = Color(0xFFF5EDFF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFCAB9FA)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF0E0033)
            override val tertiaryDarkHighContrast = Color(0xFFFFECE4)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFFFB184)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF190600)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF161217)
            override val onBackgroundDarkHighContrast = Color(0xFFE9E0E7)
            override val surfaceDarkHighContrast = Color(0xFF161217)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF4B454D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFF8EDF8)
            override val outlineVariantDarkHighContrast = Color(0xFFC9BFCA)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFE9E0E7)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF5B3B6F)
            override val surfaceDimDarkHighContrast = Color(0xFF161217)
            override val surfaceBrightDarkHighContrast = Color(0xFF544E55)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF221E24)
            override val surfaceContainerDarkHighContrast = Color(0xFF332F35)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF3F3A40)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF4A454B)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("violet", "Violet")
    override val themes by lazy {
        listOf(Analogic, Mono, Tetrade, Triade)
    }
}