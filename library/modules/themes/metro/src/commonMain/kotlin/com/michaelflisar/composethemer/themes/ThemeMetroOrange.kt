package com.michaelflisar.composethemer.themes

import androidx.compose.ui.graphics.Color
import com.michaelflisar.composethemer.ComposeThemeColors
import com.michaelflisar.composethemer.*
import com.michaelflisar.composethemer.base.BaseTheme

object ThemeMetroOrange : ComposeTheme.Group {

    override val collection = MetroThemes
    override val groupKey = ComposeTheme.Key("orange", "Orange")
    override val themes = listOf(Analogic, Mono, Tetrade, Triade)

    private object Colors {
        // colors begin
        object Analogic : ComposeThemeColors {
            override val primaryLight = Color(0xFF8D4D2D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCC)
            override val onPrimaryContainerLight = Color(0xFF703718)
            override val secondaryLight = Color(0xFF8B4F24)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDCC7)
            override val onSecondaryContainerLight = Color(0xFF6E390E)
            override val tertiaryLight = Color(0xFF7E570E)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDDAF)
            override val onTertiaryContainerLight = Color(0xFF614000)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF221A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF221A16)
            override val surfaceVariantLight = Color(0xFFF4DED5)
            override val onSurfaceVariantLight = Color(0xFF52443D)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD7C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE6)
            override val inversePrimaryLight = Color(0xFFFFB694)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EB)
            override val surfaceContainerLight = Color(0xFFFCEAE3)
            override val surfaceContainerHighLight = Color(0xFFF6E5DE)
            override val surfaceContainerHighestLight = Color(0xFFF0DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C2709)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9F5C3A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF592900)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9C5E31)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF4B3100)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF8F651E)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF221A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332D)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6962)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE6)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB694)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E5DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D02)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73391A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4A2100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF713B10)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF3E2800)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF644300)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF221A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB694)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE6)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB694)
            override val onPrimaryDark = Color(0xFF542104)
            override val primaryContainerDark = Color(0xFF703718)
            override val onPrimaryContainerDark = Color(0xFFFFDBCC)
            override val secondaryDark = Color(0xFFFFB787)
            override val onSecondaryDark = Color(0xFF502400)
            override val secondaryContainerDark = Color(0xFF6E390E)
            override val onSecondaryContainerDark = Color(0xFFFFDCC7)
            override val tertiaryDark = Color(0xFFF2BE6E)
            override val onTertiaryDark = Color(0xFF442C00)
            override val tertiaryContainerDark = Color(0xFF614000)
            override val onTertiaryContainerDark = Color(0xFFFFDDAF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A120E)
            override val onBackgroundDark = Color(0xFFF0DFD8)
            override val surfaceDark = Color(0xFF1A120E)
            override val onSurfaceDark = Color(0xFFF0DFD8)
            override val surfaceVariantDark = Color(0xFF52443D)
            override val onSurfaceVariantDark = Color(0xFFD7C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF52443D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8D4D2D)
            override val surfaceDimDark = Color(0xFF1A120E)
            override val surfaceBrightDark = Color(0xFF423732)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF221A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D332E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C0)
            override val onPrimaryDarkMediumContrast = Color(0xFF451700)
            override val primaryContainerDarkMediumContrast = Color(0xFFC97E5A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onSecondaryDarkMediumContrast = Color(0xFF401B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC68050)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD69B)
            override val onTertiaryDarkMediumContrast = Color(0xFF362200)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFB7893E)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A120E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A120E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723819)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB17D)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF180700)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDD9)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFEEBA6A)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF130900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A120E)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A120E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723819)
            override val surfaceDimDarkHighContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        object Mono : ComposeThemeColors {
            override val primaryLight = Color(0xFF8D4D2D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCC)
            override val onPrimaryContainerLight = Color(0xFF703718)
            override val secondaryLight = Color(0xFF8B4F24)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDCC7)
            override val onSecondaryContainerLight = Color(0xFF6E390E)
            override val tertiaryLight = Color(0xFF835414)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFFFDDBA)
            override val onTertiaryContainerLight = Color(0xFF663D00)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF221A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF221A16)
            override val surfaceVariantLight = Color(0xFFF4DED5)
            override val onSurfaceVariantLight = Color(0xFF52443D)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD7C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE6)
            override val inversePrimaryLight = Color(0xFFFFB694)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EB)
            override val surfaceContainerLight = Color(0xFFFCEAE3)
            override val surfaceContainerHighLight = Color(0xFFF6E5DE)
            override val surfaceContainerHighestLight = Color(0xFFF0DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C2709)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9F5C3A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF592900)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9C5E31)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF502F00)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF946323)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF221A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332D)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6962)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE6)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB694)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E5DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D02)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73391A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4A2100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF713B10)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF422600)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF6A4000)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF221A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB694)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE6)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB694)
            override val onPrimaryDark = Color(0xFF542104)
            override val primaryContainerDark = Color(0xFF703718)
            override val onPrimaryContainerDark = Color(0xFFFFDBCC)
            override val secondaryDark = Color(0xFFFFB787)
            override val onSecondaryDark = Color(0xFF502400)
            override val secondaryContainerDark = Color(0xFF6E390E)
            override val onSecondaryContainerDark = Color(0xFFFFDCC7)
            override val tertiaryDark = Color(0xFFF9BA72)
            override val onTertiaryDark = Color(0xFF482A00)
            override val tertiaryContainerDark = Color(0xFF663D00)
            override val onTertiaryContainerDark = Color(0xFFFFDDBA)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A120E)
            override val onBackgroundDark = Color(0xFFF0DFD8)
            override val surfaceDark = Color(0xFF1A120E)
            override val onSurfaceDark = Color(0xFFF0DFD8)
            override val surfaceVariantDark = Color(0xFF52443D)
            override val onSurfaceVariantDark = Color(0xFFD7C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF52443D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8D4D2D)
            override val surfaceDimDark = Color(0xFF1A120E)
            override val surfaceBrightDark = Color(0xFF423732)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF221A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D332E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C0)
            override val onPrimaryDarkMediumContrast = Color(0xFF451700)
            override val primaryContainerDarkMediumContrast = Color(0xFFC97E5A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onSecondaryDarkMediumContrast = Color(0xFF401B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC68050)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFFFD5A9)
            override val onTertiaryDarkMediumContrast = Color(0xFF392000)
            override val tertiaryContainerDarkMediumContrast = Color(0xFFBD8642)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A120E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A120E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723819)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB17D)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF180700)
            override val tertiaryDarkHighContrast = Color(0xFFFFEDDD)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFF5B76E)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF150900)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A120E)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A120E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723819)
            override val surfaceDimDarkHighContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        object Tetrade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8D4D2D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCC)
            override val onPrimaryContainerLight = Color(0xFF703718)
            override val secondaryLight = Color(0xFF33618D)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFD0E4FF)
            override val onSecondaryContainerLight = Color(0xFF154974)
            override val tertiaryLight = Color(0xFF32628D)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFCFE5FF)
            override val onTertiaryContainerLight = Color(0xFF134A74)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF221A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF221A16)
            override val surfaceVariantLight = Color(0xFFF4DED5)
            override val onSurfaceVariantLight = Color(0xFF52443D)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD7C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE6)
            override val inversePrimaryLight = Color(0xFFFFB694)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EB)
            override val surfaceContainerLight = Color(0xFFFCEAE3)
            override val surfaceContainerHighLight = Color(0xFFF6E5DE)
            override val surfaceContainerHighestLight = Color(0xFFF0DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C2709)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9F5C3A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF00385F)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF43709D)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF00395E)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF42709D)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF221A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332D)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6962)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE6)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB694)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E5DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D02)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73391A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF002E4F)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF184C76)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF002E4E)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF174C76)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF221A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB694)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE6)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB694)
            override val onPrimaryDark = Color(0xFF542104)
            override val primaryContainerDark = Color(0xFF703718)
            override val onPrimaryContainerDark = Color(0xFFFFDBCC)
            override val secondaryDark = Color(0xFF9ECAFC)
            override val onSecondaryDark = Color(0xFF003256)
            override val secondaryContainerDark = Color(0xFF154974)
            override val onSecondaryContainerDark = Color(0xFFD0E4FF)
            override val tertiaryDark = Color(0xFF9DCBFC)
            override val onTertiaryDark = Color(0xFF003355)
            override val tertiaryContainerDark = Color(0xFF134A74)
            override val onTertiaryContainerDark = Color(0xFFCFE5FF)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A120E)
            override val onBackgroundDark = Color(0xFFF0DFD8)
            override val surfaceDark = Color(0xFF1A120E)
            override val onSurfaceDark = Color(0xFFF0DFD8)
            override val surfaceVariantDark = Color(0xFF52443D)
            override val onSurfaceVariantDark = Color(0xFFD7C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF52443D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8D4D2D)
            override val surfaceDimDark = Color(0xFF1A120E)
            override val surfaceBrightDark = Color(0xFF423732)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF221A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D332E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C0)
            override val onPrimaryDarkMediumContrast = Color(0xFF451700)
            override val primaryContainerDarkMediumContrast = Color(0xFFC97E5A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFC5DFFF)
            override val onSecondaryDarkMediumContrast = Color(0xFF002745)
            override val secondaryContainerDarkMediumContrast = Color(0xFF6894C3)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFC4DFFF)
            override val onTertiaryDarkMediumContrast = Color(0xFF002744)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF6794C3)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A120E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A120E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723819)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFE8F1FF)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFF9AC6F8)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF000C1A)
            override val tertiaryDarkHighContrast = Color(0xFFE7F1FF)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFF99C7F8)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF000C1A)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A120E)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A120E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723819)
            override val surfaceDimDarkHighContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        object Triade : ComposeThemeColors {
            override val primaryLight = Color(0xFF8D4D2D)
            override val onPrimaryLight = Color(0xFFFFFFFF)
            override val primaryContainerLight = Color(0xFFFFDBCC)
            override val onPrimaryContainerLight = Color(0xFF703718)
            override val secondaryLight = Color(0xFF8B4F24)
            override val onSecondaryLight = Color(0xFFFFFFFF)
            override val secondaryContainerLight = Color(0xFFFFDCC7)
            override val onSecondaryContainerLight = Color(0xFF6E390E)
            override val tertiaryLight = Color(0xFF416834)
            override val onTertiaryLight = Color(0xFFFFFFFF)
            override val tertiaryContainerLight = Color(0xFFC2EFAE)
            override val onTertiaryContainerLight = Color(0xFF2A4F1F)
            override val errorLight = Color(0xFFBA1A1A)
            override val onErrorLight = Color(0xFFFFFFFF)
            override val errorContainerLight = Color(0xFFFFDAD6)
            override val onErrorContainerLight = Color(0xFF93000A)
            override val backgroundLight = Color(0xFFFFF8F6)
            override val onBackgroundLight = Color(0xFF221A16)
            override val surfaceLight = Color(0xFFFFF8F6)
            override val onSurfaceLight = Color(0xFF221A16)
            override val surfaceVariantLight = Color(0xFFF4DED5)
            override val onSurfaceVariantLight = Color(0xFF52443D)
            override val outlineLight = Color(0xFF85736C)
            override val outlineVariantLight = Color(0xFFD7C2BA)
            override val scrimLight = Color(0xFF000000)
            override val inverseSurfaceLight = Color(0xFF382E2A)
            override val inverseOnSurfaceLight = Color(0xFFFFEDE6)
            override val inversePrimaryLight = Color(0xFFFFB694)
            override val surfaceDimLight = Color(0xFFE8D6D0)
            override val surfaceBrightLight = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLight = Color(0xFFFFFFFF)
            override val surfaceContainerLowLight = Color(0xFFFFF1EB)
            override val surfaceContainerLight = Color(0xFFFCEAE3)
            override val surfaceContainerHighLight = Color(0xFFF6E5DE)
            override val surfaceContainerHighestLight = Color(0xFFF0DFD8)
            override val primaryLightMediumContrast = Color(0xFF5C2709)
            override val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightMediumContrast = Color(0xFF9F5C3A)
            override val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryLightMediumContrast = Color(0xFF592900)
            override val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightMediumContrast = Color(0xFF9C5E31)
            override val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryLightMediumContrast = Color(0xFF1A3E0F)
            override val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightMediumContrast = Color(0xFF507742)
            override val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val errorLightMediumContrast = Color(0xFF740006)
            override val onErrorLightMediumContrast = Color(0xFFFFFFFF)
            override val errorContainerLightMediumContrast = Color(0xFFCF2C27)
            override val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
            override val backgroundLightMediumContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightMediumContrast = Color(0xFF221A16)
            override val surfaceLightMediumContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightMediumContrast = Color(0xFF170F0C)
            override val surfaceVariantLightMediumContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightMediumContrast = Color(0xFF41332D)
            override val outlineLightMediumContrast = Color(0xFF5F4F49)
            override val outlineVariantLightMediumContrast = Color(0xFF7B6962)
            override val scrimLightMediumContrast = Color(0xFF000000)
            override val inverseSurfaceLightMediumContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDE6)
            override val inversePrimaryLightMediumContrast = Color(0xFFFFB694)
            override val surfaceDimLightMediumContrast = Color(0xFFD4C3BD)
            override val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightMediumContrast = Color(0xFFFFF1EB)
            override val surfaceContainerLightMediumContrast = Color(0xFFF6E5DE)
            override val surfaceContainerHighLightMediumContrast = Color(0xFFEBD9D3)
            override val surfaceContainerHighestLightMediumContrast = Color(0xFFDFCEC8)
            override val primaryLightHighContrast = Color(0xFF4F1D02)
            override val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
            override val primaryContainerLightHighContrast = Color(0xFF73391A)
            override val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryLightHighContrast = Color(0xFF4A2100)
            override val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
            override val secondaryContainerLightHighContrast = Color(0xFF713B10)
            override val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryLightHighContrast = Color(0xFF0F3306)
            override val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
            override val tertiaryContainerLightHighContrast = Color(0xFF2D5221)
            override val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
            override val errorLightHighContrast = Color(0xFF600004)
            override val onErrorLightHighContrast = Color(0xFFFFFFFF)
            override val errorContainerLightHighContrast = Color(0xFF98000A)
            override val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
            override val backgroundLightHighContrast = Color(0xFFFFF8F6)
            override val onBackgroundLightHighContrast = Color(0xFF221A16)
            override val surfaceLightHighContrast = Color(0xFFFFF8F6)
            override val onSurfaceLightHighContrast = Color(0xFF000000)
            override val surfaceVariantLightHighContrast = Color(0xFFF4DED5)
            override val onSurfaceVariantLightHighContrast = Color(0xFF000000)
            override val outlineLightHighContrast = Color(0xFF362924)
            override val outlineVariantLightHighContrast = Color(0xFF554640)
            override val scrimLightHighContrast = Color(0xFF000000)
            override val inverseSurfaceLightHighContrast = Color(0xFF382E2A)
            override val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
            override val inversePrimaryLightHighContrast = Color(0xFFFFB694)
            override val surfaceDimLightHighContrast = Color(0xFFC6B5AF)
            override val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
            override val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
            override val surfaceContainerLowLightHighContrast = Color(0xFFFFEDE6)
            override val surfaceContainerLightHighContrast = Color(0xFFF0DFD8)
            override val surfaceContainerHighLightHighContrast = Color(0xFFE2D1CA)
            override val surfaceContainerHighestLightHighContrast = Color(0xFFD4C3BD)
            override val primaryDark = Color(0xFFFFB694)
            override val onPrimaryDark = Color(0xFF542104)
            override val primaryContainerDark = Color(0xFF703718)
            override val onPrimaryContainerDark = Color(0xFFFFDBCC)
            override val secondaryDark = Color(0xFFFFB787)
            override val onSecondaryDark = Color(0xFF502400)
            override val secondaryContainerDark = Color(0xFF6E390E)
            override val onSecondaryContainerDark = Color(0xFFFFDCC7)
            override val tertiaryDark = Color(0xFFA7D394)
            override val onTertiaryDark = Color(0xFF14380A)
            override val tertiaryContainerDark = Color(0xFF2A4F1F)
            override val onTertiaryContainerDark = Color(0xFFC2EFAE)
            override val errorDark = Color(0xFFFFB4AB)
            override val onErrorDark = Color(0xFF690005)
            override val errorContainerDark = Color(0xFF93000A)
            override val onErrorContainerDark = Color(0xFFFFDAD6)
            override val backgroundDark = Color(0xFF1A120E)
            override val onBackgroundDark = Color(0xFFF0DFD8)
            override val surfaceDark = Color(0xFF1A120E)
            override val onSurfaceDark = Color(0xFFF0DFD8)
            override val surfaceVariantDark = Color(0xFF52443D)
            override val onSurfaceVariantDark = Color(0xFFD7C2BA)
            override val outlineDark = Color(0xFFA08D85)
            override val outlineVariantDark = Color(0xFF52443D)
            override val scrimDark = Color(0xFF000000)
            override val inverseSurfaceDark = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDark = Color(0xFF382E2A)
            override val inversePrimaryDark = Color(0xFF8D4D2D)
            override val surfaceDimDark = Color(0xFF1A120E)
            override val surfaceBrightDark = Color(0xFF423732)
            override val surfaceContainerLowestDark = Color(0xFF140C09)
            override val surfaceContainerLowDark = Color(0xFF221A16)
            override val surfaceContainerDark = Color(0xFF271E1A)
            override val surfaceContainerHighDark = Color(0xFF322824)
            override val surfaceContainerHighestDark = Color(0xFF3D332E)
            override val primaryDarkMediumContrast = Color(0xFFFFD3C0)
            override val onPrimaryDarkMediumContrast = Color(0xFF451700)
            override val primaryContainerDarkMediumContrast = Color(0xFFC97E5A)
            override val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
            override val secondaryDarkMediumContrast = Color(0xFFFFD4B9)
            override val onSecondaryDarkMediumContrast = Color(0xFF401B00)
            override val secondaryContainerDarkMediumContrast = Color(0xFFC68050)
            override val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
            override val tertiaryDarkMediumContrast = Color(0xFFBCE9A8)
            override val onTertiaryDarkMediumContrast = Color(0xFF072D01)
            override val tertiaryContainerDarkMediumContrast = Color(0xFF729C62)
            override val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
            override val errorDarkMediumContrast = Color(0xFFFFD2CC)
            override val onErrorDarkMediumContrast = Color(0xFF540003)
            override val errorContainerDarkMediumContrast = Color(0xFFFF5449)
            override val onErrorContainerDarkMediumContrast = Color(0xFF000000)
            override val backgroundDarkMediumContrast = Color(0xFF1A120E)
            override val onBackgroundDarkMediumContrast = Color(0xFFF0DFD8)
            override val surfaceDarkMediumContrast = Color(0xFF1A120E)
            override val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkMediumContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkMediumContrast = Color(0xFFEED8CF)
            override val outlineDarkMediumContrast = Color(0xFFC2AEA5)
            override val outlineVariantDarkMediumContrast = Color(0xFF9F8C85)
            override val scrimDarkMediumContrast = Color(0xFF000000)
            override val inverseSurfaceDarkMediumContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkMediumContrast = Color(0xFF322824)
            override val inversePrimaryDarkMediumContrast = Color(0xFF723819)
            override val surfaceDimDarkMediumContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkMediumContrast = Color(0xFF4D423D)
            override val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0604)
            override val surfaceContainerLowDarkMediumContrast = Color(0xFF251C18)
            override val surfaceContainerDarkMediumContrast = Color(0xFF2F2622)
            override val surfaceContainerHighDarkMediumContrast = Color(0xFF3B302C)
            override val surfaceContainerHighestDarkMediumContrast = Color(0xFF463B37)
            override val primaryDarkHighContrast = Color(0xFFFFECE5)
            override val onPrimaryDarkHighContrast = Color(0xFF000000)
            override val primaryContainerDarkHighContrast = Color(0xFFFFB08B)
            override val onPrimaryContainerDarkHighContrast = Color(0xFF1B0500)
            override val secondaryDarkHighContrast = Color(0xFFFFECE3)
            override val onSecondaryDarkHighContrast = Color(0xFF000000)
            override val secondaryContainerDarkHighContrast = Color(0xFFFFB17D)
            override val onSecondaryContainerDarkHighContrast = Color(0xFF180700)
            override val tertiaryDarkHighContrast = Color(0xFFCFFDBA)
            override val onTertiaryDarkHighContrast = Color(0xFF000000)
            override val tertiaryContainerDarkHighContrast = Color(0xFFA3CF90)
            override val onTertiaryContainerDarkHighContrast = Color(0xFF010F00)
            override val errorDarkHighContrast = Color(0xFFFFECE9)
            override val onErrorDarkHighContrast = Color(0xFF000000)
            override val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
            override val onErrorContainerDarkHighContrast = Color(0xFF220001)
            override val backgroundDarkHighContrast = Color(0xFF1A120E)
            override val onBackgroundDarkHighContrast = Color(0xFFF0DFD8)
            override val surfaceDarkHighContrast = Color(0xFF1A120E)
            override val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
            override val surfaceVariantDarkHighContrast = Color(0xFF52443D)
            override val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
            override val outlineDarkHighContrast = Color(0xFFFFECE5)
            override val outlineVariantDarkHighContrast = Color(0xFFD3BEB6)
            override val scrimDarkHighContrast = Color(0xFF000000)
            override val inverseSurfaceDarkHighContrast = Color(0xFFF0DFD8)
            override val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
            override val inversePrimaryDarkHighContrast = Color(0xFF723819)
            override val surfaceDimDarkHighContrast = Color(0xFF1A120E)
            override val surfaceBrightDarkHighContrast = Color(0xFF594E49)
            override val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
            override val surfaceContainerLowDarkHighContrast = Color(0xFF271E1A)
            override val surfaceContainerDarkHighContrast = Color(0xFF382E2A)
            override val surfaceContainerHighDarkHighContrast = Color(0xFF443935)
            override val surfaceContainerHighestDarkHighContrast = Color(0xFF504440)
        }
        // colors end
    }

    // themes begin
    object Analogic : BaseTheme(ComposeTheme.Key("analogic", "Analogic"), this, Colors.Analogic)
    object Mono : BaseTheme(ComposeTheme.Key("mono", "Mono"), this, Colors.Mono)
    object Tetrade : BaseTheme(ComposeTheme.Key("tetrade", "Tetrade"), this, Colors.Tetrade)
    object Triade : BaseTheme(ComposeTheme.Key("triade", "Triade"), this, Colors.Triade)
    // themes end
}